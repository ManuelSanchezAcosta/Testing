/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';
import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@ngx-loading-bar/core';
var LoadingBarRouterModule = /** @class */ (function () {
    function LoadingBarRouterModule(router, loadingBar) {
        var _this = this;
        router.events.subscribe(function (event) {
            /** @type {?} */
            var state = _this.getCurrentNavigationState(router);
            if (state && state.ignoreLoadingBar) {
                return;
            }
            if (event instanceof NavigationStart) {
                loadingBar.start();
            }
            if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {
                loadingBar.complete();
            }
        });
    }
    /**
     * @private
     * @param {?} router
     * @return {?}
     */
    LoadingBarRouterModule.prototype.getCurrentNavigationState = /**
     * @private
     * @param {?} router
     * @return {?}
     */
    function (router) {
        // `getCurrentNavigation` only available in angular `7.2`
        /** @type {?} */
        var currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();
        if (currentNavigation && currentNavigation.extras) {
            return currentNavigation.extras.state;
        }
        return {};
    };
    /** @nocollapse */
    LoadingBarRouterModule.ctorParameters = function () { return [
        { type: Router },
        { type: LoadingBarService }
    ]; };
LoadingBarRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarRouterModule });
LoadingBarRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LoadingBarRouterModule_Factory(t) { return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService)); }, imports: [[
            RouterModule,
            LoadingBarModule,
        ], RouterModule,
        LoadingBarModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, { imports: function () { return [RouterModule,
        LoadingBarModule]; }, exports: function () { return [RouterModule,
        LoadingBarModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    RouterModule,
                    LoadingBarModule,
                ],
                exports: [
                    RouterModule,
                    LoadingBarModule,
                ]
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.LoadingBarService }]; }, null); })();
    return LoadingBarRouterModule;
}());
export { LoadingBarRouterModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQG5neC1sb2FkaW5nLWJhci9yb3V0ZXIvcm91dGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzFILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0FBRTVFO0FBR2UsSUFRYixnQ0FBWSxNQUFjLEVBQUUsVUFBNkI7QUFDM0QsUUFERSxpQkFlQztBQUNILFFBZkksTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBQSxLQUFLO0FBQUk7QUFDVixnQkFBZixLQUFLLEdBQUcsS0FBSSxDQUFDLHlCQUF5QixDQUFDLE1BQU0sQ0FBQztBQUMxRCxZQUFNLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRTtBQUMzQyxnQkFBUSxPQUFPO0FBQ2YsYUFBTztBQUNQLFlBQ00sSUFBSSxLQUFLLFlBQVksZUFBZSxFQUFFO0FBQzVDLGdCQUFRLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUMzQixhQUFPO0FBQ1AsWUFDTSxJQUFJLENBQUMsS0FBSyxZQUFZLGVBQWUsSUFBSSxLQUFLLFlBQVksYUFBYSxJQUFJLEtBQUssWUFBWSxnQkFBZ0IsQ0FBQyxFQUFFO0FBQ3JILGdCQUFRLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUM5QixhQUFPO0FBQ1AsUUFBSSxDQUFDLENBQUMsQ0FBQztBQUNQLElBQUUsQ0FBQztBQUNIO0FBQ087QUFBZ0I7QUFBeUI7QUFDaEM7QUFBUSxJQURkLDBEQUF5QjtBQUFPO0FBQ25DO0FBQXlCO0FBQW1CO0FBQVEsSUFEekQsVUFBa0MsTUFBVztBQUMvQztBQUNJO0FBQXlCLFlBQW5CLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsSUFBSSxNQUFNLENBQUMsb0JBQW9CLEVBQUU7QUFDMUYsUUFBSSxJQUFJLGlCQUFpQixJQUFJLGlCQUFpQixDQUFDLE1BQU0sRUFBRTtBQUN2RCxZQUFNLE9BQU8saUJBQWlCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUM1QyxTQUFLO0FBQ0wsUUFDSSxPQUFPLEVBQUUsQ0FBQztBQUNkLElBQUUsQ0FBQyxDQTFCTTtBQUFDO21DQVZULFFBQVEsU0FBQyxwREFVdUI7T0FUL0IsT0FBTyxFQUFFLGhCQVVtRCxnQkFkdkMsTUFBTTtnQkFLekIsWUFBWSw1QkFMaUIsZ0JBQ04saUJBQWlCO0FBQUc7UUFLM0MsZ0JBQWdCLHVCQUNqQixzQkFDRCxPQUFPLEVBQUU7ZUFDUCxZQUFZLDBCQUNaLGdCQUFnQix1QkFDakIsbUJBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJHQVh1RDtBQUFDLElBdUN6RCw2QkFBQztBQUNBLENBREEsQUFyQ0QsSUFxQ0M7QUFDRCxTQTVCYSxzQkFBc0I7QUFDbEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlLCBSb3V0ZXIsIE5hdmlnYXRpb25TdGFydCwgTmF2aWdhdGlvbkVycm9yLCBOYXZpZ2F0aW9uRW5kLCBOYXZpZ2F0aW9uQ2FuY2VsIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IExvYWRpbmdCYXJNb2R1bGUsIExvYWRpbmdCYXJTZXJ2aWNlIH0gZnJvbSAnQG5neC1sb2FkaW5nLWJhci9jb3JlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIFJvdXRlck1vZHVsZSxcbiAgICBMb2FkaW5nQmFyTW9kdWxlLFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgUm91dGVyTW9kdWxlLFxuICAgIExvYWRpbmdCYXJNb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmdCYXJSb3V0ZXJNb2R1bGUge1xuICBjb25zdHJ1Y3Rvcihyb3V0ZXI6IFJvdXRlciwgbG9hZGluZ0JhcjogTG9hZGluZ0JhclNlcnZpY2UpIHtcbiAgICByb3V0ZXIuZXZlbnRzLnN1YnNjcmliZShldmVudCA9PiB7XG4gICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuZ2V0Q3VycmVudE5hdmlnYXRpb25TdGF0ZShyb3V0ZXIpO1xuICAgICAgaWYgKHN0YXRlICYmIHN0YXRlLmlnbm9yZUxvYWRpbmdCYXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uU3RhcnQpIHtcbiAgICAgICAgbG9hZGluZ0Jhci5zdGFydCgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoKGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVycm9yIHx8IGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCB8fCBldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25DYW5jZWwpKSB7XG4gICAgICAgIGxvYWRpbmdCYXIuY29tcGxldGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0Q3VycmVudE5hdmlnYXRpb25TdGF0ZShyb3V0ZXI6IGFueSkge1xuICAgIC8vIGBnZXRDdXJyZW50TmF2aWdhdGlvbmAgb25seSBhdmFpbGFibGUgaW4gYW5ndWxhciBgNy4yYFxuICAgIGNvbnN0IGN1cnJlbnROYXZpZ2F0aW9uID0gcm91dGVyLmdldEN1cnJlbnROYXZpZ2F0aW9uICYmIHJvdXRlci5nZXRDdXJyZW50TmF2aWdhdGlvbigpO1xuICAgIGlmIChjdXJyZW50TmF2aWdhdGlvbiAmJiBjdXJyZW50TmF2aWdhdGlvbi5leHRyYXMpIHtcbiAgICAgIHJldHVybiBjdXJyZW50TmF2aWdhdGlvbi5leHRyYXMuc3RhdGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4iXX0=