import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class TreeviewI18n {
}
TreeviewI18n.ɵfac = function TreeviewI18n_Factory(t) { return new (t || TreeviewI18n)(); };
TreeviewI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TreeviewI18n, factory: TreeviewI18n.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeviewI18n, [{
        type: Injectable
    }], null, null); })();
export class DefaultTreeviewI18n extends TreeviewI18n {
    getText(selection) {
        if (selection.uncheckedItems.length === 0) {
            if (selection.checkedItems.length > 0) {
                return this.getAllCheckboxText();
            }
            else {
                return '';
            }
        }
        switch (selection.checkedItems.length) {
            case 0:
                return 'Select options';
            case 1:
                return selection.checkedItems[0].text;
            default:
                return `${selection.checkedItems.length} options selected`;
        }
    }
    getAllCheckboxText() {
        return 'All';
    }
    getFilterPlaceholder() {
        return 'Filter';
    }
    getFilterNoItemsFoundText() {
        return 'No items found';
    }
    getTooltipCollapseExpandText(isCollapse) {
        return isCollapse ? 'Expand' : 'Collapse';
    }
}
DefaultTreeviewI18n.ɵfac = function DefaultTreeviewI18n_Factory(t) { return ɵDefaultTreeviewI18n_BaseFactory(t || DefaultTreeviewI18n); };
DefaultTreeviewI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DefaultTreeviewI18n, factory: DefaultTreeviewI18n.ɵfac });
const ɵDefaultTreeviewI18n_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(DefaultTreeviewI18n);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultTreeviewI18n, [{
        type: Injectable
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXZpZXctaTE4bi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRyZWV2aWV3L3NyYy9saWIvbW9kZWxzL3RyZWV2aWV3LWkxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFJM0MsTUFBTSxPQUFnQixZQUFZO0FBQ2xDOzBDQUZDLFVBQVU7Ozs7MEJBQ1Q7QUFTRixNQUFNLE9BQU8sbUJBQW9CLFNBQVEsWUFBWTtBQUNyRCxJQUFFLE9BQU8sQ0FBQyxTQUE0QjtBQUFLLFFBQ3ZDLElBQUksU0FBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0FBQy9DLFlBQU0sSUFBSSxTQUFTLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7QUFDN0MsZ0JBQVEsT0FBTyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztBQUN6QyxhQUFPO0FBQUUsaUJBQUk7QUFDYixnQkFBUSxPQUFPLEVBQUUsQ0FBQztBQUNsQixhQUFPO0FBQ1AsU0FBSztBQUNMLFFBQ0ksUUFBUSxTQUFTLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRTtBQUMzQyxZQUFNLEtBQUssQ0FBQztBQUNaLGdCQUFRLE9BQU8sZ0JBQWdCLENBQUM7QUFDaEMsWUFBTSxLQUFLLENBQUM7QUFDWixnQkFBUSxPQUFPLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQzlDLFlBQU07QUFDTixnQkFBUSxPQUFPLEdBQUcsU0FBUyxDQUFDLFlBQVksQ0FBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ25FLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSCxJQUNFLGtCQUFrQjtBQUFNLFFBQ3RCLE9BQU8sS0FBSyxDQUFDO0FBQ2pCLElBQUUsQ0FBQztBQUNILElBQ0Usb0JBQW9CO0FBQU0sUUFDeEIsT0FBTyxRQUFRLENBQUM7QUFDcEIsSUFBRSxDQUFDO0FBQ0gsSUFDRSx5QkFBeUI7QUFBTSxRQUM3QixPQUFPLGdCQUFnQixDQUFDO0FBQzVCLElBQUUsQ0FBQztBQUNILElBQ0UsNEJBQTRCLENBQUMsVUFBbUI7QUFBSyxRQUNuRCxPQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7QUFDOUMsSUFBRSxDQUFDO0FBQ0g7aURBcENDLFVBQVU7Ozs7OztBQVpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQW5DQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmVldmlld1NlbGVjdGlvbiB9IGZyb20gJy4vdHJlZXZpZXctaXRlbSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUcmVldmlld0kxOG4ge1xyXG4gIGFic3RyYWN0IGdldFRleHQoc2VsZWN0aW9uOiBUcmVldmlld1NlbGVjdGlvbik6IHN0cmluZztcclxuICBhYnN0cmFjdCBnZXRBbGxDaGVja2JveFRleHQoKTogc3RyaW5nO1xyXG4gIGFic3RyYWN0IGdldEZpbHRlclBsYWNlaG9sZGVyKCk6IHN0cmluZztcclxuICBhYnN0cmFjdCBnZXRGaWx0ZXJOb0l0ZW1zRm91bmRUZXh0KCk6IHN0cmluZztcclxuICBhYnN0cmFjdCBnZXRUb29sdGlwQ29sbGFwc2VFeHBhbmRUZXh0KGlzQ29sbGFwc2U6IGJvb2xlYW4pOiBzdHJpbmc7XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERlZmF1bHRUcmVldmlld0kxOG4gZXh0ZW5kcyBUcmVldmlld0kxOG4ge1xyXG4gIGdldFRleHQoc2VsZWN0aW9uOiBUcmVldmlld1NlbGVjdGlvbik6IHN0cmluZyB7XHJcbiAgICBpZiAoc2VsZWN0aW9uLnVuY2hlY2tlZEl0ZW1zLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICBpZiAoc2VsZWN0aW9uLmNoZWNrZWRJdGVtcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QWxsQ2hlY2tib3hUZXh0KCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3dpdGNoIChzZWxlY3Rpb24uY2hlY2tlZEl0ZW1zLmxlbmd0aCkge1xyXG4gICAgICBjYXNlIDA6XHJcbiAgICAgICAgcmV0dXJuICdTZWxlY3Qgb3B0aW9ucyc7XHJcbiAgICAgIGNhc2UgMTpcclxuICAgICAgICByZXR1cm4gc2VsZWN0aW9uLmNoZWNrZWRJdGVtc1swXS50ZXh0O1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiBgJHtzZWxlY3Rpb24uY2hlY2tlZEl0ZW1zLmxlbmd0aH0gb3B0aW9ucyBzZWxlY3RlZGA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXRBbGxDaGVja2JveFRleHQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiAnQWxsJztcclxuICB9XHJcblxyXG4gIGdldEZpbHRlclBsYWNlaG9sZGVyKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJ0ZpbHRlcic7XHJcbiAgfVxyXG5cclxuICBnZXRGaWx0ZXJOb0l0ZW1zRm91bmRUZXh0KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJ05vIGl0ZW1zIGZvdW5kJztcclxuICB9XHJcblxyXG4gIGdldFRvb2x0aXBDb2xsYXBzZUV4cGFuZFRleHQoaXNDb2xsYXBzZTogYm9vbGVhbik6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gaXNDb2xsYXBzZSA/ICdFeHBhbmQnIDogJ0NvbGxhcHNlJztcclxuICB9XHJcbn1cclxuIl19