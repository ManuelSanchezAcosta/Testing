/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import { NgbNav } from './nav';
/**
 * The outlet where currently active nav content will be displayed.
 *
 * \@since 5.2.0
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

var _c0 = ["ngbNavOutlet", ""];
function NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) { }
var _c1 = function (a0) { return { $implicit: a0 }; };
function NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, "ng-template", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("active", item_r1.active);
    ɵngcc0.ɵɵproperty("id", item_r1.panelDomId);
    ɵngcc0.ɵɵattribute("role", ctx_r2.paneRole ? ctx_r2.paneRole : ctx_r2.nav.roles ? "tabpanel" : undefined)("aria-labelledby", item_r1.domId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(7, _c1, item_r1.active));
} }
function NgbNavOutlet_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 9, "div", 1);
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", item_r1.isPanelInDom());
} }
var NgbNavOutlet = /** @class */ (function () {
    function NgbNavOutlet() {
    }
    NgbNavOutlet.propDecorators = {
        paneRole: [{ type: Input }],
        nav: [{ type: Input, args: ['ngbNavOutlet',] }]
    };
NgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) { return new (t || NgbNavOutlet)(); };
NgbNavOutlet.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbNavOutlet, selectors: [["", "ngbNavOutlet", ""]], hostVars: 2, hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("tab-content", true);
    } }, inputs: { paneRole: "paneRole", nav: ["ngbNavOutlet", "nav"] }, attrs: _c0, decls: 1, vars: 1, consts: [["ngFor", "", 3, "ngForOf"], ["class", "tab-pane", 3, "id", "active", 4, "ngIf"], [1, "tab-pane", 3, "id"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function NgbNavOutlet_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, "ng-template", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.nav.items);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavOutlet, [{
        type: Component,
        args: [{
                selector: '[ngbNavOutlet]',
                host: { '[class.tab-content]': 'true' },
                encapsulation: ViewEncapsulation.None,
                template: "\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\" [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  "
            }]
    }], function () { return []; }, { paneRole: [{
            type: Input
        }], nav: [{
            type: Input,
            args: ['ngbNavOutlet']
        }] }); })();
    return NgbNavOutlet;
}());
export { NgbNavOutlet };
if (false) {
    /**
     * A role to set on the nav pane
     * @type {?}
     */
    NgbNavOutlet.prototype.paneRole;
    /**
     * Reference to the `NgbNav`
     * @type {?}
     */
    NgbNavOutlet.prototype.nav;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LW91dGxldC5qcyIsInNvdXJjZXMiOlsiQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvbmF2L25hdi1vdXRsZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxPQUFPLENBQUM7QUFDN0I7QUFDRztBQUNnRTtBQUNqRTtBQUVGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBRUssSUFGTDtBQUNhLElBMEJiLENBQUMsQUFWTztBQUFDO1lBakJSLFNBQVMsU0FBQyw5QkFtQkEsMkJBRVIsS0FBSztlQXBCTixRQUFRLEVBQUUsZ0JBQWdCLHpDQW9CZixzQkFLVixLQUFLLFNBQUMsY0FBYztBQUFNO0FBeEIzQixJQUFJLEVBQUUsRUFBQyxxQkFBcUIsRUFBRSxNQUFNLEVBQUMsc0JBQ3JDLGFBQWEsRUFBRTtDQUFpQixDQUFDLElBQUksc0JBQ3JDLFFBQVEsRUFBRTs7O3lCQVdULGtCQUNGOzs7Ozs7Ozs7Ozs7Ozs7OztvQkFVa0M7QUFBQyxJQUNwQyxtQkFBQztBQUNBLENBREEsQUEzQkQsSUEyQkM7QUFDRCxTQVhhLFlBQVk7QUFDeEI7QUFDTztBQUFRO0FBRUo7QUFHWDtBQUFRLElBSFAsZ0NBQWtCO0FBQ3BCO0FBRUM7QUFDRTtBQUNXO0FBQVEsSUFBcEIsMkJBQW1DO0FBQ3JDO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9ufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TmdiTmF2fSBmcm9tICcuL25hdic7XG5cbi8qKlxuICogVGhlIG91dGxldCB3aGVyZSBjdXJyZW50bHkgYWN0aXZlIG5hdiBjb250ZW50IHdpbGwgYmUgZGlzcGxheWVkLlxuICpcbiAqIEBzaW5jZSA1LjIuMFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdbbmdiTmF2T3V0bGV0XScsXG4gIGhvc3Q6IHsnW2NsYXNzLnRhYi1jb250ZW50XSc6ICd0cnVlJ30sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIHRlbXBsYXRlOiBgXG4gICAgICA8bmctdGVtcGxhdGUgbmdGb3IgbGV0LWl0ZW0gW25nRm9yT2ZdPVwibmF2Lml0ZW1zXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRhYi1wYW5lXCJcbiAgICAgICAgICAgICAgICpuZ0lmPVwiaXRlbS5pc1BhbmVsSW5Eb20oKVwiXG4gICAgICAgICAgICAgICBbaWRdPVwiaXRlbS5wYW5lbERvbUlkXCJcbiAgICAgICAgICAgICAgIFtjbGFzcy5hY3RpdmVdPVwiaXRlbS5hY3RpdmVcIlxuICAgICAgICAgICAgICAgW2F0dHIucm9sZV09XCJwYW5lUm9sZSA/IHBhbmVSb2xlIDogbmF2LnJvbGVzID8gJ3RhYnBhbmVsJyA6IHVuZGVmaW5lZFwiXG4gICAgICAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsbGVkYnldPVwiaXRlbS5kb21JZFwiPlxuICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgW25nVGVtcGxhdGVPdXRsZXRdPVwiaXRlbS5jb250ZW50VHBsPy50ZW1wbGF0ZVJlZlwiIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7JGltcGxpY2l0OiBpdGVtLmFjdGl2ZX1cIj48L25nLXRlbXBsYXRlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBOZ2JOYXZPdXRsZXQge1xuICAvKipcbiAgICogQSByb2xlIHRvIHNldCBvbiB0aGUgbmF2IHBhbmVcbiAgICovXG4gIEBJbnB1dCgpIHBhbmVSb2xlO1xuXG4gIC8qKlxuICAgKiBSZWZlcmVuY2UgdG8gdGhlIGBOZ2JOYXZgXG4gICAqL1xuICBASW5wdXQoJ25nYk5hdk91dGxldCcpIG5hdjogTmdiTmF2O1xufVxuIl19