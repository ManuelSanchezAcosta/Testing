{"version":3,"file":"ngx-clipboard.umd.js","sources":["ngx-clipboard/lib/ngx-clipboard.service.ts","ngx-clipboard/lib/ngx-clipboard.directive.ts","ngx-clipboard/lib/ngx-clipboard-if-supported.directive.ts","ngx-clipboard/lib/ngx-clipboard.module.ts"],"names":["Subject","Injectable","Inject","DOCUMENT","Optional","WINDOW","EventEmitter","Directive","Input","Output","HostListener","ViewContainerRef","TemplateRef","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;AAAS;AAC+C;AASxD;AACoB,QAMhB,0BAAqC,QAAa,EAAsC,MAAW;AAAK,YAAnE,aAAQ,GAAR,QAAQ,CAAK;AAAE,YAAoC,WAAM,GAAN,MAAM,CAAK;AAAE,YAL7F,gBAAW,GAAG,IAAIA,YAAO,EAAsB,CAAC;AAC5D,YAAW,kBAAa,GAAmC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;AAC3F,YACY,WAAM,GAAoB,EAAE,CAAC;AACzC,SAC2G;AAC3G;AACW;AAA8B;AACzB;AAAa,QADlB,oCAAS;AAAQ;AACnB;AACP;AAEI,YAJF,UAAiB,MAAuB;AAC5C,gBAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,aAAK;AACJ;AACW;AACX;AAAwB;AAAa,QAD3B,+BAAI;AAAQ;AACX;AAAwB;AACjC,YAFC,UAAY,OAAe;AAAK,gBAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO,EAAE;AAC3C,oBAAY,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxE,iBAAS;AACT;AAAkC,oBAApB,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;AACxD,gBAAQ,IAAI,UAAU,EAAE;AACxB,oBAAY,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,OAAO,SAAA,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC7E,iBAAS;AACT,gBAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACpE,aAAK;AACJ,QACG,sBAAW,yCAAW;AAAK;AACnB;AAA4B,gBADpC;AAAe,gBACX,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AACvH,aAAK;AACJ;AAC6B;AAAgC,WAFzD;AACL;AACW;AAA+B;AAAwB;AAAa,QAApE,wCAAa;AAAQ;AAA+B;AAC9D;AAAa,YADV,UAAqB,OAA+C;AAAK,gBACrE,IAAI,OAAO,YAAY,gBAAgB,IAAI,OAAO,YAAY,mBAAmB,EAAE;AAC3F,oBAAY,IAAI,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;AAClD,wBAAgB,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;AACrH,qBAAa;AACb,oBAAY,OAAO,IAAI,CAAC;AACxB,iBAAS;AACT,gBAAQ,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;AAC9D,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AAAuD;AAC9E;AACiB;AAAwB;AAC9B,QAHD,+CAAoB;AAAQ;AAAuD;AAE7F;AAAgC;AACnB;AAAa,YAHvB,UAA4B,SAAiD,EAAE,OAAc;AAAK,gBAAnB,wBAAA;AAAG,oBAAH,cAAc;AAAG;AAC5F,gBAAA,IAAI;AACZ,oBAAY,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACzC;AAAsC,wBAApB,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE;AACtC,oBAAY,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,SAAS,GAAG,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9E,oBAAY,OAAO,EAAE,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACpD,iBAAS;AAAE,gBAAD,OAAO,KAAK,EAAE;AACxB,oBAAY,OAAO,KAAK,CAAC;AACzB,iBAAS;AACT,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AAC4B;AACrC;AAAa,QAFjB,8CAAmB;AAAQ;AAEjC;AAAwB;AAAa,YAFtC;AAAe;AACX,oBAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;AAC1D,gBAAQ,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,EAAE;AACpD,oBAAY,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAChD,wBAAgB,OAAO,KAAK,CAAC;AAC7B,qBAAa;AACb,iBAAS;AACT,gBAAQ,OAAO,IAAI,CAAC;AACpB,aAAK;AACJ;AAEE;AACI;AAEL;AAAa;AAAa;AACnB;AAAyC;AAChD;AAAkC;AAAwB;AAAa,QAF9D,0CAAe;AAAQ;AACnB;AAAyC;AAChD;AAAkC;AAAwB;AAAa,YAF3E,UAAuB,OAAe,EAAE,SAA2C;AAAK,gBAAhD,0BAAA;AAAG,oBAAH,YAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI;AAAG;AAClF;AACQ;AACQ,gBAAhB,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;AACzE,oBAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAC1D,iBAAS;AACT,gBACQ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAChC,oBAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACpF,oBAAY,IAAI;AAChB,wBAAgB,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACzD,qBAAa;AAAE,oBAAD,OAAO,KAAK,EAAE;AAC5B,wBAAgB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACrE,qBAAa;AACb,iBAAS;AACT,gBAAQ,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;AAC1C;AACgC,oBAAlB,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC;AAC5E,gBAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AAC1C,oBAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAC1D,iBAAS;AACT,gBAAQ,OAAO,QAAQ,CAAC;AACxB,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AACpB;AACA;AAAwB;AAAa,QAF9B,kCAAO;AAAQ;AACpB;AACA;AAAwB;AAAa,YAFvC,UAAe,SAA2C;AAAK,gBAAhD,0BAAA;AAAG,oBAAH,YAAyB,IAAI,CAAC,QAAQ,CAAC,IAAI;AAAG;AACtD,gBAAH,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,oBAAY,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACrD;AACQ,oBAAI,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC1C,iBAAS;AACT,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AAAkD;AAAqB;AAClE;AACR;AAAa,QAFtB,uCAAY;AAAQ;AAAkD;AACjF;AACI;AAAwB;AAAa,YAFtC,UAAqB,YAAoD;AAAK,gBAC1E,YAAY,CAAC,MAAM,EAAE,CAAC;AAC9B,gBAAQ,YAAY,CAAC,iBAAiB,CAAC,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACrE,gBAAQ,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;AACzC,aAAK;AACJ;AACW;AAAqB;AACX;AAAa,QADvB,mCAAQ;AAAQ;AACd;AAAwB;AACtC,YAFI;AAAe,gBACX,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACjD,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AACX;AAAqB;AACX;AACpB;AAGM;AAAa,QANV,yCAAc;AAAQ;AACX;AAAqB;AACX;AAG7B;AACe;AAAa,YAN5B,UAAuB,YAAoD,EAAE,MAAc;AAAK,gBAC5F,YAAY,IAAI,YAAY,CAAC,KAAK,EAAE,CAAC;AAC7C,gBAAQ,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,CAAC;AAChD,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AAAsD;AACjE;AAA2B;AAA8B;AAClD;AAAa,QAFrB,6CAAkB;AAAQ;AAChC;AAAqB;AAA2B;AAC5C;AAAwB;AACzB,YAHL,UAA2B,GAAa,EAAE,MAAc;AAAK;AACpD,oBAAC,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK;AACvE;AAAkC,oBAAtB,EAAuB;AACnC,gBAAQ,EAAE,GAAG,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAC3C;AACQ,gBAAA,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;AACnC;AACQ,gBAAA,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;AAC9B,gBAAQ,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;AAC/B,gBAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;AAC9B;AACQ,gBAAA,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACvC,gBAAQ,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;AACvD;AACQ;AAAkC,oBAA5B,SAAS,GAAG,MAAM,CAAC,WAAW,IAAI,GAAG,CAAC,eAAe,CAAC,SAAS;AAC7E,gBAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI,CAAC;AACxC,gBAAQ,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACxC,gBAAQ,OAAO,EAAE,CAAC;AAClB,aAAK;AACJ;AAEE;AACI;AAEL;AAAa;AAAa;AAEzB;AAGW;AAAgC;AAEnC;AAAa,QAPb,2CAAgB;AAAQ;AAIlC;AACoB;AAClB;AACe;AAAa,YAP3B,UAAwB,QAA4B;AAAK,gBACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,aAAK;AACJ;AAEE;AACI;AACI;AAAa;AACZ;AACV;AAEc;AAAa,QAJlB,0CAAe;AAAQ;AACZ;AAGpB;AAAwB;AAAa,YAJnC,UAAuB,QAA4B;AAAK,gBACpD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACxC,aAAK,CAhKQ;AAAE;iCADdC,aAAU,SAAC,vDAEF;AAFI,UAAU,EAAE,MAAM,EAAE,pBAG7B;AAAsB,wDAIVC,SAAM,SAACC,WAAQ;AAAU,wDAAeC,WAAQ,YAAIF,SAAM,SAACG,SAAM;AAAS;AAAgB;AAEnG;;;;;;;;;;;;;;kCAQH;AAAE,+BA3BP;AAAG,KAUH;AAAK;AAAC;AAAS;AACE;AAE2B;ACb5C;AAA2D,QA0BvD,4BAAoB,YAA8B;AAAK,YAAnC,iBAAY,GAAZ,YAAY,CAAkB;AAAE,YAJ7C,gBAAW,GAAqC,IAAIC,eAAY,EAAsB,CAAC;AAClG,YAEW,cAAS,GAAsB,IAAIA,eAAY,EAAO,CAAC;AAClE,SAA0D;AAC1D;AAEE;AAEkB;AACf;AAAwB;AAAa,QAH/B,qCAAQ;AAAI;AAGN;AAAiB;AAGjC;AAAiB,YANd,eAAoB;AACvB;AACW;AACJ;AAAa,QADV,wCAAW;AACpB;AAAwB;AAAa,YADnC;AAAe,gBACX,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClD,aAAK;AACJ;AACW;AAA6B;AACvB;AAAa,QAApB,oCAAO;AAAQ;AACP;AAAwB;AAClC,YAHL,UACe,KAAY;AAC/B,gBAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;AAC5C,oBAAY,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACvD,iBAAS;AAAE,qBAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACtF,oBAAY,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACnH,iBAAS;AAAE,qBAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACnC,oBAAY,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AACxH,iBAAS;AACT,aAAK;AACJ;AAEE;AACI;AAEL;AAAa;AAAa;AAA+D;AAC5E;AACb;AACE;AAGJ;AAAwB;AACb,QAPC,yCAAY;AAAQ;AAA+D;AAC5E;AACb;AACE;AAGJ;AACF;AAAa,YAPX,UAAqB,SAAkB,EAAE,aAAiC,EAAE,KAAY;AAC5F;AAAkC,oBAAtB,QAAQ,GAAuB;AAC3C,oBAAY,SAAS,EAAE,SAAS;AAChC,oBAAY,KAAK,OAAA;AACjB,iBAAS;AACT,gBACQ,IAAI,SAAS,EAAE;AACvB,oBAAY,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC/C,wBAAgB,OAAO,EAAE,aAAa;AACtC,wBAAgB,cAAc,EAAE,IAAI,CAAC,YAAY;AACjD,qBAAa,CAAC,CAAC;AACf,oBAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5C,iBAAS;AAAE,qBAAI;AACf,oBAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,iBAAS;AACT,gBACQ,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACrD,aAAK,CA3DQ;AAAE;mCAHdC,YAAS,SAAC,xDAGgC;AACL;EAHlC,QAAQ,EAAE,gBAAgB,5BAInB,wBAPF,gBAAgB;OAIxB,PAJ4B;AAAgB;AAAY;AAG9B,gCAItBC,QAAK,SAAC,cAAc;AACpB,gCACAA,QAAK;AACR,gCAEGA,QAAK;AACR,mCAEGA,QAAK;AACR,kCAEGC,SAAM;AACT,gCAEGA,SAAM;AACT,8BAUGC,eAAY,SAAC,OAAO,EAAE,CAAC,eAAe,CAAC;AACxC;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAU;AAAE,QAgChB,yBAAC;AACA,KAhED;AAAK;AAAC;AACL;AAEG;AAES;ACVb;AAAsE,QAQlE,uCACY,iBAAmC,EACnC,iBAAmC,EACnC,YAA8B;AAC3C,YAHa,sBAAiB,GAAjB,iBAAiB,CAAkB;AAAE,YACrC,sBAAiB,GAAjB,iBAAiB,CAAkB;AAAE,YACrC,iBAAY,GAAZ,YAAY,CAAkB;AAC9C,SAAQ;AACR;AACW;AACM;AAAa,QAD1B,gDAAQ;AACV;AAAwB;AAAa,YADnC;AACH,gBAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE;AAChD,oBAAY,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACzE,iBAAS;AACT,aAAK,CAXQ;AAAE;8CAHdH,YAAS,SAAC,nEAGgC;AAEZ;EAJ3B,QAAQ,EAAE,2BAA2B,vCAIY,wBAP5C,gBAAgB;iBAIxB,jBAJ6B,wBAFWI,mBAAgB;AAAK,wBAAlCC,cAAW;AAAI;AAAgB;;;;;;;;2IAAU;AAAE,QAmBvE,oCAAC;AACA,KAhBD;AAAK;AAAC;AACL;AAAuC;AAIP;ACTjC;AACO,QAKP;AACiB,SAIc;6DAL9BC,WAAQ;MAAC,2BACN,OAAO,EAAE,CAACC,eAAY,CAAC,2BACvB,YAAY,EAAE,CAAC,kBAAkB,EAAE,6BAA6B,CAAC;SACjE,OAAO,EAAE,CAAC,kBAAkB,EAAE,6BAA6B,CAAC,uBAC/D;;;;;;;;gDACY;AAAE,QAAe,sBAAC;AAC9B,KAND;AAAK;AAAC;AACJ;AACS;AACkD;AAC1D;AACH;AAAS;AACM;AAA0H;AAAQ;AAAC;AAAiD;AAAqD;AAA+C;AAA2E;AAAC;AAAmE;AAAC;;AHZA,AAUA,AAOA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AALA,AAAA,AAAA,AAAAdjKAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOAC,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAG,AAAA,AAjiCA,AAAA,AA/DA,ACLA,AAQA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAFA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAdAH,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAJA,AAAA,AAFAI,AAAA,AAAAC,AAAA,AAmBA,AAAA,AAfA,ACJA,AAMA,AAKA,AALAC,AAAA,AAAA,AACA,AAAA,AAAA,AAAAC,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AALA","sourcesContent":["import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { WINDOW } from 'ngx-window-token';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ClipboardParams, IClipboardResponse } from './interface';\r\n\r\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClipboardService {\r\n    private copySubject = new Subject<IClipboardResponse>();\r\n    public copyResponse$: Observable<IClipboardResponse> = this.copySubject.asObservable();\r\n    private tempTextArea: HTMLTextAreaElement | undefined;\r\n    private config: ClipboardParams = {};\r\n\r\n    constructor(@Inject(DOCUMENT) public document: any, @Optional() @Inject(WINDOW) private window: any) {}\r\n\r\n    public configure(config: ClipboardParams) {\r\n        this.config = config;\r\n    }\r\n\r\n    public copy(content: string): void {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content });\r\n        }\r\n        const copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content });\r\n    }\r\n\r\n    public get isSupported(): boolean {\r\n        return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n    }\r\n\r\n    public isTargetValid(element: HTMLInputElement | HTMLTextAreaElement): boolean {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    }\r\n\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    public copyFromInputElement(targetElm: HTMLInputElement | HTMLTextAreaElement, isFocus = true): boolean {\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            const re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    public isCopySuccessInIE11(): boolean {\r\n        const clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    public copyFromContent(content: string, container: HTMLElement = this.document.body): boolean {\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            } catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n\r\n        const toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    public destroy(container: HTMLElement = this.document.body): void {\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    private selectTarget(inputElement: HTMLInputElement | HTMLTextAreaElement): number | undefined {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    }\r\n\r\n    private copyText(): boolean {\r\n        return this.document.execCommand('copy');\r\n    }\r\n\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    private clearSelection(inputElement: HTMLInputElement | HTMLTextAreaElement, window: Window): void {\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    }\r\n\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    private createTempTextArea(doc: Document, window: Window): HTMLTextAreaElement {\r\n        const isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        let ta: HTMLTextAreaElement;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        const yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    }\r\n\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    public pushCopyResponse(response: IClipboardResponse): void {\r\n        this.copySubject.next(response);\r\n    }\r\n\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    public pushCopyReponse(response: IClipboardResponse): void {\r\n        this.pushCopyResponse(response);\r\n    }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\n\r\nimport { IClipboardResponse } from './interface';\r\nimport { ClipboardService } from './ngx-clipboard.service';\r\n\r\n@Directive({\r\n    selector: '[ngxClipboard]'\r\n})\r\nexport class ClipboardDirective implements OnInit, OnDestroy {\r\n    // tslint:disable-next-line:no-input-rename\r\n    @Input('ngxClipboard')\r\n    public targetElm: HTMLInputElement | HTMLTextAreaElement;\r\n    @Input()\r\n    public container: HTMLElement;\r\n\r\n    @Input()\r\n    public cbContent: string;\r\n\r\n    @Input()\r\n    public cbSuccessMsg: string;\r\n\r\n    @Output()\r\n    public cbOnSuccess: EventEmitter<IClipboardResponse> = new EventEmitter<IClipboardResponse>();\r\n\r\n    @Output()\r\n    public cbOnError: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor(private clipboardSrv: ClipboardService) {}\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    public ngOnInit() {}\r\n\r\n    public ngOnDestroy() {\r\n        this.clipboardSrv.destroy(this.container);\r\n    }\r\n\r\n    @HostListener('click', ['$event.target'])\r\n    public onClick(event: Event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        } else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        } else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    private handleResult(succeeded: boolean, copiedContent: string | undefined, event: Event) {\r\n        let response: IClipboardResponse = {\r\n            isSuccess: succeeded,\r\n            event\r\n        };\r\n\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        } else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    }\r\n}\r\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { ClipboardService } from './ngx-clipboard.service';\r\n\r\n@Directive({\r\n    selector: '[ngxClipboardIfSupported]'\r\n})\r\nexport class ClipboardIfSupportedDirective implements OnInit {\r\n    constructor(\r\n        private _clipboardService: ClipboardService,\r\n        private _viewContainerRef: ViewContainerRef,\r\n        private _templateRef: TemplateRef<any>\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ClipboardIfSupportedDirective } from './ngx-clipboard-if-supported.directive';\r\nimport { ClipboardDirective } from './ngx-clipboard.directive';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\r\n    exports: [ClipboardDirective, ClipboardIfSupportedDirective]\r\n})\r\nexport class ClipboardModule {}\r\n"]}