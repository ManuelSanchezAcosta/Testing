{"version":3,"file":"ngx-highlightjs-plus.umd.js","sources":["ngx-highlightjs/plus/gist.model.ts","ngx-highlightjs/plus/code-loader.ts","ngx-highlightjs/plus/gist.ts","ngx-highlightjs/plus/code-from-url.ts","ngx-highlightjs/plus/highlight-plus.module.ts"],"names":["InjectionToken","HttpParams","publishReplay","refCount","catchError","EMPTY","Injectable","HttpClient","Optional","Inject","EventEmitter","Directive","Input","Output","Pipe","NgModule","HighlightModule","HttpClientModule"],"mappings":";;;;;;;;;;IAAA;AAAK;AAAgB;AAAS,IAE9B,0BAGC;AACD;AACgB;AAA0B,QAJxC,+BAAiB;AACnB;AACC,QADC,mCAAqB;AACvB;AAEE;AAAF,QAAa,YAAY,GAAG,IAAIA,mBAAc,CAAc,cAAc,CAAC;AAC3E;AACO;AACH;AAAS,IADb,oBAmBC;AACD;AACgB;AAEV,QAtBJ,sBAAc;AAChB;AACW,QADT,mBAAW;AACb;AACM,QADJ,wBAAgB;AAClB;AACG,QADD,2BAAmB;AACrB;AACE,QADA,4BAAoB;AACtB;AACU,QADR,oBAAY;AACd;AACK,QADH,yBAAiB;AACnB;AACA,QADE,8BAAsB;AACxB;AACA,QADE,8BAAsB;AACxB;AACI,QADF,0BAAkB;AACpB;AACE,QADA,4BAAoB;AACtB;AAA0B,QAAxB,kCAA0B;AAC5B;AAA0B,QAAxB,kCAA0B;AAC5B;AACI,QADF,0BAAkB;AACpB;AACG,QADD,2BAAmB;AACrB;AAA0B,QAAxB,oCAA4B;AAC9B;AACS,QADP,qBAAa;AACf;AACE,QADA,2BAAoB;AACtB;AAEE;AAAS;AACF;AACT,IAFA,mBAmBC;AACD;AACgB;AACA,QArBd,qBAAc;AAChB;AACW,QADT,kBAAW;AACb;AACM,QADJ,uBAAgB;AAClB;AACG,QADD,0BAAmB;AACrB;AACE,QADA,2BAAoB;AACtB;AACU,QADR,mBAAY;AACd;AACK,QADH,wBAAiB;AACnB;AACA,QADE,6BAAsB;AACxB;AACA,QADE,6BAAsB;AACxB;AACI,QADF,yBAAkB;AACpB;AACE,QADA,2BAAoB;AACtB;AAA0B,QAAxB,iCAA0B;AAC5B;AAA0B,QAAxB,iCAA0B;AAC5B;AACI,QADF,yBAAkB;AACpB;AACG,QADD,0BAAmB;AACrB;AAA0B,QAAxB,mCAA4B;AAC9B;AACS,QADP,oBAAa;AACf;AACE,QADA,0BAAoB;AACtB;AAEE;AAAS;AACV;AAAS,IADV,2BAIC;AACD;AACgB;AAEV,QAPJ,6BAAc;AAChB;AACI,QADF,iCAAkB;AACpB;AAEC,QAFC,iCAAkB;AACpB;AAEE;AAAS;AACL;AACN,I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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface GistOptions {\r\n  clientId: string;\r\n  clientSecret: string;\r\n}\r\n\r\nexport const GIST_OPTIONS = new InjectionToken<GistOptions>('GIST_OPTIONS');\r\n\r\ninterface Owner {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n}\r\n\r\ninterface User {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n}\r\n\r\ninterface ChangeStatus {\r\n  total: number;\r\n  additions: number;\r\n  deletions: number;\r\n}\r\n\r\ninterface History {\r\n  user: User;\r\n  version: string;\r\n  committed_at: Date;\r\n  change_status: ChangeStatus;\r\n  url: string;\r\n}\r\n\r\ninterface Files {\r\n  [fileName: string]: {\r\n    filename: string;\r\n    type: string;\r\n    language: string;\r\n    raw_url: string;\r\n    size: number;\r\n    truncated: boolean;\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport interface Gist {\r\n  url: string;\r\n  forks_url: string;\r\n  commits_url: string;\r\n  id: string;\r\n  node_id: string;\r\n  git_pull_url: string;\r\n  git_push_url: string;\r\n  html_url: string;\r\n  files: Files;\r\n  public: boolean;\r\n  created_at: Date;\r\n  updated_at: Date;\r\n  description: string;\r\n  comments: number;\r\n  user?: any;\r\n  comments_url: string;\r\n  owner: Owner;\r\n  forks: any[];\r\n  history: History[];\r\n  truncated: boolean;\r\n}\r\n\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { catchError, publishReplay, refCount } from 'rxjs/operators';\r\nimport { Gist, GIST_OPTIONS, GistOptions } from './gist.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CodeLoader {\r\n  constructor(private _http: HttpClient, @Optional() @Inject(GIST_OPTIONS) private _options: GistOptions) {\r\n  }\r\n\r\n  /**\r\n   * Get plus code\r\n   * @param id Gist ID\r\n   */\r\n  getCodeFromGist(id: string): Observable<Gist> {\r\n    let params: HttpParams;\r\n    if (this.isOAuthProvided()) {\r\n      params = new HttpParams().set('client_id', this._options.clientId).set('client_secret', this._options.clientSecret);\r\n    }\r\n    return this.fetchFile(`https://api.github.com/gists/${id}`, { params, responseType: 'json' });\r\n  }\r\n\r\n  /**\r\n   * Get code by URL\r\n   * @param url File raw link\r\n   */\r\n  getCodeFromUrl(url: string): Observable<string> {\r\n    return this.fetchFile(url, { responseType: 'text' });\r\n  }\r\n\r\n  /**\r\n   * Check if OAuth option is provided\r\n   */\r\n  private isOAuthProvided(): boolean {\r\n    return !!this._options && !!this._options.clientId && !!this._options.clientSecret;\r\n  }\r\n\r\n  private fetchFile(url: string, options: any): Observable<any> {\r\n    // Check if URL is valid\r\n    if (isUrl(url)) {\r\n      return this._http.get(url, options).pipe(\r\n        // Catch response\r\n        publishReplay(1),\r\n        refCount(),\r\n        catchError((err: Error) => {\r\n          console.error('[NgxHighlight]: Unable to fetch the URL!', err.message);\r\n          return EMPTY;\r\n        })\r\n      );\r\n    }\r\n    return EMPTY;\r\n  }\r\n\r\n}\r\n\r\nfunction isUrl(url: string) {\r\n  const regExp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n  return regExp.test(url);\r\n}\r\n","import { Directive, Pipe, Input, Output, PipeTransform, EventEmitter } from '@angular/core';\r\nimport { CodeLoader } from './code-loader';\r\nimport { Gist } from './gist.model';\r\n\r\n@Directive({\r\n  selector: '[gist]'\r\n})\r\nexport class GistDirective {\r\n\r\n  constructor(private _loader: CodeLoader) {\r\n  }\r\n\r\n  @Input()\r\n  private set gist(value: string) {\r\n    if (value) {\r\n      this._loader.getCodeFromGist(value).subscribe((gist: Gist) => this.gistLoad.emit(gist));\r\n    }\r\n  }\r\n\r\n  @Output() gistLoad = new EventEmitter<Gist>();\r\n}\r\n\r\n@Pipe({\r\n  name: 'gistFile'\r\n})\r\nexport class GistFilePipe implements PipeTransform {\r\n  transform(gist: Gist, fileName: string): string | null {\r\n    return (gist && gist.files && gist.files[fileName]) ? gist.files[fileName].content : null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CodeLoader } from './code-loader';\r\n\r\n@Pipe({\r\n  name: 'codeFromUrl'\r\n})\r\nexport class CodeFromUrlPipe implements PipeTransform {\r\n\r\n  constructor(private _loader: CodeLoader) {\r\n  }\r\n\r\n  transform(url: string): Observable<string> {\r\n    return this._loader.getCodeFromUrl(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\n// Uncomment the following line for development\r\n// import { HighlightModule } from '../../src/public-api';\r\nimport { GistFilePipe, GistDirective } from './gist';\r\nimport { CodeFromUrlPipe } from './code-from-url';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HighlightModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    GistDirective,\r\n    GistFilePipe,\r\n    CodeFromUrlPipe\r\n  ],\r\n  exports: [\r\n    HighlightModule,\r\n    GistDirective,\r\n    GistFilePipe,\r\n    CodeFromUrlPipe\r\n  ]\r\n})\r\nexport class HighlightPlusModule {\r\n}\r\n"]}