/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Pipe, Input, Output, EventEmitter } from '@angular/core';
import { CodeLoader } from './code-loader';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './code-loader';
export class GistDirective {
    /**
     * @param {?} _loader
     */
    constructor(_loader) {
        this._loader = _loader;
        this.gistLoad = new EventEmitter();
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    set gist(value) {
        if (value) {
            this._loader.getCodeFromGist(value).subscribe((/**
             * @param {?} gist
             * @return {?}
             */
            (gist) => this.gistLoad.emit(gist)));
        }
    }
}
GistDirective.ɵfac = function GistDirective_Factory(t) { return new (t || GistDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CodeLoader)); };
GistDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GistDirective, selectors: [["", "gist", ""]], inputs: { gist: "gist" }, outputs: { gistLoad: "gistLoad" } });
/** @nocollapse */
GistDirective.ctorParameters = () => [
    { type: CodeLoader }
];
GistDirective.propDecorators = {
    gist: [{ type: Input }],
    gistLoad: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GistDirective, [{
        type: Directive,
        args: [{
                selector: '[gist]'
            }]
    }], function () { return [{ type: ɵngcc1.CodeLoader }]; }, { gistLoad: [{
            type: Output
        }], gist: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    GistDirective.prototype.gistLoad;
    /**
     * @type {?}
     * @private
     */
    GistDirective.prototype._loader;
}
export class GistFilePipe {
    /**
     * @param {?} gist
     * @param {?} fileName
     * @return {?}
     */
    transform(gist, fileName) {
        return (gist && gist.files && gist.files[fileName]) ? gist.files[fileName].content : null;
    }
}
GistFilePipe.ɵfac = function GistFilePipe_Factory(t) { return new (t || GistFilePipe)(); };
GistFilePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "gistFile", type: GistFilePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GistFilePipe, [{
        type: Pipe,
        args: [{
                name: 'gistFile'
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2lzdC5qcyIsInNvdXJjZXMiOlsibmd4LWhpZ2hsaWdodGpzL3BsdXMvZ2lzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBaUIsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQU0zQyxNQUFNLE9BQU8sYUFBYTtBQUMxQjtBQUNPO0FBQTJCO0FBQVMsSUFBekMsWUFBb0IsT0FBbUI7QUFDekMsUUFEc0IsWUFBTyxHQUFQLE9BQU8sQ0FBWTtBQUFFLFFBVS9CLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO0FBQ2hELElBVkUsQ0FBQztBQUNIO0FBQ087QUFDSztBQUNaO0FBQ0U7QUFBUyxJQUhULElBQ1ksSUFBSSxDQUFDLEtBQWE7QUFDaEMsUUFBSSxJQUFJLEtBQUssRUFBRTtBQUNmLFlBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUztBQUFPO0FBQWdDO0FBSWxGO0FBQWlCLFlBSjJCLENBQUMsSUFBVSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDO0FBQzlGLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSDsyQ0FkQyxTQUFTLFNBQUMsbUJBQ1QsUUFBUSxFQUFFLFFBQVEsZUFDbkI7bUtBQ0k7QUFBRTtBQUFvQjtBQUVRLFlBUjFCLFVBQVU7QUFBSTtBQUFJO0FBQ1gsbUJBVWIsS0FBSztBQUNOLHVCQU1DLE1BQU07QUFBSzs7Ozs7Ozs7OztvQkFBRTtBQUFFO0FBQWM7QUFFL0IsSUFGQyxpQ0FBOEM7QUFDaEQ7QUFFSTtBQUNTO0FBRVA7QUFBUyxJQWhCRCxnQ0FBMkI7QUFBRTtBQWdCM0MsTUFBTSxPQUFPLFlBQVk7QUFBSTtBQUFTO0FBQzlCO0FBQTRCO0FBQW9CO0FBQ25ELElBREgsU0FBUyxDQUFDLElBQVUsRUFBRSxRQUFnQjtBQUFLLFFBQ3pDLE9BQU8sQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDOUYsSUFBRSxDQUFDO0FBQ0g7MENBUEMsSUFBSSxTQUFDLG1CQUNKLElBQUksRUFBRSxVQUFVO2FBQ2pCOzs7Ozs7O0FBeEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBVEEsQUFBQSxBQUVBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQWJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFMQSxBQUFBLEFBV0EsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQUFBLEFBVkEsQUFBQSxBQWdCQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgUGlwZSwgSW5wdXQsIE91dHB1dCwgUGlwZVRyYW5zZm9ybSwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvZGVMb2FkZXIgfSBmcm9tICcuL2NvZGUtbG9hZGVyJztcclxuaW1wb3J0IHsgR2lzdCB9IGZyb20gJy4vZ2lzdC5tb2RlbCc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tnaXN0XSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEdpc3REaXJlY3RpdmUge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9sb2FkZXI6IENvZGVMb2FkZXIpIHtcclxuICB9XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHJpdmF0ZSBzZXQgZ2lzdCh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICBpZiAodmFsdWUpIHtcclxuICAgICAgdGhpcy5fbG9hZGVyLmdldENvZGVGcm9tR2lzdCh2YWx1ZSkuc3Vic2NyaWJlKChnaXN0OiBHaXN0KSA9PiB0aGlzLmdpc3RMb2FkLmVtaXQoZ2lzdCkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQE91dHB1dCgpIGdpc3RMb2FkID0gbmV3IEV2ZW50RW1pdHRlcjxHaXN0PigpO1xyXG59XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2dpc3RGaWxlJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgR2lzdEZpbGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGdpc3Q6IEdpc3QsIGZpbGVOYW1lOiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsIHtcclxuICAgIHJldHVybiAoZ2lzdCAmJiBnaXN0LmZpbGVzICYmIGdpc3QuZmlsZXNbZmlsZU5hbWVdKSA/IGdpc3QuZmlsZXNbZmlsZU5hbWVdLmNvbnRlbnQgOiBudWxsO1xyXG4gIH1cclxufVxyXG4iXX0=