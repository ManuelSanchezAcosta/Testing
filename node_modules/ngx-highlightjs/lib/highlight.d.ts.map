{"version":3,"file":"highlight.d.ts","sources":["highlight.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, SimpleChanges, EventEmitter, ElementRef } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HighlightJS } from './highlight.service';\r\nimport { HighlightOptions, HighlightResult } from './highlight.model';\r\nexport declare class Highlight implements OnChanges {\r\n    private _hljs;\r\n    private _sanitizer;\r\n    private _options;\r\n    private readonly _nativeElement;\r\n    private _lineNumbersObs;\r\n    code: string;\r\n    languages: string[];\r\n    lineNumbers: boolean;\r\n    highlighted: EventEmitter<HighlightResult>;\r\n    constructor(el: ElementRef, _hljs: HighlightJS, _sanitizer: DomSanitizer, _options: HighlightOptions);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    /**\r\n     * Highlighting with language detection and fix markup.\r\n     * @param code Accepts a string with the code to highlight\r\n     * @param languages An optional array of language names and aliases restricting detection to only those languages.\r\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\r\n     */\r\n    highlightElement(code: string, languages?: string[]): void;\r\n    private addLineNumbers;\r\n    private destroyLineNumbersObserver;\r\n    private setTextContent;\r\n    private setInnerHTML;\r\n}\r\n"]}