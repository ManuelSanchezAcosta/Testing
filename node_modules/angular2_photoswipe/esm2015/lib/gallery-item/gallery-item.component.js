/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, HostBinding } from '@angular/core';
import { Image } from '../image';
import { LightboxAdapter } from '../lightbox-adapter';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../lightbox-adapter';
import * as ɵngcc2 from '@angular/common';

const _c0 = function (a0) { return { "card-img-top": a0 }; };
export class GalleryItemComponent {
    /**
     * @param {?} adapter
     */
    constructor(adapter) {
        this.adapter = adapter;
        this.clicked = new EventEmitter();
        this.isBootstrapEnabled = false;
        this.isBootstrapEnabled = this.adapter.enableBootstrap4;
    }
    /**
     * @return {?}
     */
    onClick() {
        this.clicked.emit(this.image);
        return false;
    }
}
GalleryItemComponent.ɵfac = function GalleryItemComponent_Factory(t) { return new (t || GalleryItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LightboxAdapter)); };
GalleryItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleryItemComponent, selectors: [["ngp-gallery-item"]], hostVars: 2, hostBindings: function GalleryItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("card", ctx.isBootstrapEnabled);
    } }, inputs: { image: "image" }, outputs: { clicked: "clicked" }, decls: 2, vars: 8, consts: [["itemprop", "contentUrl", 3, "href", "click"], ["itemprop", "thumbnail", 3, "src", "ngClass", "alt"]], template: function GalleryItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵlistener("click", function GalleryItemComponent_Template_a_click_0_listener() { return ctx.onClick(); });
        ɵngcc0.ɵɵelement(1, "img", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("href", ctx.image.largeUrl, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵattribute("data-size", ctx.image.width + "x" + ctx.image.height)("data-author", ctx.image.author);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.image.thumbUrl, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵpropertyInterpolate("alt", ctx.image.description);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c0, ctx.isBootstrapEnabled));
    } }, directives: [ɵngcc2.NgClass], styles: [""] });
/** @nocollapse */
GalleryItemComponent.ctorParameters = () => [
    { type: LightboxAdapter }
];
GalleryItemComponent.propDecorators = {
    image: [{ type: Input }],
    clicked: [{ type: Output }],
    isBootstrapEnabled: [{ type: HostBinding, args: ['class.card',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GalleryItemComponent, [{
        type: Component,
        args: [{
                selector: 'ngp-gallery-item',
                template: "<a href=\"{{image.largeUrl}}\" itemprop=\"contentUrl\" [attr.data-size]=\"image.width + 'x' + image.height\"\n    [attr.data-author]=\"image.author\" (click)=\"onClick()\">\n    <img src=\"{{image.thumbUrl}}\" [ngClass]=\"{'card-img-top': isBootstrapEnabled }\"  itemprop=\"thumbnail\" alt=\"{{image.description}}\" />\n</a>",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.LightboxAdapter }]; }, { clicked: [{
            type: Output
        }], isBootstrapEnabled: [{
            type: HostBinding,
            args: ['class.card']
        }], image: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    GalleryItemComponent.prototype.image;
    /** @type {?} */
    GalleryItemComponent.prototype.clicked;
    /** @type {?} */
    GalleryItemComponent.prototype.isBootstrapEnabled;
    /**
     * @type {?}
     * @private
     */
    GalleryItemComponent.prototype.adapter;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiYW5ndWxhcjJfcGhvdG9zd2lwZS9saWIvZ2FsbGVyeS1pdGVtL2dhbGxlcnktaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDakMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7QUFPdEQsTUFBTSxPQUFPLG9CQUFvQjtBQUNqQztBQUNPO0FBQ0M7QUFBUSxJQUdkLFlBQW9CLE9BQXdCO0FBQzlDLFFBRHNCLFlBQU8sR0FBUCxPQUFPLENBQWlCO0FBQUMsUUFIbkMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFTLENBQUM7QUFDaEQsUUFBNkIsdUJBQWtCLEdBQVksS0FBSyxDQUFDO0FBQ2pFLFFBRUksSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7QUFDNUQsSUFBRSxDQUFDO0FBQ0g7QUFDTztBQUNGO0FBQVEsSUFESixPQUFPO0FBQ2hCLFFBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2xDLFFBQUksT0FBTyxLQUFLLENBQUM7QUFDakIsSUFBRSxDQUFDO0FBQ0g7Z0RBbkJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsa0JBQWtCLGtCQUM1Qjs7OzZCQUE0Qyw0Q0FFN0M7Ozs7Ozs7Ozs7Ozt1REFDRztBQUFDO0FBQW1CO0FBR2hCLFlBVkMsZUFBZTtBQUFHO0FBQUc7QUFHN0Isb0JBTUUsS0FBSztBQUFLLHNCQUNWLE1BQU07QUFBSyxpQ0FDWCxXQUFXLFNBQUMsWUFBWTtBQUFNOzs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQztBQUFhO0FBRTlDLElBSkQscUNBQXNCO0FBQ3hCO0FBQXFCLElBQW5CLHVDQUE4QztBQUNoRDtBQUFxQixJQUFuQixrREFBK0Q7QUFDakU7QUFDTztBQUFpQjtBQUFnQjtBQUFRLElBQWxDLHVDQUFnQztBQUFDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vaW1hZ2UnO1xuaW1wb3J0IHsgTGlnaHRib3hBZGFwdGVyIH0gZnJvbSAnLi4vbGlnaHRib3gtYWRhcHRlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25ncC1nYWxsZXJ5LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vZ2FsbGVyeS1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZ2FsbGVyeS1pdGVtLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBHYWxsZXJ5SXRlbUNvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgaW1hZ2U6IEltYWdlO1xuICBAT3V0cHV0KCkgY2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXI8SW1hZ2U+KCk7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuY2FyZCcpIGlzQm9vdHN0cmFwRW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWRhcHRlcjogTGlnaHRib3hBZGFwdGVyKSB7XG4gICAgdGhpcy5pc0Jvb3RzdHJhcEVuYWJsZWQgPSB0aGlzLmFkYXB0ZXIuZW5hYmxlQm9vdHN0cmFwNDtcbiAgfVxuXG4gIHB1YmxpYyBvbkNsaWNrKCkge1xuICAgIHRoaXMuY2xpY2tlZC5lbWl0KHRoaXMuaW1hZ2UpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG59XG4iXX0=