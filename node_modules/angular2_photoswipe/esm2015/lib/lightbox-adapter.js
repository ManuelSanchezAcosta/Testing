/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @return {?}
 */
import * as ɵngcc0 from '@angular/core';
export function ANGULAR2_PHOTO_SWIPE_FACTORY() {
    return new DefaultLightboxAdapter();
}
/**
 * @abstract
 */
export class LightboxAdapter {
}
LightboxAdapter.ɵfac = function LightboxAdapter_Factory(t) { return new (t || LightboxAdapter)(); };
LightboxAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LightboxAdapter, factory: function () { return ANGULAR2_PHOTO_SWIPE_FACTORY(); }, providedIn: 'root' });
/** @nocollapse */ LightboxAdapter.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: ANGULAR2_PHOTO_SWIPE_FACTORY, token: LightboxAdapter, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LightboxAdapter, [{
        type: Injectable,
        args: [{ providedIn: 'root', useFactory: ANGULAR2_PHOTO_SWIPE_FACTORY }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    LightboxAdapter.prototype.getThumbBoundsFn;
    /** @type {?} */
    LightboxAdapter.prototype.getDoubleTapZoom;
    /** @type {?} */
    LightboxAdapter.prototype.isClickableElement;
    /** @type {?} */
    LightboxAdapter.prototype.addCaptionHTMLFn;
    /** @type {?} */
    LightboxAdapter.prototype.index;
    /** @type {?} */
    LightboxAdapter.prototype.showHideOpacity;
    /** @type {?} */
    LightboxAdapter.prototype.showAnimationDuration;
    /** @type {?} */
    LightboxAdapter.prototype.hideAnimationDuration;
    /** @type {?} */
    LightboxAdapter.prototype.bgOpacity;
    /** @type {?} */
    LightboxAdapter.prototype.spacing;
    /** @type {?} */
    LightboxAdapter.prototype.allowPanToNext;
    /** @type {?} */
    LightboxAdapter.prototype.maxSpreadZoom;
    /** @type {?} */
    LightboxAdapter.prototype.loop;
    /** @type {?} */
    LightboxAdapter.prototype.pinchToClose;
    /** @type {?} */
    LightboxAdapter.prototype.closeOnScroll;
    /** @type {?} */
    LightboxAdapter.prototype.closeOnVerticalDrag;
    /** @type {?} */
    LightboxAdapter.prototype.mouseUsed;
    /** @type {?} */
    LightboxAdapter.prototype.escKey;
    /** @type {?} */
    LightboxAdapter.prototype.arrowKeys;
    /** @type {?} */
    LightboxAdapter.prototype.history;
    /** @type {?} */
    LightboxAdapter.prototype.galleryUID;
    /** @type {?} */
    LightboxAdapter.prototype.galleryPIDs;
    /** @type {?} */
    LightboxAdapter.prototype.errorMsg;
    /** @type {?} */
    LightboxAdapter.prototype.barsSize;
    /** @type {?} */
    LightboxAdapter.prototype.timeToIdle;
    /** @type {?} */
    LightboxAdapter.prototype.timeToIdleOutside;
    /** @type {?} */
    LightboxAdapter.prototype.loadingIndicatorDelay;
    /** @type {?} */
    LightboxAdapter.prototype.closeEl;
    /** @type {?} */
    LightboxAdapter.prototype.captionEl;
    /** @type {?} */
    LightboxAdapter.prototype.fullscreenEl;
    /** @type {?} */
    LightboxAdapter.prototype.zoomEl;
    /** @type {?} */
    LightboxAdapter.prototype.shareEl;
    /** @type {?} */
    LightboxAdapter.prototype.counterEl;
    /** @type {?} */
    LightboxAdapter.prototype.arrowEl;
    /** @type {?} */
    LightboxAdapter.prototype.preloaderEl;
    /** @type {?} */
    LightboxAdapter.prototype.tapToClose;
    /** @type {?} */
    LightboxAdapter.prototype.tapToToggleControls;
    /** @type {?} */
    LightboxAdapter.prototype.clickToCloseNonZoomable;
    /** @type {?} */
    LightboxAdapter.prototype.closeElClasses;
    /** @type {?} */
    LightboxAdapter.prototype.indexIndicatorSep;
    /** @type {?} */
    LightboxAdapter.prototype.shareButtons;
    /** @type {?} */
    LightboxAdapter.prototype.enableBootstrap4;
}
export class DefaultLightboxAdapter extends LightboxAdapter {
    constructor() {
        super(...arguments);
        this.allowPanToNext = true;
        this.spacing = 0.12;
        this.bgOpacity = 1.0;
        this.mouseUsed = false;
        this.loop = true;
        this.pinchToClose = true;
        this.closeOnScroll = true;
        this.closeOnVerticalDrag = true;
        this.hideAnimationDuration = 333;
        this.showAnimationDuration = 333;
        this.showHideOpacity = false;
        this.escKey = true;
        this.arrowKeys = true;
    }
}
DefaultLightboxAdapter.ɵfac = function DefaultLightboxAdapter_Factory(t) { return ɵDefaultLightboxAdapter_BaseFactory(t || DefaultLightboxAdapter); };
DefaultLightboxAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DefaultLightboxAdapter, factory: DefaultLightboxAdapter.ɵfac });
const ɵDefaultLightboxAdapter_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(DefaultLightboxAdapter);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultLightboxAdapter, [{
        type: Injectable
    }], null, null); })();
if (false) {
    /** @type {?} */
    DefaultLightboxAdapter.prototype.allowPanToNext;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.spacing;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.bgOpacity;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.mouseUsed;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.loop;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.pinchToClose;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.closeOnScroll;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.closeOnVerticalDrag;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.hideAnimationDuration;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.showAnimationDuration;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.showHideOpacity;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.escKey;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.arrowKeys;
    /** @type {?} */
    DefaultLightboxAdapter.prototype.enableBootstrap4;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlnaHRib3gtYWRhcHRlci5qcyIsInNvdXJjZXMiOlsiYW5ndWxhcjJfcGhvdG9zd2lwZS9saWIvbGlnaHRib3gtYWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztBQUNvQztBQUFJO0FBQ2xDOztBQUROLE1BQU0sVUFBVSw0QkFBNEI7QUFDNUMsSUFBSSxPQUFPLElBQUksc0JBQXNCLEVBQUUsQ0FBQztBQUN4QyxDQUFDO0FBQ0Q7QUFDRztBQUFhO0FBQ2hCLE1BQU0sT0FBZ0IsZUFBZTtBQUFHOzJDQUR2QyxVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRTt1QkFBNEIsRUFBRSwwSUFDdkU7QUFBQzs7OzswQkFHRDtBQUFDO0FBQWE7QUFDYixJQUhGLDJDQUEyQjtBQUMvQjtBQUFxQixJQUFqQiwyQ0FBMkI7QUFDL0I7QUFBcUIsSUFBakIsNkNBQTZCO0FBQ2pDO0FBQXFCLElBQWpCLDJDQUEyQjtBQUMvQjtBQUVDLElBREcsZ0NBQWM7QUFDbEI7QUFBcUIsSUFBakIsMENBQXlCO0FBQzdCO0FBQXFCLElBQWpCLGdEQUE4QjtBQUNsQztBQUFxQixJQUFqQixnREFBOEI7QUFDbEM7QUFBcUIsSUFBakIsb0NBQWtCO0FBQ3RCO0FBQ0EsSUFESSxrQ0FBZ0I7QUFDcEI7QUFBcUIsSUFBakIseUNBQXdCO0FBQzVCO0FBQXFCLElBQWpCLHdDQUFzQjtBQUMxQjtBQUNFLElBREUsK0JBQWM7QUFDbEI7QUFBcUIsSUFBakIsdUNBQXNCO0FBQzFCO0FBQXFCLElBQWpCLHdDQUF1QjtBQUMzQjtBQUFxQixJQUFqQiw4Q0FBNkI7QUFDakM7QUFBcUIsSUFBakIsb0NBQW1CO0FBQ3ZCO0FBQ0EsSUFESSxpQ0FBZ0I7QUFDcEI7QUFBcUIsSUFBakIsb0NBQW1CO0FBQ3ZCO0FBQXFCLElBQWpCLGtDQUFpQjtBQUNyQjtBQUFxQixJQUFqQixxQ0FBbUI7QUFDdkI7QUFBcUIsSUFBakIsc0NBQXFCO0FBQ3pCO0FBQXFCLElBQWpCLG1DQUFpQjtBQUNyQjtBQUFxQixJQUFqQixtQ0FBaUI7QUFDckI7QUFBcUIsSUFBakIscUNBQW1CO0FBQ3ZCO0FBQXFCLElBQWpCLDRDQUEwQjtBQUM5QjtBQUFxQixJQUFqQixnREFBOEI7QUFDbEM7QUFBcUIsSUFBakIsa0NBQWlCO0FBQ3JCO0FBQXFCLElBQWpCLG9DQUFtQjtBQUN2QjtBQUFxQixJQUFqQix1Q0FBc0I7QUFDMUI7QUFDQSxJQURJLGlDQUFnQjtBQUNwQjtBQUFxQixJQUFqQixrQ0FBaUI7QUFDckI7QUFBcUIsSUFBakIsb0NBQW1CO0FBQ3ZCO0FBQXFCLElBQWpCLGtDQUFpQjtBQUNyQjtBQUFxQixJQUFqQixzQ0FBcUI7QUFDekI7QUFBcUIsSUFBakIscUNBQW9CO0FBQ3hCO0FBQXFCLElBQWpCLDhDQUE2QjtBQUNqQztBQUFxQixJQUFqQixrREFBaUM7QUFDckM7QUFBcUIsSUFBakIseUNBQXlCO0FBQzdCO0FBQXFCLElBQWpCLDRDQUEwQjtBQUM5QjtBQUFxQixJQUFqQix1Q0FBNEI7QUFDaEM7QUFBcUIsSUFBakIsMkNBQTBCO0FBQzlCO0FBR0EsTUFBTSxPQUFPLHNCQUF1QixTQUFRLGVBQWU7QUFDM0QsSUFGQTtBQUNFO0FBQTZCLFFBQzNCLG1CQUFjLEdBQUcsSUFBSSxDQUFDO0FBQzFCLFFBQUksWUFBTyxHQUFHLElBQUksQ0FBQztBQUNuQixRQUFJLGNBQVMsR0FBRyxHQUFHLENBQUM7QUFDcEIsUUFBSSxjQUFTLEdBQUcsS0FBSyxDQUFDO0FBQ3RCLFFBQUksU0FBSSxHQUFHLElBQUksQ0FBQztBQUNoQixRQUFJLGlCQUFZLEdBQUcsSUFBSSxDQUFDO0FBQ3hCLFFBQUksa0JBQWEsR0FBRyxJQUFJLENBQUM7QUFDekIsUUFBSSx3QkFBbUIsR0FBRyxJQUFJLENBQUM7QUFDL0IsUUFBSSwwQkFBcUIsR0FBRyxHQUFHLENBQUM7QUFDaEMsUUFBSSwwQkFBcUIsR0FBRyxHQUFHLENBQUM7QUFDaEMsUUFBSSxvQkFBZSxHQUFHLEtBQUssQ0FBQztBQUM1QixRQUFJLFdBQU0sR0FBRyxJQUFJLENBQUM7QUFDbEIsUUFBSSxjQUFTLEdBQUcsSUFBSSxDQUFDO0FBQ3JCLElBQ0EsQ0FBQztBQUNEO2tEQWpCQyxVQUFVOzs7OzswQkFDVDtBQUFDO0FBQWE7QUFBcUIsSUFDakMsZ0RBQXNCO0FBQzFCO0FBQ0MsSUFERyx5Q0FBZTtBQUNuQjtBQUNBLElBREksMkNBQWdCO0FBQ3BCO0FBQXFCLElBQWpCLDJDQUFrQjtBQUN0QjtBQUNJLElBREEsc0NBQVk7QUFDaEI7QUFBcUIsSUFBakIsOENBQW9CO0FBQ3hCO0FBQXFCLElBQWpCLCtDQUFxQjtBQUN6QjtBQUFxQixJQUFqQixxREFBMkI7QUFDL0I7QUFBcUIsSUFBakIsdURBQTRCO0FBQ2hDO0FBQXFCLElBQWpCLHVEQUE0QjtBQUNoQztBQUFxQixJQUFqQixpREFBd0I7QUFDNUI7QUFDRSxJQURFLHdDQUFjO0FBQ2xCO0FBQXFCLElBQWpCLDJDQUFpQjtBQUNyQjtBQUFxQixJQUFqQixrREFBd0I7QUFDNUI7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExpZ2h0Ym94T3B0aW9ucywgTGlnaHRib3hNZXRob2RzLCBTaGFyZUJ1dHRvbiwgQ3VzdG9tT3B0aW9ucyB9IGZyb20gJy4vbGlnaHRib3gtb3B0aW9ucyc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBBTkdVTEFSMl9QSE9UT19TV0lQRV9GQUNUT1JZKCkge1xuICAgIHJldHVybiBuZXcgRGVmYXVsdExpZ2h0Ym94QWRhcHRlcigpO1xufVxuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JywgdXNlRmFjdG9yeTogQU5HVUxBUjJfUEhPVE9fU1dJUEVfRkFDVE9SWSB9KVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIExpZ2h0Ym94QWRhcHRlciBpbXBsZW1lbnRzIExpZ2h0Ym94T3B0aW9ucywgTGlnaHRib3hNZXRob2RzLCBDdXN0b21PcHRpb25zIHtcbiAgICBnZXRUaHVtYkJvdW5kc0ZuOiBGdW5jdGlvbjtcbiAgICBnZXREb3VibGVUYXBab29tOiBGdW5jdGlvbjtcbiAgICBpc0NsaWNrYWJsZUVsZW1lbnQ6IEZ1bmN0aW9uO1xuICAgIGFkZENhcHRpb25IVE1MRm46IEZ1bmN0aW9uO1xuXG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBzaG93SGlkZU9wYWNpdHk6IGJvb2xlYW47XG4gICAgc2hvd0FuaW1hdGlvbkR1cmF0aW9uOiBudW1iZXI7XG4gICAgaGlkZUFuaW1hdGlvbkR1cmF0aW9uOiBudW1iZXI7XG4gICAgYmdPcGFjaXR5OiBudW1iZXI7XG4gICAgc3BhY2luZzogbnVtYmVyO1xuICAgIGFsbG93UGFuVG9OZXh0OiBib29sZWFuO1xuICAgIG1heFNwcmVhZFpvb206IG51bWJlcjtcbiAgICBsb29wOiBib29sZWFuO1xuICAgIHBpbmNoVG9DbG9zZTogYm9vbGVhbjtcbiAgICBjbG9zZU9uU2Nyb2xsOiBib29sZWFuO1xuICAgIGNsb3NlT25WZXJ0aWNhbERyYWc6IGJvb2xlYW47XG4gICAgbW91c2VVc2VkOiBib29sZWFuO1xuICAgIGVzY0tleTogYm9vbGVhbjtcbiAgICBhcnJvd0tleXM6IGJvb2xlYW47XG4gICAgaGlzdG9yeTogYm9vbGVhbjtcbiAgICBnYWxsZXJ5VUlEOiBudW1iZXI7XG4gICAgZ2FsbGVyeVBJRHM6IGJvb2xlYW47XG4gICAgZXJyb3JNc2c6IHN0cmluZztcbiAgICBiYXJzU2l6ZTogT2JqZWN0O1xuICAgIHRpbWVUb0lkbGU6IG51bWJlcjtcbiAgICB0aW1lVG9JZGxlT3V0c2lkZTogbnVtYmVyO1xuICAgIGxvYWRpbmdJbmRpY2F0b3JEZWxheTogbnVtYmVyO1xuICAgIGNsb3NlRWw6IGJvb2xlYW47XG4gICAgY2FwdGlvbkVsOiBib29sZWFuO1xuICAgIGZ1bGxzY3JlZW5FbDogYm9vbGVhbjtcbiAgICB6b29tRWw6IGJvb2xlYW47XG4gICAgc2hhcmVFbDogYm9vbGVhbjtcbiAgICBjb3VudGVyRWw6IGJvb2xlYW47XG4gICAgYXJyb3dFbDogYm9vbGVhbjtcbiAgICBwcmVsb2FkZXJFbDogYm9vbGVhbjtcbiAgICB0YXBUb0Nsb3NlOiBib29sZWFuO1xuICAgIHRhcFRvVG9nZ2xlQ29udHJvbHM6IGJvb2xlYW47XG4gICAgY2xpY2tUb0Nsb3NlTm9uWm9vbWFibGU6IGJvb2xlYW47XG4gICAgY2xvc2VFbENsYXNzZXM6IHN0cmluZ1tdO1xuICAgIGluZGV4SW5kaWNhdG9yU2VwOiBzdHJpbmc7XG4gICAgc2hhcmVCdXR0b25zOiBTaGFyZUJ1dHRvbltdO1xuICAgIGVuYWJsZUJvb3RzdHJhcDQ6IGJvb2xlYW47XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZWZhdWx0TGlnaHRib3hBZGFwdGVyIGV4dGVuZHMgTGlnaHRib3hBZGFwdGVyIHtcbiAgICBhbGxvd1BhblRvTmV4dCA9IHRydWU7XG4gICAgc3BhY2luZyA9IDAuMTI7XG4gICAgYmdPcGFjaXR5ID0gMS4wO1xuICAgIG1vdXNlVXNlZCA9IGZhbHNlO1xuICAgIGxvb3AgPSB0cnVlO1xuICAgIHBpbmNoVG9DbG9zZSA9IHRydWU7XG4gICAgY2xvc2VPblNjcm9sbCA9IHRydWU7XG4gICAgY2xvc2VPblZlcnRpY2FsRHJhZyA9IHRydWU7XG4gICAgaGlkZUFuaW1hdGlvbkR1cmF0aW9uID0gMzMzO1xuICAgIHNob3dBbmltYXRpb25EdXJhdGlvbiA9IDMzMztcbiAgICBzaG93SGlkZU9wYWNpdHkgPSBmYWxzZTtcbiAgICBlc2NLZXkgPSB0cnVlO1xuICAgIGFycm93S2V5cyA9IHRydWU7XG4gICAgZW5hYmxlQm9vdHN0cmFwNDogZmFsc2U7XG59XG4iXX0=