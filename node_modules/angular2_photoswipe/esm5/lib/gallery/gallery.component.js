/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChildren, QueryList, ViewChild, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import * as PhotoSwipe from 'photoswipe';
import * as PhotoSwipeUI_Default from 'photoswipe/dist/photoswipe-ui-default';
import { GalleryItemComponent } from '../gallery-item/gallery-item.component';
import { NgpService } from '../ngp.service';
import { LightboxAdapter } from '../lightbox-adapter';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../ngp.service';
import * as ɵngcc2 from '../lightbox-adapter';
import * as ɵngcc3 from '@angular/common';

var _c0 = ["ngpGallery"];
var _c1 = [[["ngp-gallery-item"]]];
var _c2 = function (a0) { return { "card-columns": a0 }; };
var _c3 = ["ngp-gallery-item"];
var GalleryComponent = /** @class */ (function () {
    function GalleryComponent(ngp, adapter) {
        this.ngp = ngp;
        this.adapter = adapter;
        this.shareLinkClick = new EventEmitter();
        this.subscriptions = [];
        this.images = [];
        this.isBootstrapEnabled = this.adapter.enableBootstrap4;
    }
    /**
     * @return {?}
     */
    GalleryComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this_1 = this;
        this.images = (/** @type {?} */ (this.galleryItems.toArray().map((/**
         * @param {?} cp
         * @return {?}
         */
        function (cp) {
            // listen for clicks;
            _this_1.subscriptions.push(cp.clicked.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) { return _this_1.onClick(data); })));
            return cp.image;
        }))));
    };
    /**
     * @return {?}
     */
    GalleryComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) { return sub.unsubscribe(); }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    GalleryComponent.prototype.onClick = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.openPhotoSwipe(data, this.galleryElement);
    };
    /**
     * @private
     * @param {?} img
     * @param {?} galleryDOM
     * @return {?}
     */
    GalleryComponent.prototype.openPhotoSwipe = /**
     * @private
     * @param {?} img
     * @param {?} galleryDOM
     * @return {?}
     */
    function (img, galleryDOM) {
        this.adapter.galleryUID = galleryDOM.nativeElement.getAttribute('data-pswp-uid');
        this.adapter.index = img.id;
        /** @type {?} */
        var PSWP = (/** @type {?} */ (this.ngp.LightboxElement.nativeElement));
        this.pswp = new PhotoSwipe(PSWP, PhotoSwipeUI_Default, this.getImagesAsPhotoswipe(), this.adapter);
        /** @type {?} */
        var _this = this;
        this.pswp.listen('shareLinkClick', (/**
         * @param {?} e
         * @param {?} target
         * @return {?}
         */
        function (e, target) {
            _this.shareLinkClick.emit({ e: e, target: target });
        }));
        this.pswp.init();
        return false;
    };
    /**
     * @private
     * @return {?}
     */
    GalleryComponent.prototype.getImagesAsPhotoswipe = /**
     * @private
     * @return {?}
     */
    function () {
        return this.images.map((/**
         * @param {?} image
         * @return {?}
         */
        function (image) {
            return {
                src: image.largeUrl,
                w: image.width,
                h: image.height,
                pid: image.id,
                title: image.description,
                author: image.author
            };
        }));
    };
    /** @nocollapse */
    GalleryComponent.ctorParameters = function () { return [
        { type: NgpService },
        { type: LightboxAdapter }
    ]; };
    GalleryComponent.propDecorators = {
        galleryElement: [{ type: ViewChild, args: ['ngpGallery', { static: true },] }],
        galleryItems: [{ type: ContentChildren, args: [GalleryItemComponent,] }],
        galleryId: [{ type: Input }],
        shareLinkClick: [{ type: Output }]
    };
GalleryComponent.ɵfac = function GalleryComponent_Factory(t) { return new (t || GalleryComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgpService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LightboxAdapter)); };
GalleryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleryComponent, selectors: [["ngp-gallery"]], contentQueries: function GalleryComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, GalleryItemComponent, 0);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.galleryItems = _t);
    } }, viewQuery: function GalleryComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 3);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.galleryElement = _t.first);
    } }, inputs: { galleryId: "galleryId" }, outputs: { shareLinkClick: "shareLinkClick" }, ngContentSelectors: _c3, decls: 3, vars: 3, consts: [["id", "sampleId", "itemscope", "", "itemtype", "http://schema.org/ImageGallery", 1, "angular2_photoswipe", 3, "ngClass"], ["ngpGallery", ""]], template: function GalleryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c2, ctx.isBootstrapEnabled));
    } }, directives: [ɵngcc3.NgClass], styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GalleryComponent, [{
        type: Component,
        args: [{
                selector: 'ngp-gallery',
                template: "<div class=\"angular2_photoswipe\" [ngClass]=\"{'card-columns': isBootstrapEnabled }\"  #ngpGallery id=\"sampleId\" itemscope itemtype=\"http://schema.org/ImageGallery\">\n  <ng-content select=\"ngp-gallery-item\"></ng-content>\n</div>",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.NgpService }, { type: ɵngcc2.LightboxAdapter }]; }, { shareLinkClick: [{
            type: Output
        }], galleryElement: [{
            type: ViewChild,
            args: ['ngpGallery', { static: true }]
        }], galleryItems: [{
            type: ContentChildren,
            args: [GalleryItemComponent]
        }], galleryId: [{
            type: Input
        }] }); })();
    return GalleryComponent;
}());
export { GalleryComponent };
if (false) {
    /** @type {?} */
    GalleryComponent.prototype.galleryElement;
    /** @type {?} */
    GalleryComponent.prototype.galleryItems;
    /** @type {?} */
    GalleryComponent.prototype.galleryId;
    /** @type {?} */
    GalleryComponent.prototype.shareLinkClick;
    /** @type {?} */
    GalleryComponent.prototype.subscriptions;
    /** @type {?} */
    GalleryComponent.prototype.isBootstrapEnabled;
    /** @type {?} */
    GalleryComponent.prototype.pswp;
    /** @type {?} */
    GalleryComponent.prototype.images;
    /**
     * @type {?}
     * @private
     */
    GalleryComponent.prototype.ngp;
    /**
     * @type {?}
     * @private
     */
    GalleryComponent.prototype.adapter;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,