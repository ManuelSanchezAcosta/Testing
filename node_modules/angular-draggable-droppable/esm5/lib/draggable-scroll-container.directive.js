/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input, NgZone, Renderer2 } from '@angular/core';
/**
 * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.
 * ```html
 * <div style="overflow: scroll" mwlDraggableScrollContainer>
 * <div mwlDraggable>Drag me!</div>
 * </div>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
var DraggableScrollContainerDirective = /** @class */ (function () {
    /**
     * @hidden
     */
    function DraggableScrollContainerDirective(elementRef, renderer, zone) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.zone = zone;
        /**
         * Trigger the DragStart after a long touch in scrollable container when true
         */
        this.activeLongPressDrag = false;
        /**
         * Configuration of a long touch
         * Duration in ms of a long touch before activating DragStart
         * Delta of the
         */
        this.longPressConfig = { duration: 300, delta: 30 };
        this.cancelledScroll = false;
    }
    /**
     * @return {?}
     */
    DraggableScrollContainerDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.zone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.renderer.listen(_this.elementRef.nativeElement, 'touchmove', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                if (_this.cancelledScroll && event.cancelable) {
                    event.preventDefault();
                }
            }));
        }));
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @return {?}
     */
    DraggableScrollContainerDirective.prototype.disableScroll = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.cancelledScroll = true;
        this.renderer.setStyle(this.elementRef.nativeElement, 'overflow', 'hidden');
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @return {?}
     */
    DraggableScrollContainerDirective.prototype.enableScroll = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.cancelledScroll = false;
        this.renderer.setStyle(this.elementRef.nativeElement, 'overflow', 'auto');
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @return {?}
     */
    DraggableScrollContainerDirective.prototype.hasScrollbar = /**
     * @hidden
     * @return {?}
     */
    function () {
        /** @type {?} */
        var containerHasHorizontalScroll = this.elementRef.nativeElement.scrollWidth -
            this.elementRef.nativeElement.clientWidth >
            0;
        /** @type {?} */
        var containerHasVerticalScroll = this.elementRef.nativeElement.scrollHeight -
            this.elementRef.nativeElement.clientHeight >
            0;
        return containerHasHorizontalScroll || containerHasVerticalScroll;
    };
    /** @nocollapse */
    DraggableScrollContainerDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: NgZone }
    ]; };
    DraggableScrollContainerDirective.propDecorators = {
        activeLongPressDrag: [{ type: Input }],
        longPressConfig: [{ type: Input }]
    };
DraggableScrollContainerDirective.ɵfac = function DraggableScrollContainerDirective_Factory(t) { return new (t || DraggableScrollContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
DraggableScrollContainerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DraggableScrollContainerDirective, selectors: [["", "mwlDraggableScrollContainer", ""]], inputs: { activeLongPressDrag: "activeLongPressDrag", longPressConfig: "longPressConfig" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableScrollContainerDirective, [{
        type: Directive,
        args: [{
                selector: '[mwlDraggableScrollContainer]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }]; }, { activeLongPressDrag: [{
            type: Input
        }], longPressConfig: [{
            type: Input
        }] }); })();
    return DraggableScrollContainerDirective;
}());
export { DraggableScrollContainerDirective };
if (false) {
    /**
     * Trigger the DragStart after a long touch in scrollable container when true
     * @type {?}
     */
    DraggableScrollContainerDirective.prototype.activeLongPressDrag;
    /**
     * Configuration of a long touch
     * Duration in ms of a long touch before activating DragStart
     * Delta of the
     * @type {?}
     */
    DraggableScrollContainerDirective.prototype.longPressConfig;
    /**
     * @type {?}
     * @private
     */
    DraggableScrollContainerDirective.prototype.cancelledScroll;
    /** @type {?} */
    DraggableScrollContainerDirective.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    DraggableScrollContainerDirective.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    DraggableScrollContainerDirective.prototype.zone;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2dhYmxlLXNjcm9sbC1jb250YWluZXIuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLWRyYWdnYWJsZS1kcm9wcGFibGUvbGliL2RyYWdnYWJsZS1zY3JvbGwtY29udGFpbmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsS0FBSyxFQUNMLE1BQU0sRUFFTixTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFDdkI7QUFDRztBQUNvSDtBQUM3RztBQUVWO0FBQW9DO0FBRXBDO0FBQ0M7O0FBQ0Q7QUFHUyxJQWlCUDtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsMkNBQ1MsVUFBbUMsRUFDbEMsUUFBbUIsRUFDbkIsSUFBWTtBQUNyQixRQUhRLGVBQVUsR0FBVixVQUFVLENBQXlCO0FBQUMsUUFDbkMsYUFBUSxHQUFSLFFBQVEsQ0FBVztBQUFDLFFBQ3BCLFNBQUksR0FBSixJQUFJLENBQVE7QUFDeEI7QUFFSTtBQUdHO0FBQVksUUF4QmpCLHdCQUFtQixHQUFZLEtBQUssQ0FBQztBQUN2QztBQUVLO0FBQ007QUFDTTtBQUdYO0FBQVksUUFBaEIsb0JBQWUsR0FBRyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDO0FBQ2pELFFBQ1Usb0JBQWUsR0FBRyxLQUFLLENBQUM7QUFDbEMsSUFRSyxDQUFDO0FBQ047QUFDTztBQUNJO0FBQVEsSUFEakIsb0RBQVE7QUFDUjtBQUFtQjtBQUFRLElBRDNCO0FBQ0QsUUFEQyxpQkFZQztBQUNILFFBWkksSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUI7QUFBTTtBQUNqQjtBQUNoQixRQUY0QjtBQUMxQixZQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUNsQixLQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFDN0IsV0FBVztBQUNkO0FBQ0Q7QUFBMkI7QUFBZ0IsWUFEdkMsVUFBQyxLQUFpQjtBQUFJLGdCQUNwQixJQUFJLEtBQUksQ0FBQyxlQUFlLElBQUksS0FBSyxDQUFDLFVBQVUsRUFBRTtBQUN4RCxvQkFBWSxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7QUFDbkMsaUJBQVc7QUFDWCxZQUFRLENBQUMsRUFDRixDQUFDO0FBQ1IsUUFBSSxDQUFDLEVBQUMsQ0FBQztBQUNQLElBQUUsQ0FBQztBQUVILElBQUU7QUFDRjtBQUNFLE9BQUc7QUFDTDtBQUFRO0FBQWU7QUFDUDtBQUFRLElBRHRCLHlEQUFhO0FBQU87QUFDWDtBQUFtQjtBQUN6QixJQUZIO0FBQWMsUUFDWixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztBQUNoQyxRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNoRixJQUFFLENBQUM7QUFFSCxJQUFFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0w7QUFBUTtBQUFlO0FBQ047QUFBUSxJQUR2Qix3REFBWTtBQUFPO0FBQ1Y7QUFBbUI7QUFDMUIsSUFGRjtBQUFjLFFBQ1osSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7QUFDakMsUUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDOUUsSUFBRSxDQUFDO0FBRUgsSUFBRTtBQUNGO0FBQ0UsT0FBRztBQUNMO0FBQVE7QUFBZTtBQUNUO0FBQVEsSUFEcEIsd0RBQVk7QUFBTztBQUNiO0FBQW1CO0FBQVEsSUFEakM7QUFBYztBQUNILFlBQUgsNEJBQTRCLEdBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFdBQVc7QUFDL0MsWUFBUSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxXQUFXO0FBQ2pELFlBQU0sQ0FBQztBQUNQO0FBQXlCLFlBQWYsMEJBQTBCLEdBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFlBQVk7QUFDaEQsWUFBUSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxZQUFZO0FBQ2xELFlBQU0sQ0FBQztBQUNQLFFBQUksT0FBTyw0QkFBNEIsSUFBSSwwQkFBMEIsQ0FBQztBQUN0RSxJQUFFLENBQUMsQ0FyRU07QUFBQzs4Q0FIVCxTQUFTLFNBQUMsaEVBR3NCO1FBRi9CLFFBQVEsRUFBRSxsQkFJMEIsZ0JBcEJwQyxVQUFVO21CQWdCK0IsbkJBZnpDLGdCQUdBLFNBQVM7UUFhVixSQVpFLGdCQUhELE1BQU07QUFDUDtBQUNBO0FBSWdCLHNDQWNkLEtBQUs7QUFDTixrQ0FPQyxLQUFLO0FBQ1A7Ozs7Ozs7Ozs7OztvQkFBTTtBQUFDLElBeURSLHdDQUFDO0FBQ0EsQ0FEQSxBQXpFRCxJQXlFQztBQUNELFNBdkVhLGlDQUFpQztBQUFJO0FBQWE7QUFDM0Q7QUFFSjtBQUVBO0FBQVEsSUFETixnRUFDcUM7QUFDdkM7QUFFQztBQUNFO0FBQ0U7QUFFSjtBQUNNO0FBQVEsSUFEYiw0REFDK0M7QUFDakQ7QUFDTztBQUFpQjtBQUVwQjtBQUNFLElBSEosNERBQWdDO0FBQ2xDO0FBR0MsSUFFRyx1REFBMEM7QUFBQztBQUN4QztBQUFpQjtBQUNqQjtBQUFRLElBRFgscURBQTJCO0FBQUM7QUFDekI7QUFBaUI7QUFHakI7QUFDUCxJQUpJLGlEQUFvQjtBQUN4QjtBQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgTmdab25lLFxuICBPbkluaXQsXG4gIFJlbmRlcmVyMlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBJZiB0aGUgd2luZG93IGlzbid0IHNjcm9sbGFibGUsIHRoZW4gcGxhY2UgdGhpcyBvbiB0aGUgc2Nyb2xsYWJsZSBjb250YWluZXIgdGhhdCBkcmFnZ2FibGUgZWxlbWVudHMgYXJlIGluc2lkZS4gZS5nLlxuICogYGBgaHRtbFxuICA8ZGl2IHN0eWxlPVwib3ZlcmZsb3c6IHNjcm9sbFwiIG13bERyYWdnYWJsZVNjcm9sbENvbnRhaW5lcj5cbiAgICA8ZGl2IG13bERyYWdnYWJsZT5EcmFnIG1lITwvZGl2PlxuICA8L2Rpdj5cbiAgYGBgXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1ttd2xEcmFnZ2FibGVTY3JvbGxDb250YWluZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBEcmFnZ2FibGVTY3JvbGxDb250YWluZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogVHJpZ2dlciB0aGUgRHJhZ1N0YXJ0IGFmdGVyIGEgbG9uZyB0b3VjaCBpbiBzY3JvbGxhYmxlIGNvbnRhaW5lciB3aGVuIHRydWVcbiAgICovXG4gIEBJbnB1dCgpXG4gIGFjdGl2ZUxvbmdQcmVzc0RyYWc6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQ29uZmlndXJhdGlvbiBvZiBhIGxvbmcgdG91Y2hcbiAgICogRHVyYXRpb24gaW4gbXMgb2YgYSBsb25nIHRvdWNoIGJlZm9yZSBhY3RpdmF0aW5nIERyYWdTdGFydFxuICAgKiBEZWx0YSBvZiB0aGVcbiAgICovXG4gIEBJbnB1dCgpXG4gIGxvbmdQcmVzc0NvbmZpZyA9IHsgZHVyYXRpb246IDMwMCwgZGVsdGE6IDMwIH07XG5cbiAgcHJpdmF0ZSBjYW5jZWxsZWRTY3JvbGwgPSBmYWxzZTtcblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIHpvbmU6IE5nWm9uZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIHRoaXMucmVuZGVyZXIubGlzdGVuKFxuICAgICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCxcbiAgICAgICAgJ3RvdWNobW92ZScsXG4gICAgICAgIChldmVudDogVG91Y2hFdmVudCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLmNhbmNlbGxlZFNjcm9sbCAmJiBldmVudC5jYW5jZWxhYmxlKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaGlkZGVuXG4gICAqL1xuICBkaXNhYmxlU2Nyb2xsKCk6IHZvaWQge1xuICAgIHRoaXMuY2FuY2VsbGVkU2Nyb2xsID0gdHJ1ZTtcbiAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAnb3ZlcmZsb3cnLCAnaGlkZGVuJyk7XG4gIH1cblxuICAvKipcbiAgICogQGhpZGRlblxuICAgKi9cbiAgZW5hYmxlU2Nyb2xsKCk6IHZvaWQge1xuICAgIHRoaXMuY2FuY2VsbGVkU2Nyb2xsID0gZmFsc2U7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ292ZXJmbG93JywgJ2F1dG8nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaGlkZGVuXG4gICAqL1xuICBoYXNTY3JvbGxiYXIoKTogYm9vbGVhbiB7XG4gICAgY29uc3QgY29udGFpbmVySGFzSG9yaXpvbnRhbFNjcm9sbCA9XG4gICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5zY3JvbGxXaWR0aCAtXG4gICAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsaWVudFdpZHRoID5cbiAgICAgIDA7XG4gICAgY29uc3QgY29udGFpbmVySGFzVmVydGljYWxTY3JvbGwgPVxuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsSGVpZ2h0IC1cbiAgICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY2xpZW50SGVpZ2h0ID5cbiAgICAgIDA7XG4gICAgcmV0dXJuIGNvbnRhaW5lckhhc0hvcml6b250YWxTY3JvbGwgfHwgY29udGFpbmVySGFzVmVydGljYWxTY3JvbGw7XG4gIH1cbn1cbiJdfQ==