/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrIconModule } from '../icon/icon.module';
import { ClrAccordionPanel } from './accordion-panel';
import { ClrAccordionTitle } from './accordion-title';
import { ClrAccordionDescription } from './accordion-description';
import { ClrAccordion } from './accordion';
import { ClrAccordionContent } from './accordion-content';
import { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';
import { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';
import { angleIcon, checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';
import * as ɵngcc0 from '@angular/core';
const declarations = [
    ClrAccordion,
    ClrAccordionPanel,
    ClrAccordionTitle,
    ClrAccordionDescription,
    ClrAccordionContent,
    AccordionOompaLoompa,
    AccordionWillyWonka,
];
export class ClrAccordionModule {
    constructor() {
        ClarityIcons.addIcons(angleIcon, exclamationCircleIcon, checkCircleIcon);
    }
}
ClrAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrAccordionModule });
ClrAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClrAccordionModule_Factory(t) { return new (t || ClrAccordionModule)(); }, imports: [[CommonModule, ClrIconModule]] });
ClrAccordionModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrAccordionModule, { declarations: function () { return [ClrAccordion,
        ClrAccordionPanel,
        ClrAccordionTitle,
        ClrAccordionDescription,
        ClrAccordionContent,
        AccordionOompaLoompa,
        AccordionWillyWonka]; }, imports: function () { return [CommonModule, ClrIconModule]; }, exports: function () { return [ClrAccordion,
        ClrAccordionPanel,
        ClrAccordionTitle,
        ClrAccordionDescription,
        ClrAccordionContent,
        AccordionOompaLoompa,
        AccordionWillyWonka]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrAccordionModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ClrIconModule],
                declarations: [...declarations],
                exports: [...declarations]
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2FjY29yZGlvbi9hY2NvcmRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUVqRyxNQUFNLFlBQVksR0FBRztBQUNyQixJQUFFLFlBQVk7QUFDZCxJQUFFLGlCQUFpQjtBQUNuQixJQUFFLGlCQUFpQjtBQUNuQixJQUFFLHVCQUF1QjtBQUN6QixJQUFFLG1CQUFtQjtBQUNyQixJQUFFLG9CQUFvQjtBQUN0QixJQUFFLG1CQUFtQjtBQUNyQixDQUFDLENBQUM7QUFPRixNQUFNLE9BQU8sa0JBQWtCO0FBQy9CLElBQUU7QUFDRixRQUFJLFlBQVksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLHFCQUFxQixFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBQzdFLElBQUUsQ0FBQztBQUNIOzhDQVRDLFFBQVEsU0FBQztBQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsa0JBQ3RDLFlBQVksRUFBRSxDQUFDLEdBQUcsWUFBWSxDQUFDLGtCQUMvQixPQUFPLEVBQUUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxlQUMzQiwyQ0FDSTtBQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQ1c7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDbHJJY29uTW9kdWxlIH0gZnJvbSAnLi4vaWNvbi9pY29uLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJBY2NvcmRpb25QYW5lbCB9IGZyb20gJy4vYWNjb3JkaW9uLXBhbmVsJztcbmltcG9ydCB7IENsckFjY29yZGlvblRpdGxlIH0gZnJvbSAnLi9hY2NvcmRpb24tdGl0bGUnO1xuaW1wb3J0IHsgQ2xyQWNjb3JkaW9uRGVzY3JpcHRpb24gfSBmcm9tICcuL2FjY29yZGlvbi1kZXNjcmlwdGlvbic7XG5pbXBvcnQgeyBDbHJBY2NvcmRpb24gfSBmcm9tICcuL2FjY29yZGlvbic7XG5pbXBvcnQgeyBDbHJBY2NvcmRpb25Db250ZW50IH0gZnJvbSAnLi9hY2NvcmRpb24tY29udGVudCc7XG5pbXBvcnQgeyBBY2NvcmRpb25Pb21wYUxvb21wYSB9IGZyb20gJy4vY2hvY29sYXRlL2FjY29yZGlvbi1vb21wYS1sb29tcGEnO1xuaW1wb3J0IHsgQWNjb3JkaW9uV2lsbHlXb25rYSB9IGZyb20gJy4vY2hvY29sYXRlL2FjY29yZGlvbi13aWxseS13b25rYSc7XG5pbXBvcnQgeyBhbmdsZUljb24sIGNoZWNrQ2lyY2xlSWNvbiwgQ2xhcml0eUljb25zLCBleGNsYW1hdGlvbkNpcmNsZUljb24gfSBmcm9tICdAY2RzL2NvcmUvaWNvbic7XG5cbmNvbnN0IGRlY2xhcmF0aW9ucyA9IFtcbiAgQ2xyQWNjb3JkaW9uLFxuICBDbHJBY2NvcmRpb25QYW5lbCxcbiAgQ2xyQWNjb3JkaW9uVGl0bGUsXG4gIENsckFjY29yZGlvbkRlc2NyaXB0aW9uLFxuICBDbHJBY2NvcmRpb25Db250ZW50LFxuICBBY2NvcmRpb25Pb21wYUxvb21wYSxcbiAgQWNjb3JkaW9uV2lsbHlXb25rYSxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENsckljb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5kZWNsYXJhdGlvbnNdLFxuICBleHBvcnRzOiBbLi4uZGVjbGFyYXRpb25zXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyQWNjb3JkaW9uTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgQ2xhcml0eUljb25zLmFkZEljb25zKGFuZ2xlSWNvbiwgZXhjbGFtYXRpb25DaXJjbGVJY29uLCBjaGVja0NpcmNsZUljb24pO1xuICB9XG59XG4iXX0=