/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, HostListener } from '@angular/core';
/**
 * Allows modal overflow area to be scrollable via keyboard.
 * The modal body will focus with keyboard navigation only.
 * This allows inner focusable items to be focused without
 * the overflow scroll being focused.
 */
import * as ɵngcc0 from '@angular/core';
export class ClrModalBody {
    constructor() {
        this.tabindex = 0;
    }
    mouseDown() {
        // tabindex = 0 binding should be removed
        // so it won't be focused when click starts with mousedown
        delete this.tabindex;
    }
    mouseUp() {
        // set the tabindex binding back when click is completed with mouseup
        this.tabindex = 0;
    }
}
ClrModalBody.ɵfac = function ClrModalBody_Factory(t) { return new (t || ClrModalBody)(); };
ClrModalBody.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrModalBody, selectors: [["", 8, "modal-body"]], hostVars: 1, hostBindings: function ClrModalBody_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mousedown", function ClrModalBody_mousedown_HostBindingHandler() { return ctx.mouseDown(); })("mouseup", function ClrModalBody_mouseup_HostBindingHandler() { return ctx.mouseUp(); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("tabindex", ctx.tabindex);
    } } });
ClrModalBody.propDecorators = {
    mouseDown: [{ type: HostListener, args: ['mousedown',] }],
    mouseUp: [{ type: HostListener, args: ['mouseup',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrModalBody, [{
        type: Directive,
        args: [{
                selector: '.modal-body',
                host: {
                    '[attr.tabindex]': 'tabindex'
                }
            }]
    }], function () { return []; }, { mouseDown: [{
            type: HostListener,
            args: ['mousedown']
        }], mouseUp: [{
            type: HostListener,
            args: ['mouseup']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtYm9keS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL21vZGFsL21vZGFsLWJvZHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBT0gsTUFBTSxPQUFPLFlBQVk7QUFDekIsSUFQQTtBQUNHLFFBTUQsYUFBUSxHQUFHLENBQUMsQ0FBQztBQUNmLElBYUEsQ0FBQztBQUNELElBWkUsU0FBUztBQUNYLFFBQUkseUNBQXlDO0FBQzdDLFFBQUksMERBQTBEO0FBQzlELFFBQUksT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQ3pCLElBQUUsQ0FBQztBQUNILElBRUUsT0FBTztBQUNULFFBQUkscUVBQXFFO0FBQ3pFLFFBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFDdEIsSUFBRSxDQUFDO0FBQ0g7d0NBckJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUU7T0FBYSxrQkFDdkIsSUFBSSxFQUFFLHNCQUNKLGlCQUFpQixFQUFFLFVBQVUsbUJBQzlCLGVBQ0Y7Ozs7V0FDSTtBQUFDO0FBQ0ksd0JBRVAsWUFBWSxTQUFDLFdBQVc7QUFDdEIsc0JBTUYsWUFBWSxTQUFDLFNBQVM7QUFDckI7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEFsbG93cyBtb2RhbCBvdmVyZmxvdyBhcmVhIHRvIGJlIHNjcm9sbGFibGUgdmlhIGtleWJvYXJkLlxuICogVGhlIG1vZGFsIGJvZHkgd2lsbCBmb2N1cyB3aXRoIGtleWJvYXJkIG5hdmlnYXRpb24gb25seS5cbiAqIFRoaXMgYWxsb3dzIGlubmVyIGZvY3VzYWJsZSBpdGVtcyB0byBiZSBmb2N1c2VkIHdpdGhvdXRcbiAqIHRoZSBvdmVyZmxvdyBzY3JvbGwgYmVpbmcgZm9jdXNlZC5cbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnLm1vZGFsLWJvZHknLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLnRhYmluZGV4XSc6ICd0YWJpbmRleCcsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsck1vZGFsQm9keSB7XG4gIHRhYmluZGV4ID0gMDtcblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nKVxuICBtb3VzZURvd24oKSB7XG4gICAgLy8gdGFiaW5kZXggPSAwIGJpbmRpbmcgc2hvdWxkIGJlIHJlbW92ZWRcbiAgICAvLyBzbyBpdCB3b24ndCBiZSBmb2N1c2VkIHdoZW4gY2xpY2sgc3RhcnRzIHdpdGggbW91c2Vkb3duXG4gICAgZGVsZXRlIHRoaXMudGFiaW5kZXg7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZXVwJylcbiAgbW91c2VVcCgpIHtcbiAgICAvLyBzZXQgdGhlIHRhYmluZGV4IGJpbmRpbmcgYmFjayB3aGVuIGNsaWNrIGlzIGNvbXBsZXRlZCB3aXRoIG1vdXNldXBcbiAgICB0aGlzLnRhYmluZGV4ID0gMDtcbiAgfVxufVxuIl19