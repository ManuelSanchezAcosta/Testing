/**
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Optional } from '@angular/core';
import { ControlIdService } from './providers/control-id.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/control-id.service';

const _c0 = ["*"];
export class ClrControlError {
    constructor(controlIdService) {
        this.controlIdService = controlIdService;
    }
}
ClrControlError.ɵfac = function ClrControlError_Factory(t) { return new (t || ClrControlError)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ControlIdService, 8)); };
ClrControlError.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrControlError, selectors: [["clr-control-error"]], hostVars: 3, hostBindings: function ClrControlError_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("id", (ctx.controlIdService == null ? null : ctx.controlIdService.id) + "-error");
        ɵngcc0.ɵɵclassProp("clr-subtext", true);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ClrControlError_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ClrControlError.ctorParameters = () => [
    { type: ControlIdService, decorators: [{ type: Optional }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrControlError, [{
        type: Component,
        args: [{
                selector: 'clr-control-error',
                template: ` <ng-content></ng-content> `,
                host: {
                    '[class.clr-subtext]': 'true',
                    '[id]': 'controlIdService?.id + "-error"'
                }
            }]
    }], function () { return [{ type: ɵngcc1.ControlIdService, decorators: [{
                type: Optional
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2Nsci1hbmd1bGFyL3NyYy9mb3Jtcy9jb21tb24vZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7Ozs7O0FBVWxFLE1BQU0sT0FBTyxlQUFlO0FBQzVCLElBQUUsWUFBK0IsZ0JBQWtDO0FBQUksUUFBdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtBQUFDLElBQUUsQ0FBQztBQUN2RTsyQ0FWQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG1CQUFtQixrQkFDN0IsUUFBUSxFQUFFO1lBQTZCLGtCQUN2QyxJQUFJLEVBQUUsc0JBQ0oscUJBQXFCLEVBQUUsTUFBTSxzQkFDN0IsTUFBTSxFQUFFLGlDQUFpQyxtQkFDMUMsY0FDRjs7Ozs7OzZCQUNJO0FBQUM7QUFDVSxZQVhQLGdCQUFnQix1QkFXVixRQUFRO0FBQU07Ozs7Ozs7Ozs7Ozs7a0NBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xJZFNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9jb250cm9sLWlkLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItY29udHJvbC1lcnJvcicsXG4gIHRlbXBsYXRlOiBgIDxuZy1jb250ZW50PjwvbmctY29udGVudD4gYCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuY2xyLXN1YnRleHRdJzogJ3RydWUnLFxuICAgICdbaWRdJzogJ2NvbnRyb2xJZFNlcnZpY2U/LmlkICsgXCItZXJyb3JcIicsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsckNvbnRyb2xFcnJvciB7XG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHB1YmxpYyBjb250cm9sSWRTZXJ2aWNlOiBDb250cm9sSWRTZXJ2aWNlKSB7fVxufVxuIl19