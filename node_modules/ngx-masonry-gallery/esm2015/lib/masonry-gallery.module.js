/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MasonryGalleryComponent } from './masonry-gallery.component';
import * as ɵngcc0 from '@angular/core';
export class MasonryGalleryModule {
}
MasonryGalleryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MasonryGalleryModule });
MasonryGalleryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MasonryGalleryModule_Factory(t) { return new (t || MasonryGalleryModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MasonryGalleryModule, { declarations: function () { return [MasonryGalleryComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MasonryGalleryComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MasonryGalleryModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    MasonryGalleryComponent,
                ],
                exports: [
                    MasonryGalleryComponent,
                ]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzb25yeS1nYWxsZXJ5Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmd4LW1hc29ucnktZ2FsbGVyeS9saWIvbWFzb25yeS1nYWxsZXJ5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBYXRFLE1BQU0sT0FBTyxvQkFBb0I7QUFBSTtrREFYcEMsUUFBUSxTQUFDO0NBQ04sT0FBTyxFQUFFLHVCQUNMLFlBQVksbUJBQ2YsbUJBQ0QsWUFBWSxFQUFFLHVCQUNWLHVCQUF1QjtBQUMxQixtQkFDRDtDQUFPLEVBQUU7V0FDTCx1QkFBdUIsb0JBQzFCLGdCQUNKOzs7Ozs7Ozs7Ozs7Ozs7QUFmQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFhQSxBQUFBLEFBQUEsQUFBQSxBQVhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IE1hc29ucnlHYWxsZXJ5Q29tcG9uZW50IH0gZnJvbSAnLi9tYXNvbnJ5LWdhbGxlcnkuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgTWFzb25yeUdhbGxlcnlDb21wb25lbnQsXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIE1hc29ucnlHYWxsZXJ5Q29tcG9uZW50LFxyXG4gICAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE1hc29ucnlHYWxsZXJ5TW9kdWxlIHsgfVxyXG4iXX0=