{"version":3,"file":"ngx-masonry-gallery.umd.js","sources":["ngx-masonry-gallery/lib/utilities.ts","ngx-masonry-gallery/lib/masonry-gallery.component.ts","ngx-masonry-gallery/lib/masonry-gallery.module.ts","ngx-masonry-gallery/lib/masonry-gallery-models.ts"],"names":["EventEmitter","Component","ChangeDetectionStrategy","Renderer2","Input","Output","NgModule","CommonModule"],"mappings":"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","sourcesContent":["export class Utilities {\r\n    newGuid() {\r\n       return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n           // tslint:disable-next-line:no-bitwise triple-equals\r\n           const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n           return v.toString(16);\r\n       });\r\n   }\r\n}\r\n\r\nexport let utilities = new Utilities();\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport imagesLoadedMethod from 'imagesloaded';\r\nimport * as masonry from 'masonry-layout';\r\n\r\nimport { IMasonryGalleryImage } from './masonry-gallery-models';\r\nimport { utilities } from './utilities';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-masonry-gallery',\r\n    template: '<div [id]=\"galleryGuid\"></div>'\r\n})\r\nexport class MasonryGalleryComponent\r\n    implements AfterViewInit, OnDestroy, OnChanges {\r\n    @Input() images: IMasonryGalleryImage[] = [];\r\n    @Input() width: number = 330;\r\n    @Input() gutter: number = 5;\r\n    @Input() verticalGutter: number = 5;\r\n    @Input() imageClasses: string[] = [];\r\n\r\n    @Output() clickImage = new EventEmitter<IMasonryGalleryImage>();\r\n    @Output() removeComplete = new EventEmitter<any[]>();\r\n    @Output() layoutComplete = new EventEmitter<any[]>();\r\n\r\n    public readonly galleryGuid: string = utilities.newGuid();\r\n\r\n    private readonly mansonryItemSelectorClass = `grid-item-${this.galleryGuid}`;\r\n    private readonly activeImages: ActiveImage[] = [];\r\n\r\n    private msnry?: any;\r\n    private grid?: any;\r\n    private changesToProcess?: SimpleChanges;\r\n    private viewReady: boolean = false;\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.images && changes.images.currentValue) {\r\n            if (!this.viewReady) {\r\n                // process images once we can\r\n                this.changesToProcess = changes;\r\n            } else {\r\n                this.processImages(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.msnry) {\r\n            this.msnry.destroy();\r\n        }\r\n    }\r\n\r\n    handleClick(image: IMasonryGalleryImage): void {\r\n        this.clickImage.next(image);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.viewReady = true;\r\n        this.initMasonry();\r\n\r\n        // process images now\r\n        if (this.changesToProcess) {\r\n            this.processImages(this.changesToProcess);\r\n            this.changesToProcess = undefined;\r\n        }\r\n    }\r\n\r\n    addImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            this.addImagesToGallery(images);\r\n        }\r\n    }\r\n\r\n    removeImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            images.forEach(image => {\r\n                this.removeImageFromGallery(image);\r\n            });\r\n        }\r\n    }\r\n\r\n    private processImages(changes: SimpleChanges): void {\r\n        const imagesToProcess = this.getAddedAndRemovesImages(changes);\r\n\r\n        // add images to mansonry layout\r\n        this.addImages(imagesToProcess.addedImages);\r\n\r\n        // removes images from layout\r\n        this.removeImages(imagesToProcess.removedImages);\r\n    }\r\n\r\n    private getAddedAndRemovesImages(\r\n        changes: SimpleChanges\r\n    ): {\r\n            addedImages: IMasonryGalleryImage[];\r\n            removedImages: IMasonryGalleryImage[];\r\n        } {\r\n        let addedImages: IMasonryGalleryImage[] = [];\r\n        const removedImages: IMasonryGalleryImage[] = [];\r\n\r\n        const newImagesValue = changes.images\r\n            .currentValue as IMasonryGalleryImage[];\r\n        const oldImagesValue = changes.images\r\n            .previousValue as IMasonryGalleryImage[];\r\n\r\n        if (!oldImagesValue) {\r\n            // all images are new ones\r\n            addedImages = changes.images.currentValue;\r\n        } else {\r\n            // process added images\r\n            newImagesValue.forEach(newImage => {\r\n                const existingImage = oldImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === newImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is new\r\n                    addedImages.push(newImage);\r\n                }\r\n            });\r\n\r\n            // process removed images\r\n            oldImagesValue.forEach(oldImage => {\r\n                const existingImage = newImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === oldImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is removed\r\n                    removedImages.push(oldImage);\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            addedImages: addedImages,\r\n            removedImages: removedImages\r\n        };\r\n    }\r\n\r\n    private initMasonry(): void {\r\n        this.grid = document.getElementById(this.galleryGuid);\r\n\r\n        // remove all existing data from grid\r\n        this.grid.innerHTML = '';\r\n\r\n        if (!this.grid) {\r\n            throw Error(\r\n                `Could not init mansory due to non existing elem with id '${\r\n                this.galleryGuid\r\n                }'`\r\n            );\r\n        }\r\n\r\n        this.msnry = new masonry(this.grid, {\r\n            // options...\r\n            itemSelector: '.' + this.mansonryItemSelectorClass,\r\n            columnWidth: this.width,\r\n            gutter: this.gutter,\r\n        });\r\n\r\n        const that = this;\r\n\r\n        this.msnry.on('layoutComplete', function (items) {\r\n            that.layoutComplete.next(items);\r\n        });\r\n\r\n        this.msnry.on('removeComplete', function (items) {\r\n            that.removeComplete.next(items);\r\n        });\r\n    }\r\n\r\n    private removeImageFromGallery(image: IMasonryGalleryImage): void {\r\n        // get image guid\r\n        const imageIdResult = this.activeImages.find(\r\n            m => m.image.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()\r\n        );\r\n\r\n        if (!imageIdResult) {\r\n            // image was not found, this is probably an error\r\n            console.warn(\r\n                `Image with url '${\r\n                image.imageUrl\r\n                }' was not found. If you are adding images, make sure to 'replace' the images array with a new one\r\n                so that detection change can be executed instead of just adding an image to array\r\n                (which doesn't fire change detection on array property)`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // find image based on its id\r\n        const imageElem = document.getElementById(imageIdResult.id);\r\n\r\n        if (!imageElem) {\r\n            // image was not found in DOM\r\n            console.warn(\r\n                `Image with id '{${\r\n                imageIdResult.id\r\n                }}' was not found in DOM. Have you manipulated the DOM in some way?`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // remove image from gallery\r\n        this.msnry.remove(imageElem);\r\n\r\n        // refresh layout\r\n        this.msnry.layout();\r\n\r\n        // remove image from array\r\n        for (let i = 0; i < this.activeImages.length; i++) {\r\n            const idWithImage = this.activeImages[i];\r\n            if (\r\n                idWithImage.image.imageUrl.toLowerCase() ===\r\n                imageIdResult.image.imageUrl.toLowerCase()\r\n            ) {\r\n                this.activeImages.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addImagesToGallery(images: IMasonryGalleryImage[]): void {\r\n        if (!this.grid) {\r\n            throw Error(\r\n                'Grid element is not yet ready, are you trying to add image too soon?'\r\n            );\r\n        }\r\n\r\n        const imagesWrapper = this.renderer.createElement('span');\r\n\r\n        images.forEach(image => {\r\n            // generate unique image id\r\n            const imageId = this.getImageId();\r\n\r\n            // create element\r\n            const imageElem = this.renderer.createElement('img');\r\n            imageElem.setAttribute('id', imageId);\r\n            imageElem.setAttribute('alt', image.alt ? image.alt : 'no description');\r\n            imageElem.setAttribute('src', image.imageUrl);\r\n            // note - images are hidden by default and should be shown only after they are loaded\r\n            imageElem.setAttribute(\r\n                'style',\r\n                `display: none; width: ${this.width}px; margin-bottom: ${\r\n                this.verticalGutter\r\n                }px`\r\n            );\r\n            imageElem.className = this.getImageClass();\r\n            imageElem.addEventListener('click', () => {\r\n                this.handleClick(image);\r\n            });\r\n\r\n            // store guid with this image\r\n            this.activeImages.push({\r\n                id: imageId,\r\n                image: image\r\n            });\r\n\r\n            // add to dom and mansory & refresh layout\r\n            this.renderer.appendChild(imagesWrapper, imageElem);\r\n        });\r\n\r\n        // add html to dom\r\n        this.renderer.appendChild(this.grid, imagesWrapper);\r\n\r\n        // add images once they are loaded\r\n        const imgLoad = imagesLoadedMethod(imagesWrapper);\r\n        imgLoad.on('progress', (instance, image) => {\r\n            if (image.isLoaded) {\r\n                this.renderer.appendChild(this.grid, image.img);\r\n                // unhide image\r\n                this.renderer.setStyle(image.img, 'display', 'block');\r\n                this.msnry.appended(image.img);\r\n                this.msnry.reloadItems();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getImageClass(): string {\r\n        let className = this.mansonryItemSelectorClass;\r\n\r\n        if (this.imageClasses && this.imageClasses.length > 0) {\r\n            const customClass = this.imageClasses.join(' ');\r\n\r\n            className += ' ' + customClass;\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    private getImageId(): string {\r\n        return this.galleryGuid + '_' + utilities.newGuid();\r\n    }\r\n}\r\n\r\ninterface ActiveImage {\r\n    id: string;\r\n    image: IMasonryGalleryImage;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MasonryGalleryComponent } from './masonry-gallery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n    exports: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n})\r\nexport class MasonryGalleryModule { }\r\n","export class IMasonryGalleryImage {\r\n    public imageUrl: string;\r\n    public alt?: string;\r\n}\r\n"]}