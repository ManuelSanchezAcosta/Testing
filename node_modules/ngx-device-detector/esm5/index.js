import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DeviceDetectorService } from './device-detector.service';
import * as ɵngcc0 from '@angular/core';
var DeviceDetectorModule = /** @class */ (function () {
    function DeviceDetectorModule() {
    }
    DeviceDetectorModule_1 = DeviceDetectorModule;
    DeviceDetectorModule.forRoot = function () {
        return {
            ngModule: DeviceDetectorModule_1,
            providers: [DeviceDetectorService]
        };
    };
    var DeviceDetectorModule_1;
DeviceDetectorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DeviceDetectorModule });
DeviceDetectorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DeviceDetectorModule_Factory(t) { return new (t || DeviceDetectorModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceDetectorModule, { imports: function () { return [CommonModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceDetectorModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ]
            }]
    }], function () { return []; }, null); })();
    return DeviceDetectorModule;
}());
export { DeviceDetectorModule };
export { DeviceDetectorService } from './device-detector.service';
export { ReTree } from './retree';
export * from './device-detector.constants';

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5neC1kZXZpY2UtZGV0ZWN0b3IvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7QUFPbEU7QUFDb0IsSUFEcEI7QUFBa0MsSUFPbEMsQ0FBQztBQUNELDZCQVJhLG9CQUFvQjtBQUFFLElBQzFCLDRCQUFPLEdBQWQ7QUFBYyxRQUNaLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxzQkFBb0I7QUFDcEMsWUFBTSxTQUFTLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztBQUN4QyxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDRjtJQVBZLG9CQUFvQix5REFMaEM7SUFBUSxDQUFDLGNBQ1IsT0FBTyxFQUFFLGtCQUNQLFlBQVksY0FDYixVQUNGLENBQUMsUUFDVyxvQkFBb0IsQ0FPaEM7Ozs7Ozs7Ozs7O2dEQUNEO0FBQ0EsSUFGQSwyQkFBQztBQUVELENBRkMsQUFQRCxJQU9DO0FBQ0QsU0FSYSxvQkFBb0I7QUFTakMsT0FBTyxFQUFFLHFCQUFxQixFQUFjLE1BQU0sMkJBQTJCLENBQUM7QUFDOUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBEZXZpY2VEZXRlY3RvclNlcnZpY2UgfSBmcm9tICcuL2RldmljZS1kZXRlY3Rvci5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIERldmljZURldGVjdG9yTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBEZXZpY2VEZXRlY3Rvck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW0RldmljZURldGVjdG9yU2VydmljZV1cbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCB7IERldmljZURldGVjdG9yU2VydmljZSwgRGV2aWNlSW5mbyB9IGZyb20gJy4vZGV2aWNlLWRldGVjdG9yLnNlcnZpY2UnO1xuZXhwb3J0IHsgUmVUcmVlIH0gZnJvbSAnLi9yZXRyZWUnO1xuZXhwb3J0ICogZnJvbSAnLi9kZXZpY2UtZGV0ZWN0b3IuY29uc3RhbnRzJztcbiJdfQ==