import * as tslib_1 from "tslib";
import * as ɵngcc0 from '@angular/core';
var DeviceDetectorModule_1;
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DeviceDetectorService } from './device-detector.service';
let DeviceDetectorModule = DeviceDetectorModule_1 = class DeviceDetectorModule {
    static forRoot() {
        return {
            ngModule: DeviceDetectorModule_1,
            providers: [DeviceDetectorService]
        };
    }
};
DeviceDetectorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DeviceDetectorModule });
DeviceDetectorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DeviceDetectorModule_Factory(t) { return new (t || DeviceDetectorModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceDetectorModule, { imports: function () { return [CommonModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceDetectorModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ]
            }]
    }], null, null); })();
export { DeviceDetectorModule };
export { DeviceDetectorService } from './device-detector.service';
export { ReTree } from './retree';
export * from './device-detector.constants';

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5neC1kZXZpY2UtZGV0ZWN0b3IvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBT2xFLElBQWEsb0JBQW9CLDRCQUFqQyxNQUFhLG9CQUFvQjtBQUNqQyxJQUFFLE1BQU0sQ0FBQyxPQUFPO0FBQUssUUFDakIsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLHNCQUFvQjtBQUNwQyxZQUFNLFNBQVMsRUFBRSxDQUFDLHFCQUFxQixDQUFDO0FBQ3hDLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQVBZLG9CQUFvQixxREFMaEMsUUFBUSxDQUFDO09BQ1IsT0FBTyxFQUFFLGNBQ1AsWUFBWSxVQUNiLE1BQ0YsQ0FBQyxJQUNXLG9CQUFvQixDQU9oQzs7Ozs7Ozs7Ozs7MEJBQ0Q7QUFDQSxTQVRhLG9CQUFvQjtBQVNqQyxPQUFPLEVBQUUscUJBQXFCLEVBQWMsTUFBTSwyQkFBMkIsQ0FBQztBQUM5RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2xDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IERldmljZURldGVjdG9yU2VydmljZSB9IGZyb20gJy4vZGV2aWNlLWRldGVjdG9yLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlRGV0ZWN0b3JNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IERldmljZURldGVjdG9yTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbRGV2aWNlRGV0ZWN0b3JTZXJ2aWNlXVxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IHsgRGV2aWNlRGV0ZWN0b3JTZXJ2aWNlLCBEZXZpY2VJbmZvIH0gZnJvbSAnLi9kZXZpY2UtZGV0ZWN0b3Iuc2VydmljZSc7XG5leHBvcnQgeyBSZVRyZWUgfSBmcm9tICcuL3JldHJlZSc7XG5leHBvcnQgKiBmcm9tICcuL2RldmljZS1kZXRlY3Rvci5jb25zdGFudHMnO1xuIl19