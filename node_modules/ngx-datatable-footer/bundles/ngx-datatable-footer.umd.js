(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('@angular/forms'),exports, require('rxjs/operators'), require('rxjs'), require('@angular/core'), require('@angular/forms'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-datatable-footer', ['@angular/core','@angular/common','@angular/forms','exports', 'rxjs/operators', 'rxjs', '@angular/core', '@angular/forms', '@angular/common'], factory) :
    (factory(global.ng.core,global.ng.common,global.ng.forms,(global['ngx-datatable-footer'] = {}),global.rxjs.operators,global.rxjs,global.ng.core,global.ng.forms,global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,exports,operators,rxjs,core,forms,common) { 
var _c0 = ["customerInput"];
var _c1 = function (a0) { return { "page-size-column-active": a0 }; };
function DatatablePagerComponent_li_1_li_5_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 12);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_1_li_5_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); var ps_r6 = ctx.$implicit; var ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.changePageSize(ps_r6); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ps_r6 = ctx.$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r5.size === ps_r6));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ps_r6, " \u884C/\u9875");
} }
var _c2 = function (a0, a1) { return { "fa-angle-up": a0, "fa-angle-down": a1 }; };
function DatatablePagerComponent_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 8);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.pageSizeColumn = !ctx_r9.pageSizeColumn; })("mouseleave", function DatatablePagerComponent_li_1_Template_li_mouseleave_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.pageSizeColumn = true; });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "span", 9);
    ɵngcc0.ɵɵelementStart(4, "ul", 10);
    ɵngcc0.ɵɵtemplate(5, DatatablePagerComponent_li_1_li_5_Template, 2, 4, "li", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.size, " \u884C/\u9875");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r0.pageSizeColumn, !ctx_r0.pageSizeColumn));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("hidden", ctx_r0.pageSizeColumn);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.pageSizes);
} }
function DatatablePagerComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "a", 3);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_2_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.selectPage(1); });
    ɵngcc0.ɵɵelement(2, "i");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("disabled", !ctx_r1.canPrevious());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.pagerPreviousIcon);
} }
function DatatablePagerComponent_li_6_a_1_Template(rf, ctx) { if (rf & 1) {
    var _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 3);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_6_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); var pg_r14 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.selectPage(pg_r14.number); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var pg_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", pg_r14.text, " ");
} }
function DatatablePagerComponent_li_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 13);
    ɵngcc0.ɵɵtemplate(1, DatatablePagerComponent_li_6_a_1_Template, 2, 1, "a", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var pg_r14 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("active", pg_r14.number === ctx_r2.page);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.pageNumber);
} }
function DatatablePagerComponent_li_10_Template(rf, ctx) { if (rf & 1) {
    var _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "a", 3);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_10_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r21); var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.selectPage(ctx_r20.totalPages); });
    ɵngcc0.ɵɵelement(2, "i");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("disabled", !ctx_r3.canNext());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.pagerNextIcon);
} }
var _c3 = function () { return { "position": "relative" }; };
function DatatableFooterComponent_ng_template_0_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 3);
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext();
    var offset_r5 = ctx_r8.offset;
    var pageSize_r2 = ctx_r8.pageSize;
    var rowCount_r1 = ctx_r8.rowCount;
    ɵngcc0.ɵɵproperty("innerHTML", "\u5F53\u524D " + ((offset_r5 || 0) * pageSize_r2 + 1) + " - " + ((offset_r5 + 1) * pageSize_r2 > rowCount_r1 ? rowCount_r1 : (offset_r5 + 1 || 1) * pageSize_r2) + " / " + rowCount_r1 + " \u884C", ɵngcc0.ɵɵsanitizeHtml);
} }
function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "app-datatable-pager", 4);
    ɵngcc0.ɵɵlistener("change", function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template_app_datatable_pager_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); ctx_r9.datatable.onFooterPage($event); return ctx_r9.emitPage($event); })("pageChange", function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template_app_datatable_pager_pageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.emitPage($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext();
    var curPage_r4 = ctx_r12.curPage;
    var pageSize_r2 = ctx_r12.pageSize;
    var rowCount_r1 = ctx_r12.rowCount;
    var ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("linage", ctx_r7.linage)("displayBothEnds", ctx_r7.displayBothEnds)("pageNumber", ctx_r7.pageNumber)("pageSizes", ctx_r7.pageSizes)("pagerPreviousIcon", ctx_r7.pagerPreviousIcon)("pagerNextIcon", ctx_r7.pagerNextIcon)("pagerLeftArrowIcon", ctx_r7.pagerLeftArrowIcon)("pagerRightArrowIcon", ctx_r7.pagerRightArrowIcon)("page", curPage_r4)("size", pageSize_r2)("datatable", ctx_r7.datatable)("count", rowCount_r1);
} }
function DatatableFooterComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableFooterComponent_ng_template_0_div_0_Template, 1, 1, "div", 1);
    ɵngcc0.ɵɵtemplate(1, DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template, 1, 12, "app-datatable-pager", 2);
} if (rf & 2) {
    var rowCount_r1 = ctx.rowCount;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", rowCount_r1 > 0 && ctx_r0.totalNumber);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", rowCount_r1 > 0);
} }
'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DatatablePagerComponent = /** @class */ (function () {
        function DatatablePagerComponent() {
            this.linage = true;
            this.displayBothEnds = true;
            this.pageNumber = true;
            this.change = new core.EventEmitter();
            this.pageChange = new core.EventEmitter();
            // tslint:disable-next-line:member-ordering
            this._page = 1;
            // tslint:disable-next-line:member-ordering
            this._count = 0;
            // tslint:disable-next-line:member-ordering
            this._size = 0;
            // tslint:disable-next-line:member-ordering
            this.pageSizeColumn = true;
        }
        Object.defineProperty(DatatablePagerComponent.prototype, "size", {
            get: /**
             * @return {?}
             */ function () {
                return this._size;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._size = val;
                this.pages = this.calcPages();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatablePagerComponent.prototype, "count", {
            get: /**
             * @return {?}
             */ function () {
                return this._count;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._count = val;
                this.pages = this.calcPages();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatablePagerComponent.prototype, "page", {
            get: /**
             * @return {?}
             */ function () {
                return this._page || 1;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._page = val;
                this.pages = this.calcPages();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatablePagerComponent.prototype, "totalPages", {
            get: /**
             * @return {?}
             */ function () {
                /** @type {?} */
                var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);
                return Math.max(count || 0, 1);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.inputEvent = rxjs.fromEvent(this.customerInput.nativeElement, 'input')
                    .pipe(operators.debounceTime(500))
                    .subscribe(function (event) {
                    /** @type {?} */
                    var value;
                    if (event.target.value) {
                        value = Number(event.target.value);
                        if (value < 1) {
                            value = 1;
                            _this.customerInput.nativeElement.value = 1;
                        }
                        _this.selectPage(Math.round(value));
                    }
                });
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.canPrevious = /**
         * @return {?}
         */
            function () {
                return this.page > 1;
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.canNext = /**
         * @return {?}
         */
            function () {
                return this.page < this.totalPages;
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.prevPage = /**
         * @return {?}
         */
            function () {
                this.selectPage(this.page - 1);
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.nextPage = /**
         * @return {?}
         */
            function () {
                this.selectPage(this.page + 1);
            };
        /**
         * @param {?} page
         * @param {?=} changePageSize
         * @return {?}
         */
        DatatablePagerComponent.prototype.selectPage = /**
         * @param {?} page
         * @param {?=} changePageSize
         * @return {?}
         */
            function (page, changePageSize) {
                if (changePageSize) {
                    if (page > 0 && page <= this.totalPages) {
                        this.page = page;
                        this.change.emit({ page: page });
                    }
                }
                else {
                    if (page > 0 && page <= this.totalPages && page !== this.page) {
                        this.page = page;
                        this.change.emit({ page: page });
                    }
                }
            };
        /**
         * @param {?=} page
         * @return {?}
         */
        DatatablePagerComponent.prototype.calcPages = /**
         * @param {?=} page
         * @return {?}
         */
            function (page) {
                /** @type {?} */
                var pages = [];
                /** @type {?} */
                var startPage = 1;
                /** @type {?} */
                var endPage = this.totalPages;
                /** @type {?} */
                var maxSize = 5;
                /** @type {?} */
                var isMaxSized = maxSize < this.totalPages;
                page = page || this.page;
                if (isMaxSized) {
                    startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;
                    endPage = Math.min(startPage + maxSize - 1, this.totalPages);
                }
                for (var num = startPage; num <= endPage; num++) {
                    pages.push({ number: num, text: num });
                }
                return pages;
            };
        /**
         * @param {?} event
         * @return {?}
         */
        DatatablePagerComponent.prototype.valChange = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (event === null) {
                    this.customerInput.nativeElement.value = '';
                }
                if (event || event === 0) {
                    this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);
                    this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;
                }
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.blurHandel = /**
         * @return {?}
         */
            function () {
                if ((this.currentOffset === 0 || this.customerInput.nativeElement.value === '')) {
                    this.customerInput.nativeElement.value = 1;
                }
                else if (this.currentOffset !== undefined) {
                    this.customerInput.nativeElement.value = this.currentOffset;
                }
                else if (this.currentOffset === undefined) {
                    if (this.prveOffset !== undefined) {
                        this.customerInput.nativeElement.value = this.prveOffset;
                    }
                }
                this.page = Number(this.customerInput.nativeElement.value);
                this.datatable.offset = this.page - 1;
            };
        /**
         * @param {?} pageSize
         * @return {?}
         */
        DatatablePagerComponent.prototype.changePageSize = /**
         * @param {?} pageSize
         * @return {?}
         */
            function (pageSize) {
                this.datatable.limit = pageSize;
                this.selectPage(1, 'changePageSize');
            };
        /**
         * @param {?} event
         * @return {?}
         */
        DatatablePagerComponent.prototype.keyDownHandel = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.customerInput.nativeElement.value) {
                    this.prveOffset = Number(this.customerInput.nativeElement.value);
                }
                if ((event.keyCode < 48 && event.keyCode !== 8) || (event.keyCode > 57 && event.keyCode < 96) || (event.keyCode > 105)) {
                    return false;
                }
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.inputEvent.unsubscribe();
            };
        DatatablePagerComponent.propDecorators = {
            pagerLeftArrowIcon: [{ type: core.Input }],
            pagerRightArrowIcon: [{ type: core.Input }],
            pagerPreviousIcon: [{ type: core.Input }],
            pagerNextIcon: [{ type: core.Input }],
            pageSizes: [{ type: core.Input }],
            datatable: [{ type: core.Input }],
            linage: [{ type: core.Input }],
            displayBothEnds: [{ type: core.Input }],
            pageNumber: [{ type: core.Input }],
            size: [{ type: core.Input }],
            count: [{ type: core.Input }],
            page: [{ type: core.Input }],
            change: [{ type: core.Output }],
            pageChange: [{ type: core.Output }],
            customerInput: [{ type: core.ViewChild, args: ['customerInput',] }]
        };
DatatablePagerComponent.ɵfac = function DatatablePagerComponent_Factory(t) { return new (t || DatatablePagerComponent)(); };
DatatablePagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatablePagerComponent, selectors: [["app-datatable-pager"]], viewQuery: function DatatablePagerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customerInput = _t.first);
    } }, inputs: { linage: "linage", displayBothEnds: "displayBothEnds", pageNumber: "pageNumber", size: "size", count: "count", page: "page", pagerLeftArrowIcon: "pagerLeftArrowIcon", pagerRightArrowIcon: "pagerRightArrowIcon", pagerPreviousIcon: "pagerPreviousIcon", pagerNextIcon: "pagerNextIcon", pageSizes: "pageSizes", datatable: "datatable" }, outputs: { change: "change", pageChange: "pageChange" }, decls: 17, vars: 18, consts: [[1, "pager"], ["class", "page-size-continer", 3, "click", "mouseleave", 4, "ngIf"], [3, "disabled", 4, "ngIf"], [3, "click"], ["class", "pages", 3, "active", 4, "ngFor", "ngForOf"], [3, "ngStyle"], ["type", "number", "title", " ", "rows", "2", 1, "lz-jump-page", 3, "min", "ngModel", "keydown", "blur", "ngModelChange"], ["customerInput", ""], [1, "page-size-continer", 3, "click", "mouseleave"], [1, "fa", 3, "ngClass"], [1, "page-size-content", 3, "hidden"], [3, "ngClass", "click", 4, "ngFor", "ngForOf"], [3, "ngClass", "click"], [1, "pages"], [3, "click", 4, "ngIf"]], template: function DatatablePagerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, DatatablePagerComponent_li_1_Template, 6, 7, "li", 1);
        ɵngcc0.ɵɵtemplate(2, DatatablePagerComponent_li_2_Template, 3, 5, "li", 2);
        ɵngcc0.ɵɵelementStart(3, "li");
        ɵngcc0.ɵɵelementStart(4, "a", 3);
        ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_Template_a_click_4_listener() { return ctx.prevPage(); });
        ɵngcc0.ɵɵelement(5, "i");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, DatatablePagerComponent_li_6_Template, 2, 3, "li", 4);
        ɵngcc0.ɵɵelementStart(7, "li");
        ɵngcc0.ɵɵelementStart(8, "a", 3);
        ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_Template_a_click_8_listener() { return ctx.nextPage(); });
        ɵngcc0.ɵɵelement(9, "i");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, DatatablePagerComponent_li_10_Template, 3, 5, "li", 2);
        ɵngcc0.ɵɵelementStart(11, "li", 5);
        ɵngcc0.ɵɵelementStart(12, "span");
        ɵngcc0.ɵɵtext(13, "\u8DF3\u8F6C\u5230");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "input", 6, 7);
        ɵngcc0.ɵɵlistener("keydown", function DatatablePagerComponent_Template_input_keydown_14_listener($event) { return ctx.keyDownHandel($event); })("blur", function DatatablePagerComponent_Template_input_blur_14_listener() { return ctx.blurHandel(); })("ngModelChange", function DatatablePagerComponent_Template_input_ngModelChange_14_listener($event) { return ctx.valChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(16, "\u9875 ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.linage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayBothEnds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("disabled", !ctx.canPrevious());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.pagerLeftArrowIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.pages);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("disabled", !ctx.canNext());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.pagerRightArrowIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayBothEnds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction0(17, _c3));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("min", 1)("ngModel", ctx.page);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc2.NumberValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgClass], styles: [".page-size-continer[_ngcontent-%COMP%] {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer[_ngcontent-%COMP%]:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%] {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   .page-size-column-active[_ngcontent-%COMP%] {\n        color: #409eff;\n      }\n      input[type='number'][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type='number'][_ngcontent-%COMP%]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page[_ngcontent-%COMP%] {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'][_ngcontent-%COMP%] {\n        -moz-appearance: textfield;\n      }"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatablePagerComponent, [{
        type: core.Component,
        args: [{
                selector: 'app-datatable-pager',
                template: "\n    <ul class=\"pager\">\n      <li class=\"page-size-continer\" *ngIf=\"linage\" (click)=\"pageSizeColumn=!pageSizeColumn\" (mouseleave)=\"pageSizeColumn=true\">\n        <span>{{size}} \u884C/\u9875</span>\n        <span class=\"fa\" [ngClass]=\"{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}\"></span>\n        <ul [hidden]=\"pageSizeColumn\" class=\"page-size-content\">\n          <li *ngFor=\"let ps of pageSizes\" (click)=\"changePageSize(ps)\" [ngClass]=\"{'page-size-column-active':size===ps}\">{{ps}} \u884C/\u9875</li>\n        </ul>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"selectPage(1)\">\n          <i class=\"{{pagerPreviousIcon}}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"prevPage()\">\n          <i class=\"{{pagerLeftArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li class=\"pages\" *ngFor=\"let pg of pages\" [class.active]=\"pg.number === page\">\n        <a *ngIf=\"pageNumber\" (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a (click)=\"nextPage()\">\n          <i class=\"{{pagerRightArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canNext()\">\n        <a (click)=\"selectPage(totalPages)\">\n          <i class=\"{{pagerNextIcon}}\"></i>\n        </a>\n      </li>\n      <li [ngStyle]=\"{'position':'relative'}\">\n        <span>\u8DF3\u8F6C\u5230</span>\n        <input #customerInput class=\"lz-jump-page\" type=\"number\" title=\" \" rows=\"2\" [min]=\"1\" [ngModel]=\"page\" (keydown)='keyDownHandel($event)'\n          (blur)=\"blurHandel()\" (ngModelChange)=\"valChange($event)\" />\u9875\n      </li>\n    </ul>",
                styles: ["\n      .page-size-continer {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer .page-size-content li {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer .page-size-content li:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content .page-size-column-active {\n        color: #409eff;\n      }\n      input[type='number']::-webkit-inner-spin-button,\n      input[type='number']::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'] {\n        -moz-appearance: textfield;\n      }\n    "]
            }]
    }], function () { return []; }, { linage: [{
            type: core.Input
        }], displayBothEnds: [{
            type: core.Input
        }], pageNumber: [{
            type: core.Input
        }], change: [{
            type: core.Output
        }], pageChange: [{
            type: core.Output
        }], size: [{
            type: core.Input
        }], count: [{
            type: core.Input
        }], page: [{
            type: core.Input
        }], pagerLeftArrowIcon: [{
            type: core.Input
        }], pagerRightArrowIcon: [{
            type: core.Input
        }], pagerPreviousIcon: [{
            type: core.Input
        }], pagerNextIcon: [{
            type: core.Input
        }], pageSizes: [{
            type: core.Input
        }], datatable: [{
            type: core.Input
        }], customerInput: [{
            type: core.ViewChild,
            args: ['customerInput']
        }] }); })();
        return DatatablePagerComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DatatableFooterComponent = /** @class */ (function () {
        function DatatableFooterComponent() {
            this.pagerLeftArrowIcon = 'fa fa-angle-left';
            this.pagerRightArrowIcon = 'fa fa-angle-right';
            this.pagerPreviousIcon = 'fa fa-step-backward';
            this.pagerNextIcon = 'fa fa-step-forward';
            this.pageSizes = [10, 20, 30, 40, 50];
            this.totalNumber = true;
            this.linage = true;
            this.displayBothEnds = true;
            this.pageNumber = true;
            this.pageChange = new core.EventEmitter();
        }
        Object.defineProperty(DatatableFooterComponent.prototype, "template", {
            get: /**
             * @return {?}
             */ function () {
                return this._template;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._template = val;
                this.update();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatableFooterComponent.prototype, "datatable", {
            get: /**
             * @return {?}
             */ function () {
                return this._datatable;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._datatable = val;
                this.update();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        DatatableFooterComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        /**
         * @return {?}
         */
        DatatableFooterComponent.prototype.update = /**
         * @return {?}
         */
            function () {
                if (this._datatable &&
                    this._template &&
                    (!this._datatable.footer || !this._datatable.footer.template)) {
                    if (this._datatable.footer) {
                        this._datatable.footer.template = this._template;
                    }
                    else {
                        this._datatable.footer = {
                            footerHeight: this._datatable.footerHeight,
                            totalMessage: this._datatable.messages.totalMessage,
                            selectedMessage: this._datatable.messages.selectedMessage,
                            pagerLeftArrowIcon: '',
                            pagerRightArrowIcon: '',
                            pagerPreviousIcon: '',
                            pagerNextIcon: '',
                            template: this._template
                        };
                    }
                }
            };
        /**
         * @param {?} page
         * @return {?}
         */
        DatatableFooterComponent.prototype.emitPage = /**
         * @param {?} page
         * @return {?}
         */
            function (page) {
                this.pageChange.emit(page);
            };
        /** @nocollapse */
        DatatableFooterComponent.ctorParameters = function () { return []; };
        DatatableFooterComponent.propDecorators = {
            template: [{ type: core.ViewChild, args: [core.TemplateRef,] }],
            datatable: [{ type: core.Input }],
            pagerLeftArrowIcon: [{ type: core.Input }],
            pagerRightArrowIcon: [{ type: core.Input }],
            pagerPreviousIcon: [{ type: core.Input }],
            pagerNextIcon: [{ type: core.Input }],
            pageSizes: [{ type: core.Input }],
            totalNumber: [{ type: core.Input }],
            linage: [{ type: core.Input }],
            displayBothEnds: [{ type: core.Input }],
            pageNumber: [{ type: core.Input }],
            page: [{ type: core.Input }],
            pageChange: [{ type: core.Output }]
        };
DatatableFooterComponent.ɵfac = function DatatableFooterComponent_Factory(t) { return new (t || DatatableFooterComponent)(); };
DatatableFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableFooterComponent, selectors: [["ngx-datatable-footer"]], viewQuery: function DatatableFooterComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(core.TemplateRef, 1);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { pagerLeftArrowIcon: "pagerLeftArrowIcon", pagerRightArrowIcon: "pagerRightArrowIcon", pagerPreviousIcon: "pagerPreviousIcon", pagerNextIcon: "pagerNextIcon", pageSizes: "pageSizes", totalNumber: "totalNumber", linage: "linage", displayBothEnds: "displayBothEnds", pageNumber: "pageNumber", datatable: "datatable", page: "page" }, outputs: { pageChange: "pageChange" }, decls: 1, vars: 0, consts: [["ngx-datatable-footer-template", ""], ["class", "page-count", 3, "innerHTML", 4, "ngIf"], ["class", "datatable-pager", 3, "linage", "displayBothEnds", "pageNumber", "pageSizes", "pagerPreviousIcon", "pagerNextIcon", "pagerLeftArrowIcon", "pagerRightArrowIcon", "page", "size", "datatable", "count", "change", "pageChange", 4, "ngIf"], [1, "page-count", 3, "innerHTML"], [1, "datatable-pager", 3, "linage", "displayBothEnds", "pageNumber", "pageSizes", "pagerPreviousIcon", "pagerNextIcon", "pagerLeftArrowIcon", "pagerRightArrowIcon", "page", "size", "datatable", "count", "change", "pageChange"]], template: function DatatableFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DatatableFooterComponent_ng_template_0_Template, 2, 2, "ng-template", 0);
    } }, directives: [ɵngcc1.NgIf, DatatablePagerComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableFooterComponent, [{
        type: core.Component,
        args: [{
                selector: 'ngx-datatable-footer',
                template: "\n  <ng-template ngx-datatable-footer-template let-rowCount=\"rowCount\" let-pageSize=\"pageSize\" let-selectedCount=\"selectedCount\"\n    let-curPage=\"curPage\" let-offset=\"offset\">\n    <div class=\"page-count\" *ngIf=\"rowCount>0&&totalNumber\" [innerHTML]=\"'\u5F53\u524D '+((offset||0) * pageSize + 1)+' - '+((offset+1) * pageSize > rowCount?rowCount : ((offset+1)||1) * pageSize)+' / '+rowCount+' \u884C'\">\n    </div>\n    <app-datatable-pager *ngIf=\"rowCount>0\" [linage]=\"linage\" [displayBothEnds]=\"displayBothEnds\" [pageNumber]=\"pageNumber\" [pageSizes]=\"pageSizes\" [pagerPreviousIcon]=\"pagerPreviousIcon\" [pagerNextIcon]=\"pagerNextIcon\"\n      [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\" [pagerRightArrowIcon]=\"pagerRightArrowIcon\" [page]=\"curPage\" [size]=\"pageSize\"\n      [datatable]=\"datatable\" [count]=\"rowCount\" (change)=\"datatable.onFooterPage($event);emitPage($event)\" (pageChange)=\"emitPage($event)\" class=\"datatable-pager\">\n    </app-datatable-pager>\n  </ng-template>"
            }]
    }], function () { return []; }, { pagerLeftArrowIcon: [{
            type: core.Input
        }], pagerRightArrowIcon: [{
            type: core.Input
        }], pagerPreviousIcon: [{
            type: core.Input
        }], pagerNextIcon: [{
            type: core.Input
        }], pageSizes: [{
            type: core.Input
        }], totalNumber: [{
            type: core.Input
        }], linage: [{
            type: core.Input
        }], displayBothEnds: [{
            type: core.Input
        }], pageNumber: [{
            type: core.Input
        }], pageChange: [{
            type: core.Output
        }], template: [{
            type: core.ViewChild,
            args: [core.TemplateRef]
        }], datatable: [{
            type: core.Input
        }], page: [{
            type: core.Input
        }] }); })();
        return DatatableFooterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxDatatableFooterModule = /** @class */ (function () {
        function NgxDatatableFooterModule() {
        }
        /**
         * @return {?}
         */
        NgxDatatableFooterModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: NgxDatatableFooterModule
                };
            };
NgxDatatableFooterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxDatatableFooterModule });
NgxDatatableFooterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxDatatableFooterModule_Factory(t) { return new (t || NgxDatatableFooterModule)(); }, imports: [[
            common.CommonModule,
            forms.FormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxDatatableFooterModule, { declarations: [DatatablePagerComponent, DatatableFooterComponent], imports: [ɵngcc1.CommonModule, ɵngcc2.FormsModule], exports: [DatatablePagerComponent, DatatableFooterComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxDatatableFooterModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    forms.FormsModule
                ],
                declarations: [
                    DatatablePagerComponent,
                    DatatableFooterComponent
                ],
                exports: [
                    DatatablePagerComponent,
                    DatatableFooterComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return NgxDatatableFooterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.DatatablePagerComponent = DatatablePagerComponent;
    exports.DatatableFooterComponent = DatatableFooterComponent;
    exports.NgxDatatableFooterModule = NgxDatatableFooterModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-datatable-footer.umd.js.map