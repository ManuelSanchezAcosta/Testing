(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/operators'), require('rxjs'), require('@angular/core'), require('@angular/forms'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-datatable-footer', ['exports', 'rxjs/operators', 'rxjs', '@angular/core', '@angular/forms', '@angular/common'], factory) :
    (factory((global['ngx-datatable-footer'] = {}),global.rxjs.operators,global.rxjs,global.ng.core,global.ng.forms,global.ng.common));
}(this, (function (exports,operators,rxjs,core,forms,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DatatablePagerComponent = /** @class */ (function () {
        function DatatablePagerComponent() {
            this.linage = true;
            this.displayBothEnds = true;
            this.pageNumber = true;
            this.change = new core.EventEmitter();
            this.pageChange = new core.EventEmitter();
            // tslint:disable-next-line:member-ordering
            this._page = 1;
            // tslint:disable-next-line:member-ordering
            this._count = 0;
            // tslint:disable-next-line:member-ordering
            this._size = 0;
            // tslint:disable-next-line:member-ordering
            this.pageSizeColumn = true;
        }
        Object.defineProperty(DatatablePagerComponent.prototype, "size", {
            get: /**
             * @return {?}
             */ function () {
                return this._size;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._size = val;
                this.pages = this.calcPages();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatablePagerComponent.prototype, "count", {
            get: /**
             * @return {?}
             */ function () {
                return this._count;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._count = val;
                this.pages = this.calcPages();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatablePagerComponent.prototype, "page", {
            get: /**
             * @return {?}
             */ function () {
                return this._page || 1;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._page = val;
                this.pages = this.calcPages();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatablePagerComponent.prototype, "totalPages", {
            get: /**
             * @return {?}
             */ function () {
                /** @type {?} */
                var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);
                return Math.max(count || 0, 1);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.inputEvent = rxjs.fromEvent(this.customerInput.nativeElement, 'input')
                    .pipe(operators.debounceTime(500))
                    .subscribe(function (event) {
                    /** @type {?} */
                    var value;
                    if (event.target.value) {
                        value = Number(event.target.value);
                        if (value < 1) {
                            value = 1;
                            _this.customerInput.nativeElement.value = 1;
                        }
                        _this.selectPage(Math.round(value));
                    }
                });
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.canPrevious = /**
         * @return {?}
         */
            function () {
                return this.page > 1;
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.canNext = /**
         * @return {?}
         */
            function () {
                return this.page < this.totalPages;
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.prevPage = /**
         * @return {?}
         */
            function () {
                this.selectPage(this.page - 1);
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.nextPage = /**
         * @return {?}
         */
            function () {
                this.selectPage(this.page + 1);
            };
        /**
         * @param {?} page
         * @param {?=} changePageSize
         * @return {?}
         */
        DatatablePagerComponent.prototype.selectPage = /**
         * @param {?} page
         * @param {?=} changePageSize
         * @return {?}
         */
            function (page, changePageSize) {
                if (changePageSize) {
                    if (page > 0 && page <= this.totalPages) {
                        this.page = page;
                        this.change.emit({ page: page });
                    }
                }
                else {
                    if (page > 0 && page <= this.totalPages && page !== this.page) {
                        this.page = page;
                        this.change.emit({ page: page });
                    }
                }
            };
        /**
         * @param {?=} page
         * @return {?}
         */
        DatatablePagerComponent.prototype.calcPages = /**
         * @param {?=} page
         * @return {?}
         */
            function (page) {
                /** @type {?} */
                var pages = [];
                /** @type {?} */
                var startPage = 1;
                /** @type {?} */
                var endPage = this.totalPages;
                /** @type {?} */
                var maxSize = 5;
                /** @type {?} */
                var isMaxSized = maxSize < this.totalPages;
                page = page || this.page;
                if (isMaxSized) {
                    startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;
                    endPage = Math.min(startPage + maxSize - 1, this.totalPages);
                }
                for (var num = startPage; num <= endPage; num++) {
                    pages.push({ number: num, text: num });
                }
                return pages;
            };
        /**
         * @param {?} event
         * @return {?}
         */
        DatatablePagerComponent.prototype.valChange = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (event === null) {
                    this.customerInput.nativeElement.value = '';
                }
                if (event || event === 0) {
                    this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);
                    this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;
                }
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.blurHandel = /**
         * @return {?}
         */
            function () {
                if ((this.currentOffset === 0 || this.customerInput.nativeElement.value === '')) {
                    this.customerInput.nativeElement.value = 1;
                }
                else if (this.currentOffset !== undefined) {
                    this.customerInput.nativeElement.value = this.currentOffset;
                }
                else if (this.currentOffset === undefined) {
                    if (this.prveOffset !== undefined) {
                        this.customerInput.nativeElement.value = this.prveOffset;
                    }
                }
                this.page = Number(this.customerInput.nativeElement.value);
                this.datatable.offset = this.page - 1;
            };
        /**
         * @param {?} pageSize
         * @return {?}
         */
        DatatablePagerComponent.prototype.changePageSize = /**
         * @param {?} pageSize
         * @return {?}
         */
            function (pageSize) {
                this.datatable.limit = pageSize;
                this.selectPage(1, 'changePageSize');
            };
        /**
         * @param {?} event
         * @return {?}
         */
        DatatablePagerComponent.prototype.keyDownHandel = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.customerInput.nativeElement.value) {
                    this.prveOffset = Number(this.customerInput.nativeElement.value);
                }
                if ((event.keyCode < 48 && event.keyCode !== 8) || (event.keyCode > 57 && event.keyCode < 96) || (event.keyCode > 105)) {
                    return false;
                }
            };
        /**
         * @return {?}
         */
        DatatablePagerComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.inputEvent.unsubscribe();
            };
        DatatablePagerComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'app-datatable-pager',
                        template: "\n    <ul class=\"pager\">\n      <li class=\"page-size-continer\" *ngIf=\"linage\" (click)=\"pageSizeColumn=!pageSizeColumn\" (mouseleave)=\"pageSizeColumn=true\">\n        <span>{{size}} \u884C/\u9875</span>\n        <span class=\"fa\" [ngClass]=\"{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}\"></span>\n        <ul [hidden]=\"pageSizeColumn\" class=\"page-size-content\">\n          <li *ngFor=\"let ps of pageSizes\" (click)=\"changePageSize(ps)\" [ngClass]=\"{'page-size-column-active':size===ps}\">{{ps}} \u884C/\u9875</li>\n        </ul>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"selectPage(1)\">\n          <i class=\"{{pagerPreviousIcon}}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"prevPage()\">\n          <i class=\"{{pagerLeftArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li class=\"pages\" *ngFor=\"let pg of pages\" [class.active]=\"pg.number === page\">\n        <a *ngIf=\"pageNumber\" (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a (click)=\"nextPage()\">\n          <i class=\"{{pagerRightArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canNext()\">\n        <a (click)=\"selectPage(totalPages)\">\n          <i class=\"{{pagerNextIcon}}\"></i>\n        </a>\n      </li>\n      <li [ngStyle]=\"{'position':'relative'}\">\n        <span>\u8DF3\u8F6C\u5230</span>\n        <input #customerInput class=\"lz-jump-page\" type=\"number\" title=\" \" rows=\"2\" [min]=\"1\" [ngModel]=\"page\" (keydown)='keyDownHandel($event)'\n          (blur)=\"blurHandel()\" (ngModelChange)=\"valChange($event)\" />\u9875\n      </li>\n    </ul>",
                        styles: ["\n      .page-size-continer {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer .page-size-content li {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer .page-size-content li:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content .page-size-column-active {\n        color: #409eff;\n      }\n      input[type='number']::-webkit-inner-spin-button,\n      input[type='number']::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'] {\n        -moz-appearance: textfield;\n      }\n    "]
                    }] }
        ];
        DatatablePagerComponent.propDecorators = {
            pagerLeftArrowIcon: [{ type: core.Input }],
            pagerRightArrowIcon: [{ type: core.Input }],
            pagerPreviousIcon: [{ type: core.Input }],
            pagerNextIcon: [{ type: core.Input }],
            pageSizes: [{ type: core.Input }],
            datatable: [{ type: core.Input }],
            linage: [{ type: core.Input }],
            displayBothEnds: [{ type: core.Input }],
            pageNumber: [{ type: core.Input }],
            size: [{ type: core.Input }],
            count: [{ type: core.Input }],
            page: [{ type: core.Input }],
            change: [{ type: core.Output }],
            pageChange: [{ type: core.Output }],
            customerInput: [{ type: core.ViewChild, args: ['customerInput',] }]
        };
        return DatatablePagerComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DatatableFooterComponent = /** @class */ (function () {
        function DatatableFooterComponent() {
            this.pagerLeftArrowIcon = 'fa fa-angle-left';
            this.pagerRightArrowIcon = 'fa fa-angle-right';
            this.pagerPreviousIcon = 'fa fa-step-backward';
            this.pagerNextIcon = 'fa fa-step-forward';
            this.pageSizes = [10, 20, 30, 40, 50];
            this.totalNumber = true;
            this.linage = true;
            this.displayBothEnds = true;
            this.pageNumber = true;
            this.pageChange = new core.EventEmitter();
        }
        Object.defineProperty(DatatableFooterComponent.prototype, "template", {
            get: /**
             * @return {?}
             */ function () {
                return this._template;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._template = val;
                this.update();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatatableFooterComponent.prototype, "datatable", {
            get: /**
             * @return {?}
             */ function () {
                return this._datatable;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._datatable = val;
                this.update();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        DatatableFooterComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        /**
         * @return {?}
         */
        DatatableFooterComponent.prototype.update = /**
         * @return {?}
         */
            function () {
                if (this._datatable &&
                    this._template &&
                    (!this._datatable.footer || !this._datatable.footer.template)) {
                    if (this._datatable.footer) {
                        this._datatable.footer.template = this._template;
                    }
                    else {
                        this._datatable.footer = {
                            footerHeight: this._datatable.footerHeight,
                            totalMessage: this._datatable.messages.totalMessage,
                            selectedMessage: this._datatable.messages.selectedMessage,
                            pagerLeftArrowIcon: '',
                            pagerRightArrowIcon: '',
                            pagerPreviousIcon: '',
                            pagerNextIcon: '',
                            template: this._template
                        };
                    }
                }
            };
        /**
         * @param {?} page
         * @return {?}
         */
        DatatableFooterComponent.prototype.emitPage = /**
         * @param {?} page
         * @return {?}
         */
            function (page) {
                this.pageChange.emit(page);
            };
        DatatableFooterComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'ngx-datatable-footer',
                        template: "\n  <ng-template ngx-datatable-footer-template let-rowCount=\"rowCount\" let-pageSize=\"pageSize\" let-selectedCount=\"selectedCount\"\n    let-curPage=\"curPage\" let-offset=\"offset\">\n    <div class=\"page-count\" *ngIf=\"rowCount>0&&totalNumber\" [innerHTML]=\"'\u5F53\u524D '+((offset||0) * pageSize + 1)+' - '+((offset+1) * pageSize > rowCount?rowCount : ((offset+1)||1) * pageSize)+' / '+rowCount+' \u884C'\">\n    </div>\n    <app-datatable-pager *ngIf=\"rowCount>0\" [linage]=\"linage\" [displayBothEnds]=\"displayBothEnds\" [pageNumber]=\"pageNumber\" [pageSizes]=\"pageSizes\" [pagerPreviousIcon]=\"pagerPreviousIcon\" [pagerNextIcon]=\"pagerNextIcon\"\n      [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\" [pagerRightArrowIcon]=\"pagerRightArrowIcon\" [page]=\"curPage\" [size]=\"pageSize\"\n      [datatable]=\"datatable\" [count]=\"rowCount\" (change)=\"datatable.onFooterPage($event);emitPage($event)\" (pageChange)=\"emitPage($event)\" class=\"datatable-pager\">\n    </app-datatable-pager>\n  </ng-template>"
                    }] }
        ];
        /** @nocollapse */
        DatatableFooterComponent.ctorParameters = function () { return []; };
        DatatableFooterComponent.propDecorators = {
            template: [{ type: core.ViewChild, args: [core.TemplateRef,] }],
            datatable: [{ type: core.Input }],
            pagerLeftArrowIcon: [{ type: core.Input }],
            pagerRightArrowIcon: [{ type: core.Input }],
            pagerPreviousIcon: [{ type: core.Input }],
            pagerNextIcon: [{ type: core.Input }],
            pageSizes: [{ type: core.Input }],
            totalNumber: [{ type: core.Input }],
            linage: [{ type: core.Input }],
            displayBothEnds: [{ type: core.Input }],
            pageNumber: [{ type: core.Input }],
            page: [{ type: core.Input }],
            pageChange: [{ type: core.Output }]
        };
        return DatatableFooterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxDatatableFooterModule = /** @class */ (function () {
        function NgxDatatableFooterModule() {
        }
        /**
         * @return {?}
         */
        NgxDatatableFooterModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: NgxDatatableFooterModule
                };
            };
        NgxDatatableFooterModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            forms.FormsModule
                        ],
                        declarations: [
                            DatatablePagerComponent,
                            DatatableFooterComponent
                        ],
                        exports: [
                            DatatablePagerComponent,
                            DatatableFooterComponent
                        ]
                    },] }
        ];
        return NgxDatatableFooterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.DatatablePagerComponent = DatatablePagerComponent;
    exports.DatatableFooterComponent = DatatableFooterComponent;
    exports.NgxDatatableFooterModule = NgxDatatableFooterModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-datatable-footer.umd.js.map