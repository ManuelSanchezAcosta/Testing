{"version":3,"sources":["ng://ngx-datatable-footer/lib/datatable-pager/datatable-pager.component.ts","ng://ngx-datatable-footer/lib/datatable-footer/datatable-footer.component.ts","ng://ngx-datatable-footer/lib/ngx-datatable-footer.module.ts"],"names":["DatatablePagerComponent","this","linage","displayBothEnds","pageNumber","change","EventEmitter","pageChange","_page","_count","_size","pageSizeColumn","Object","defineProperty","prototype","val","pages","calcPages","count","size","Math","ceil","max","ngOnInit","ngAfterViewInit","_this","inputEvent","fromEvent","customerInput","nativeElement","pipe","debounceTime","subscribe","event","value","target","Number","selectPage","round","canPrevious","page","canNext","totalPages","prevPage","nextPage","changePageSize","emit","startPage","endPage","isMaxSized","min","num","push","number","text","valChange","currentOffset","blurHandel","undefined","prveOffset","datatable","offset","pageSize","limit","keyDownHandel","keyCode","ngOnDestroy","unsubscribe","Component","args","selector","template","Input","Output","ViewChild","DatatableFooterComponent","pagerLeftArrowIcon","pagerRightArrowIcon","pagerPreviousIcon","pagerNextIcon","pageSizes","totalNumber","_template","update","_datatable","footer","footerHeight","totalMessage","messages","selectedMessage","emitPage","TemplateRef","NgxDatatableFooterModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, AfterViewInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\n\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li class=\"page-size-continer\" *ngIf=\"linage\" (click)=\"pageSizeColumn=!pageSizeColumn\" (mouseleave)=\"pageSizeColumn=true\">\n        <span>{{size}} è¡/é¡µ</span>\n        <span class=\"fa\" [ngClass]=\"{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}\"></span>\n        <ul [hidden]=\"pageSizeColumn\" class=\"page-size-content\">\n          <li *ngFor=\"let ps of pageSizes\" (click)=\"changePageSize(ps)\" [ngClass]=\"{'page-size-column-active':size===ps}\">{{ps}} è¡/é¡µ</li>\n        </ul>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"selectPage(1)\">\n          <i class=\"{{pagerPreviousIcon}}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"prevPage()\">\n          <i class=\"{{pagerLeftArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li class=\"pages\" *ngFor=\"let pg of pages\" [class.active]=\"pg.number === page\">\n        <a *ngIf=\"pageNumber\" (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a (click)=\"nextPage()\">\n          <i class=\"{{pagerRightArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canNext()\">\n        <a (click)=\"selectPage(totalPages)\">\n          <i class=\"{{pagerNextIcon}}\"></i>\n        </a>\n      </li>\n      <li [ngStyle]=\"{'position':'relative'}\">\n        <span>è·³è½¬å°</span>\n        <input #customerInput class=\"lz-jump-page\" type=\"number\" title=\" \" rows=\"2\" [min]=\"1\" [ngModel]=\"page\" (keydown)='keyDownHandel($event)'\n          (blur)=\"blurHandel()\" (ngModelChange)=\"valChange($event)\" />é¡µ\n      </li>\n    </ul>`,\n  styles: [\n    `\n      .page-size-continer {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer .page-size-content li {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer .page-size-content li:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content .page-size-column-active {\n        color: #409eff;\n      }\n      input[type='number']::-webkit-inner-spin-button,\n      input[type='number']::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'] {\n        -moz-appearance: textfield;\n      }\n    `\n  ]\n})\nexport class DatatablePagerComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() pageSizes: any[];\n  @Input() datatable: any;\n  @Input() linage?: Boolean = true;\n  @Input() displayBothEnds?: Boolean = true;\n  @Input() pageNumber?: Boolean = true;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n  get page(): number {\n    return this._page || 1;\n  }\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n  @Output() pageChange: EventEmitter<any> = new EventEmitter();\n\n  currentOffset: number;\n  prveOffset: number;\n  inputEvent: Subscription;\n\n  @ViewChild('customerInput')\n  customerInput: ElementRef;\n\n  ngOnInit() { }\n\n  ngAfterViewInit() {\n    this.inputEvent = fromEvent(this.customerInput.nativeElement, 'input')\n      .pipe(debounceTime(500))\n      .subscribe((event: any) => {\n        let value: number;\n        if (event.target.value) {\n          value = Number(event.target.value);\n          if (value < 1) {\n            value = 1;\n            this.customerInput.nativeElement.value = 1;\n          }\n          this.selectPage(Math.round(value));\n        }\n      });\n  }\n\n  // tslint:disable-next-line:member-ordering\n  _page = 1;\n  // tslint:disable-next-line:member-ordering\n  _count = 0;\n  // tslint:disable-next-line:member-ordering\n  _size = 0;\n  // tslint:disable-next-line:member-ordering\n  pages: any;\n  // tslint:disable-next-line:member-ordering\n  pageSizeColumn: boolean = true;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number, changePageSize?: any): void {\n    if (changePageSize) {\n      if (page > 0 && page <= this.totalPages) {\n        this.page = page;\n        this.change.emit({ page });\n      }\n    } else {\n      if (page > 0 && page <= this.totalPages && page !== this.page) {\n        this.page = page;\n        this.change.emit({ page });\n      }\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;\n      endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({ number: num, text: num });\n    }\n\n    return pages;\n  }\n\n  valChange(event: any) {\n    if (event === null) {\n      this.customerInput.nativeElement.value = '';\n    }\n    if (event || event === 0) {\n      this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);\n      this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;\n    }\n  }\n\n  blurHandel() {\n    if ((this.currentOffset === 0 || this.customerInput.nativeElement.value === '')) {\n      this.customerInput.nativeElement.value = 1;\n    } else if (this.currentOffset !== undefined) {\n      this.customerInput.nativeElement.value = this.currentOffset;\n    } else if (this.currentOffset === undefined) {\n      if (this.prveOffset !== undefined) {\n        this.customerInput.nativeElement.value = this.prveOffset;\n      }\n    }\n\n    this.page = Number(this.customerInput.nativeElement.value);\n    this.datatable.offset = this.page - 1;\n  }\n\n  changePageSize(pageSize: number) {\n    this.datatable.limit = pageSize;\n    this.selectPage(1, 'changePageSize');\n  }\n\n  keyDownHandel(event: any) {\n    if (this.customerInput.nativeElement.value) {\n      this.prveOffset = Number(this.customerInput.nativeElement.value);\n    }\n    if ((event.keyCode < 48 && event.keyCode !== 8) || (event.keyCode > 57 && event.keyCode < 96) || (event.keyCode > 105)) {\n      return false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.inputEvent.unsubscribe();\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'ngx-datatable-footer',\n  template: `\n  <ng-template ngx-datatable-footer-template let-rowCount=\"rowCount\" let-pageSize=\"pageSize\" let-selectedCount=\"selectedCount\"\n    let-curPage=\"curPage\" let-offset=\"offset\">\n    <div class=\"page-count\" *ngIf=\"rowCount>0&&totalNumber\" [innerHTML]=\"'å½å '+((offset||0) * pageSize + 1)+' - '+((offset+1) * pageSize > rowCount?rowCount : ((offset+1)||1) * pageSize)+' / '+rowCount+' è¡'\">\n    </div>\n    <app-datatable-pager *ngIf=\"rowCount>0\" [linage]=\"linage\" [displayBothEnds]=\"displayBothEnds\" [pageNumber]=\"pageNumber\" [pageSizes]=\"pageSizes\" [pagerPreviousIcon]=\"pagerPreviousIcon\" [pagerNextIcon]=\"pagerNextIcon\"\n      [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\" [pagerRightArrowIcon]=\"pagerRightArrowIcon\" [page]=\"curPage\" [size]=\"pageSize\"\n      [datatable]=\"datatable\" [count]=\"rowCount\" (change)=\"datatable.onFooterPage($event);emitPage($event)\" (pageChange)=\"emitPage($event)\" class=\"datatable-pager\">\n    </app-datatable-pager>\n  </ng-template>`\n})\nexport class DatatableFooterComponent implements OnInit {\n  @ViewChild(TemplateRef)\n  set template(val: TemplateRef<any>) {\n    this._template = val;\n    this.update();\n  }\n  get template(): TemplateRef<any> {\n    return this._template;\n  }\n\n  @Input()\n  set datatable(val: any) {\n    this._datatable = val;\n    this.update();\n  }\n  get datatable(): any {\n    return this._datatable;\n  }\n\n  @Input() pagerLeftArrowIcon?: String = 'fa fa-angle-left';\n  @Input() pagerRightArrowIcon?: String = 'fa fa-angle-right';\n  @Input() pagerPreviousIcon?: String = 'fa fa-step-backward';\n  @Input() pagerNextIcon?: String = 'fa fa-step-forward';\n  @Input() pageSizes?: any[] = [10, 20, 30, 40, 50];\n  @Input() totalNumber?: Boolean = true;\n  @Input() linage?: Boolean = true;\n  @Input() displayBothEnds?: Boolean = true;\n  @Input() pageNumber?: Boolean = true;\n  @Input() page?: number;\n\n  @Output() pageChange = new EventEmitter();\n\n  private _template: any;\n  private _datatable: any;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  update(): void {\n    if (\n      this._datatable &&\n      this._template &&\n      (!this._datatable.footer || !this._datatable.footer.template)\n    ) {\n      if (this._datatable.footer) {\n        this._datatable.footer.template = this._template;\n      } else {\n        this._datatable.footer = {\n          footerHeight: this._datatable.footerHeight,\n          totalMessage: this._datatable.messages.totalMessage,\n          selectedMessage: this._datatable.messages.selectedMessage,\n          pagerLeftArrowIcon: '',\n          pagerRightArrowIcon: '',\n          pagerPreviousIcon: '',\n          pagerNextIcon: '',\n          template: this._template\n        };\n      }\n    }\n  }\n\n  emitPage(page: number) {\n    this.pageChange.emit(page);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { DatatablePagerComponent } from './datatable-pager/datatable-pager.component';\nimport { DatatableFooterComponent } from './datatable-footer/datatable-footer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    DatatablePagerComponent,\n    DatatableFooterComponent\n  ],\n  exports: [\n    DatatablePagerComponent,\n    DatatableFooterComponent\n  ]\n})\nexport class NgxDatatableFooterModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxDatatableFooterModule\n    };\n  }\n}\n"]}