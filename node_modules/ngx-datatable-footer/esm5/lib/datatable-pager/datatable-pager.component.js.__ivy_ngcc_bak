/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';
import { debounceTime } from 'rxjs/operators';
import { fromEvent } from 'rxjs';
var DatatablePagerComponent = /** @class */ (function () {
    function DatatablePagerComponent() {
        this.linage = true;
        this.displayBothEnds = true;
        this.pageNumber = true;
        this.change = new EventEmitter();
        this.pageChange = new EventEmitter();
        // tslint:disable-next-line:member-ordering
        this._page = 1;
        // tslint:disable-next-line:member-ordering
        this._count = 0;
        // tslint:disable-next-line:member-ordering
        this._size = 0;
        // tslint:disable-next-line:member-ordering
        this.pageSizeColumn = true;
    }
    Object.defineProperty(DatatablePagerComponent.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this._size;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._size = val;
            this.pages = this.calcPages();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatatablePagerComponent.prototype, "count", {
        get: /**
         * @return {?}
         */
        function () {
            return this._count;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._count = val;
            this.pages = this.calcPages();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatatablePagerComponent.prototype, "page", {
        get: /**
         * @return {?}
         */
        function () {
            return this._page || 1;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._page = val;
            this.pages = this.calcPages();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatatablePagerComponent.prototype, "totalPages", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);
            return Math.max(count || 0, 1);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.inputEvent = fromEvent(this.customerInput.nativeElement, 'input')
            .pipe(debounceTime(500))
            .subscribe(function (event) {
            /** @type {?} */
            var value;
            if (event.target.value) {
                value = Number(event.target.value);
                if (value < 1) {
                    value = 1;
                    _this.customerInput.nativeElement.value = 1;
                }
                _this.selectPage(Math.round(value));
            }
        });
    };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.canPrevious = /**
     * @return {?}
     */
    function () {
        return this.page > 1;
    };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.canNext = /**
     * @return {?}
     */
    function () {
        return this.page < this.totalPages;
    };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.prevPage = /**
     * @return {?}
     */
    function () {
        this.selectPage(this.page - 1);
    };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.nextPage = /**
     * @return {?}
     */
    function () {
        this.selectPage(this.page + 1);
    };
    /**
     * @param {?} page
     * @param {?=} changePageSize
     * @return {?}
     */
    DatatablePagerComponent.prototype.selectPage = /**
     * @param {?} page
     * @param {?=} changePageSize
     * @return {?}
     */
    function (page, changePageSize) {
        if (changePageSize) {
            if (page > 0 && page <= this.totalPages) {
                this.page = page;
                this.change.emit({ page: page });
            }
        }
        else {
            if (page > 0 && page <= this.totalPages && page !== this.page) {
                this.page = page;
                this.change.emit({ page: page });
            }
        }
    };
    /**
     * @param {?=} page
     * @return {?}
     */
    DatatablePagerComponent.prototype.calcPages = /**
     * @param {?=} page
     * @return {?}
     */
    function (page) {
        /** @type {?} */
        var pages = [];
        /** @type {?} */
        var startPage = 1;
        /** @type {?} */
        var endPage = this.totalPages;
        /** @type {?} */
        var maxSize = 5;
        /** @type {?} */
        var isMaxSized = maxSize < this.totalPages;
        page = page || this.page;
        if (isMaxSized) {
            startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;
            endPage = Math.min(startPage + maxSize - 1, this.totalPages);
        }
        for (var num = startPage; num <= endPage; num++) {
            pages.push({ number: num, text: num });
        }
        return pages;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DatatablePagerComponent.prototype.valChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event === null) {
            this.customerInput.nativeElement.value = '';
        }
        if (event || event === 0) {
            this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);
            this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;
        }
    };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.blurHandel = /**
     * @return {?}
     */
    function () {
        if ((this.currentOffset === 0 || this.customerInput.nativeElement.value === '')) {
            this.customerInput.nativeElement.value = 1;
        }
        else if (this.currentOffset !== undefined) {
            this.customerInput.nativeElement.value = this.currentOffset;
        }
        else if (this.currentOffset === undefined) {
            if (this.prveOffset !== undefined) {
                this.customerInput.nativeElement.value = this.prveOffset;
            }
        }
        this.page = Number(this.customerInput.nativeElement.value);
        this.datatable.offset = this.page - 1;
    };
    /**
     * @param {?} pageSize
     * @return {?}
     */
    DatatablePagerComponent.prototype.changePageSize = /**
     * @param {?} pageSize
     * @return {?}
     */
    function (pageSize) {
        this.datatable.limit = pageSize;
        this.selectPage(1, 'changePageSize');
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DatatablePagerComponent.prototype.keyDownHandel = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.customerInput.nativeElement.value) {
            this.prveOffset = Number(this.customerInput.nativeElement.value);
        }
        if ((event.keyCode < 48 && event.keyCode !== 8) || (event.keyCode > 57 && event.keyCode < 96) || (event.keyCode > 105)) {
            return false;
        }
    };
    /**
     * @return {?}
     */
    DatatablePagerComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.inputEvent.unsubscribe();
    };
    DatatablePagerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-datatable-pager',
                    template: "\n    <ul class=\"pager\">\n      <li class=\"page-size-continer\" *ngIf=\"linage\" (click)=\"pageSizeColumn=!pageSizeColumn\" (mouseleave)=\"pageSizeColumn=true\">\n        <span>{{size}} \u884C/\u9875</span>\n        <span class=\"fa\" [ngClass]=\"{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}\"></span>\n        <ul [hidden]=\"pageSizeColumn\" class=\"page-size-content\">\n          <li *ngFor=\"let ps of pageSizes\" (click)=\"changePageSize(ps)\" [ngClass]=\"{'page-size-column-active':size===ps}\">{{ps}} \u884C/\u9875</li>\n        </ul>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"selectPage(1)\">\n          <i class=\"{{pagerPreviousIcon}}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"prevPage()\">\n          <i class=\"{{pagerLeftArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li class=\"pages\" *ngFor=\"let pg of pages\" [class.active]=\"pg.number === page\">\n        <a *ngIf=\"pageNumber\" (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a (click)=\"nextPage()\">\n          <i class=\"{{pagerRightArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canNext()\">\n        <a (click)=\"selectPage(totalPages)\">\n          <i class=\"{{pagerNextIcon}}\"></i>\n        </a>\n      </li>\n      <li [ngStyle]=\"{'position':'relative'}\">\n        <span>\u8DF3\u8F6C\u5230</span>\n        <input #customerInput class=\"lz-jump-page\" type=\"number\" title=\" \" rows=\"2\" [min]=\"1\" [ngModel]=\"page\" (keydown)='keyDownHandel($event)'\n          (blur)=\"blurHandel()\" (ngModelChange)=\"valChange($event)\" />\u9875\n      </li>\n    </ul>",
                    styles: ["\n      .page-size-continer {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer .page-size-content li {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer .page-size-content li:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content .page-size-column-active {\n        color: #409eff;\n      }\n      input[type='number']::-webkit-inner-spin-button,\n      input[type='number']::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'] {\n        -moz-appearance: textfield;\n      }\n    "]
                }] }
    ];
    DatatablePagerComponent.propDecorators = {
        pagerLeftArrowIcon: [{ type: Input }],
        pagerRightArrowIcon: [{ type: Input }],
        pagerPreviousIcon: [{ type: Input }],
        pagerNextIcon: [{ type: Input }],
        pageSizes: [{ type: Input }],
        datatable: [{ type: Input }],
        linage: [{ type: Input }],
        displayBothEnds: [{ type: Input }],
        pageNumber: [{ type: Input }],
        size: [{ type: Input }],
        count: [{ type: Input }],
        page: [{ type: Input }],
        change: [{ type: Output }],
        pageChange: [{ type: Output }],
        customerInput: [{ type: ViewChild, args: ['customerInput',] }]
    };
    return DatatablePagerComponent;
}());
export { DatatablePagerComponent };
if (false) {
    /** @type {?} */
    DatatablePagerComponent.prototype.pagerLeftArrowIcon;
    /** @type {?} */
    DatatablePagerComponent.prototype.pagerRightArrowIcon;
    /** @type {?} */
    DatatablePagerComponent.prototype.pagerPreviousIcon;
    /** @type {?} */
    DatatablePagerComponent.prototype.pagerNextIcon;
    /** @type {?} */
    DatatablePagerComponent.prototype.pageSizes;
    /** @type {?} */
    DatatablePagerComponent.prototype.datatable;
    /** @type {?} */
    DatatablePagerComponent.prototype.linage;
    /** @type {?} */
    DatatablePagerComponent.prototype.displayBothEnds;
    /** @type {?} */
    DatatablePagerComponent.prototype.pageNumber;
    /** @type {?} */
    DatatablePagerComponent.prototype.change;
    /** @type {?} */
    DatatablePagerComponent.prototype.pageChange;
    /** @type {?} */
    DatatablePagerComponent.prototype.currentOffset;
    /** @type {?} */
    DatatablePagerComponent.prototype.prveOffset;
    /** @type {?} */
    DatatablePagerComponent.prototype.inputEvent;
    /** @type {?} */
    DatatablePagerComponent.prototype.customerInput;
    /** @type {?} */
    DatatablePagerComponent.prototype._page;
    /** @type {?} */
    DatatablePagerComponent.prototype._count;
    /** @type {?} */
    DatatablePagerComponent.prototype._size;
    /** @type {?} */
    DatatablePagerComponent.prototype.pages;
    /** @type {?} */
    DatatablePagerComponent.prototype.pageSizeColumn;
}
//# sourceMappingURL=data:application/json;base64,