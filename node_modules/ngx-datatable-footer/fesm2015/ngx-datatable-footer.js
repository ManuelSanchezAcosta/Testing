import { debounceTime } from 'rxjs/operators';
import { fromEvent } from 'rxjs';
import { Component, Input, Output, EventEmitter, ViewChild, TemplateRef, NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';

const _c0 = ["customerInput"];
const _c1 = function (a0) { return { "page-size-column-active": a0 }; };
function DatatablePagerComponent_li_1_li_5_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 12);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_1_li_5_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ps_r6 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.changePageSize(ps_r6); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ps_r6 = ctx.$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r5.size === ps_r6));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ps_r6, " \u884C/\u9875");
} }
const _c2 = function (a0, a1) { return { "fa-angle-up": a0, "fa-angle-down": a1 }; };
function DatatablePagerComponent_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 8);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.pageSizeColumn = !ctx_r9.pageSizeColumn; })("mouseleave", function DatatablePagerComponent_li_1_Template_li_mouseleave_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.pageSizeColumn = true; });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "span", 9);
    ɵngcc0.ɵɵelementStart(4, "ul", 10);
    ɵngcc0.ɵɵtemplate(5, DatatablePagerComponent_li_1_li_5_Template, 2, 4, "li", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.size, " \u884C/\u9875");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r0.pageSizeColumn, !ctx_r0.pageSizeColumn));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("hidden", ctx_r0.pageSizeColumn);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.pageSizes);
} }
function DatatablePagerComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "a", 3);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_2_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.selectPage(1); });
    ɵngcc0.ɵɵelement(2, "i");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("disabled", !ctx_r1.canPrevious());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r1.pagerPreviousIcon);
} }
function DatatablePagerComponent_li_6_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 3);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_6_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const pg_r14 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.selectPage(pg_r14.number); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pg_r14 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", pg_r14.text, " ");
} }
function DatatablePagerComponent_li_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 13);
    ɵngcc0.ɵɵtemplate(1, DatatablePagerComponent_li_6_a_1_Template, 2, 1, "a", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pg_r14 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("active", pg_r14.number === ctx_r2.page);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.pageNumber);
} }
function DatatablePagerComponent_li_10_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "a", 3);
    ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_li_10_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.selectPage(ctx_r20.totalPages); });
    ɵngcc0.ɵɵelement(2, "i");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("disabled", !ctx_r3.canNext());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.pagerNextIcon);
} }
const _c3 = function () { return { "position": "relative" }; };
function DatatableFooterComponent_ng_template_0_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 3);
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    const offset_r5 = ctx_r8.offset;
    const pageSize_r2 = ctx_r8.pageSize;
    const rowCount_r1 = ctx_r8.rowCount;
    ɵngcc0.ɵɵproperty("innerHTML", "\u5F53\u524D " + ((offset_r5 || 0) * pageSize_r2 + 1) + " - " + ((offset_r5 + 1) * pageSize_r2 > rowCount_r1 ? rowCount_r1 : (offset_r5 + 1 || 1) * pageSize_r2) + " / " + rowCount_r1 + " \u884C", ɵngcc0.ɵɵsanitizeHtml);
} }
function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "app-datatable-pager", 4);
    ɵngcc0.ɵɵlistener("change", function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template_app_datatable_pager_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); ctx_r9.datatable.onFooterPage($event); return ctx_r9.emitPage($event); })("pageChange", function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template_app_datatable_pager_pageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.emitPage($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    const curPage_r4 = ctx_r12.curPage;
    const pageSize_r2 = ctx_r12.pageSize;
    const rowCount_r1 = ctx_r12.rowCount;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("linage", ctx_r7.linage)("displayBothEnds", ctx_r7.displayBothEnds)("pageNumber", ctx_r7.pageNumber)("pageSizes", ctx_r7.pageSizes)("pagerPreviousIcon", ctx_r7.pagerPreviousIcon)("pagerNextIcon", ctx_r7.pagerNextIcon)("pagerLeftArrowIcon", ctx_r7.pagerLeftArrowIcon)("pagerRightArrowIcon", ctx_r7.pagerRightArrowIcon)("page", curPage_r4)("size", pageSize_r2)("datatable", ctx_r7.datatable)("count", rowCount_r1);
} }
function DatatableFooterComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatatableFooterComponent_ng_template_0_div_0_Template, 1, 1, "div", 1);
    ɵngcc0.ɵɵtemplate(1, DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template, 1, 12, "app-datatable-pager", 2);
} if (rf & 2) {
    const rowCount_r1 = ctx.rowCount;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", rowCount_r1 > 0 && ctx_r0.totalNumber);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", rowCount_r1 > 0);
} }
class DatatablePagerComponent {
    constructor() {
        this.linage = true;
        this.displayBothEnds = true;
        this.pageNumber = true;
        this.change = new EventEmitter();
        this.pageChange = new EventEmitter();
        // tslint:disable-next-line:member-ordering
        this._page = 1;
        // tslint:disable-next-line:member-ordering
        this._count = 0;
        // tslint:disable-next-line:member-ordering
        this._size = 0;
        // tslint:disable-next-line:member-ordering
        this.pageSizeColumn = true;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set size(val) {
        this._size = val;
        this.pages = this.calcPages();
    }
    /**
     * @return {?}
     */
    get size() {
        return this._size;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set count(val) {
        this._count = val;
        this.pages = this.calcPages();
    }
    /**
     * @return {?}
     */
    get count() {
        return this._count;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set page(val) {
        this._page = val;
        this.pages = this.calcPages();
    }
    /**
     * @return {?}
     */
    get page() {
        return this._page || 1;
    }
    /**
     * @return {?}
     */
    get totalPages() {
        /** @type {?} */
        const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);
        return Math.max(count || 0, 1);
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.inputEvent = fromEvent(this.customerInput.nativeElement, 'input')
            .pipe(debounceTime(500))
            .subscribe((event) => {
            /** @type {?} */
            let value;
            if (event.target.value) {
                value = Number(event.target.value);
                if (value < 1) {
                    value = 1;
                    this.customerInput.nativeElement.value = 1;
                }
                this.selectPage(Math.round(value));
            }
        });
    }
    /**
     * @return {?}
     */
    canPrevious() {
        return this.page > 1;
    }
    /**
     * @return {?}
     */
    canNext() {
        return this.page < this.totalPages;
    }
    /**
     * @return {?}
     */
    prevPage() {
        this.selectPage(this.page - 1);
    }
    /**
     * @return {?}
     */
    nextPage() {
        this.selectPage(this.page + 1);
    }
    /**
     * @param {?} page
     * @param {?=} changePageSize
     * @return {?}
     */
    selectPage(page, changePageSize) {
        if (changePageSize) {
            if (page > 0 && page <= this.totalPages) {
                this.page = page;
                this.change.emit({ page });
            }
        }
        else {
            if (page > 0 && page <= this.totalPages && page !== this.page) {
                this.page = page;
                this.change.emit({ page });
            }
        }
    }
    /**
     * @param {?=} page
     * @return {?}
     */
    calcPages(page) {
        /** @type {?} */
        const pages = [];
        /** @type {?} */
        let startPage = 1;
        /** @type {?} */
        let endPage = this.totalPages;
        /** @type {?} */
        const maxSize = 5;
        /** @type {?} */
        const isMaxSized = maxSize < this.totalPages;
        page = page || this.page;
        if (isMaxSized) {
            startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;
            endPage = Math.min(startPage + maxSize - 1, this.totalPages);
        }
        for (let num = startPage; num <= endPage; num++) {
            pages.push({ number: num, text: num });
        }
        return pages;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    valChange(event) {
        if (event === null) {
            this.customerInput.nativeElement.value = '';
        }
        if (event || event === 0) {
            this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);
            this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;
        }
    }
    /**
     * @return {?}
     */
    blurHandel() {
        if ((this.currentOffset === 0 || this.customerInput.nativeElement.value === '')) {
            this.customerInput.nativeElement.value = 1;
        }
        else if (this.currentOffset !== undefined) {
            this.customerInput.nativeElement.value = this.currentOffset;
        }
        else if (this.currentOffset === undefined) {
            if (this.prveOffset !== undefined) {
                this.customerInput.nativeElement.value = this.prveOffset;
            }
        }
        this.page = Number(this.customerInput.nativeElement.value);
        this.datatable.offset = this.page - 1;
    }
    /**
     * @param {?} pageSize
     * @return {?}
     */
    changePageSize(pageSize) {
        this.datatable.limit = pageSize;
        this.selectPage(1, 'changePageSize');
    }
    /**
     * @param {?} event
     * @return {?}
     */
    keyDownHandel(event) {
        if (this.customerInput.nativeElement.value) {
            this.prveOffset = Number(this.customerInput.nativeElement.value);
        }
        if ((event.keyCode < 48 && event.keyCode !== 8) || (event.keyCode > 57 && event.keyCode < 96) || (event.keyCode > 105)) {
            return false;
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.inputEvent.unsubscribe();
    }
}
DatatablePagerComponent.ɵfac = function DatatablePagerComponent_Factory(t) { return new (t || DatatablePagerComponent)(); };
DatatablePagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatablePagerComponent, selectors: [["app-datatable-pager"]], viewQuery: function DatatablePagerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customerInput = _t.first);
    } }, inputs: { linage: "linage", displayBothEnds: "displayBothEnds", pageNumber: "pageNumber", size: "size", count: "count", page: "page", pagerLeftArrowIcon: "pagerLeftArrowIcon", pagerRightArrowIcon: "pagerRightArrowIcon", pagerPreviousIcon: "pagerPreviousIcon", pagerNextIcon: "pagerNextIcon", pageSizes: "pageSizes", datatable: "datatable" }, outputs: { change: "change", pageChange: "pageChange" }, decls: 17, vars: 18, consts: [[1, "pager"], ["class", "page-size-continer", 3, "click", "mouseleave", 4, "ngIf"], [3, "disabled", 4, "ngIf"], [3, "click"], ["class", "pages", 3, "active", 4, "ngFor", "ngForOf"], [3, "ngStyle"], ["type", "number", "title", " ", "rows", "2", 1, "lz-jump-page", 3, "min", "ngModel", "keydown", "blur", "ngModelChange"], ["customerInput", ""], [1, "page-size-continer", 3, "click", "mouseleave"], [1, "fa", 3, "ngClass"], [1, "page-size-content", 3, "hidden"], [3, "ngClass", "click", 4, "ngFor", "ngForOf"], [3, "ngClass", "click"], [1, "pages"], [3, "click", 4, "ngIf"]], template: function DatatablePagerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, DatatablePagerComponent_li_1_Template, 6, 7, "li", 1);
        ɵngcc0.ɵɵtemplate(2, DatatablePagerComponent_li_2_Template, 3, 5, "li", 2);
        ɵngcc0.ɵɵelementStart(3, "li");
        ɵngcc0.ɵɵelementStart(4, "a", 3);
        ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_Template_a_click_4_listener() { return ctx.prevPage(); });
        ɵngcc0.ɵɵelement(5, "i");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, DatatablePagerComponent_li_6_Template, 2, 3, "li", 4);
        ɵngcc0.ɵɵelementStart(7, "li");
        ɵngcc0.ɵɵelementStart(8, "a", 3);
        ɵngcc0.ɵɵlistener("click", function DatatablePagerComponent_Template_a_click_8_listener() { return ctx.nextPage(); });
        ɵngcc0.ɵɵelement(9, "i");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, DatatablePagerComponent_li_10_Template, 3, 5, "li", 2);
        ɵngcc0.ɵɵelementStart(11, "li", 5);
        ɵngcc0.ɵɵelementStart(12, "span");
        ɵngcc0.ɵɵtext(13, "\u8DF3\u8F6C\u5230");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "input", 6, 7);
        ɵngcc0.ɵɵlistener("keydown", function DatatablePagerComponent_Template_input_keydown_14_listener($event) { return ctx.keyDownHandel($event); })("blur", function DatatablePagerComponent_Template_input_blur_14_listener() { return ctx.blurHandel(); })("ngModelChange", function DatatablePagerComponent_Template_input_ngModelChange_14_listener($event) { return ctx.valChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(16, "\u9875 ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.linage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayBothEnds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("disabled", !ctx.canPrevious());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.pagerLeftArrowIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.pages);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("disabled", !ctx.canNext());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap(ctx.pagerRightArrowIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayBothEnds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction0(17, _c3));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("min", 1)("ngModel", ctx.page);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc2.NumberValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgClass], styles: [".page-size-continer[_ngcontent-%COMP%] {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer[_ngcontent-%COMP%]:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%] {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   .page-size-column-active[_ngcontent-%COMP%] {\n        color: #409eff;\n      }\n      input[type='number'][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type='number'][_ngcontent-%COMP%]::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page[_ngcontent-%COMP%] {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'][_ngcontent-%COMP%] {\n        -moz-appearance: textfield;\n      }"] });
DatatablePagerComponent.propDecorators = {
    pagerLeftArrowIcon: [{ type: Input }],
    pagerRightArrowIcon: [{ type: Input }],
    pagerPreviousIcon: [{ type: Input }],
    pagerNextIcon: [{ type: Input }],
    pageSizes: [{ type: Input }],
    datatable: [{ type: Input }],
    linage: [{ type: Input }],
    displayBothEnds: [{ type: Input }],
    pageNumber: [{ type: Input }],
    size: [{ type: Input }],
    count: [{ type: Input }],
    page: [{ type: Input }],
    change: [{ type: Output }],
    pageChange: [{ type: Output }],
    customerInput: [{ type: ViewChild, args: ['customerInput',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatablePagerComponent, [{
        type: Component,
        args: [{
                selector: 'app-datatable-pager',
                template: `
    <ul class="pager">
      <li class="page-size-continer" *ngIf="linage" (click)="pageSizeColumn=!pageSizeColumn" (mouseleave)="pageSizeColumn=true">
        <span>{{size}} 行/页</span>
        <span class="fa" [ngClass]="{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}"></span>
        <ul [hidden]="pageSizeColumn" class="page-size-content">
          <li *ngFor="let ps of pageSizes" (click)="changePageSize(ps)" [ngClass]="{'page-size-column-active':size===ps}">{{ps}} 行/页</li>
        </ul>
      </li>
      <li *ngIf="displayBothEnds" [class.disabled]="!canPrevious()">
        <a (click)="selectPage(1)">
          <i class="{{pagerPreviousIcon}}"></i>
        </a>
      </li>
      <li [class.disabled]="!canPrevious()">
        <a (click)="prevPage()">
          <i class="{{pagerLeftArrowIcon}}"></i>
        </a>
      </li>
      <li class="pages" *ngFor="let pg of pages" [class.active]="pg.number === page">
        <a *ngIf="pageNumber" (click)="selectPage(pg.number)">
          {{pg.text}}
        </a>
      </li>
      <li [class.disabled]="!canNext()">
        <a (click)="nextPage()">
          <i class="{{pagerRightArrowIcon}}"></i>
        </a>
      </li>
      <li *ngIf="displayBothEnds" [class.disabled]="!canNext()">
        <a (click)="selectPage(totalPages)">
          <i class="{{pagerNextIcon}}"></i>
        </a>
      </li>
      <li [ngStyle]="{'position':'relative'}">
        <span>跳转到</span>
        <input #customerInput class="lz-jump-page" type="number" title=" " rows="2" [min]="1" [ngModel]="page" (keydown)='keyDownHandel($event)'
          (blur)="blurHandel()" (ngModelChange)="valChange($event)" />页
      </li>
    </ul>`,
                styles: [`
      .page-size-continer {
        position: relative;
        width: 80px;
        height: 26px;
        line-height: 26px;
        text-align: center;
        border-radius: 2px;
        cursor: pointer;
      }
      .page-size-continer:hover {
        background-color: rgba(158, 158, 158, 0.2);
      }
      .page-size-continer .page-size-content {
        position: absolute;
        bottom: 24px;
        left: 0;
        padding: 0;
        background: #fff;
        border-radius: 4px;
        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);
        z-index: 11;
      }
      .page-size-continer .page-size-content li {
        width: 100%;
        padding: 4px 0;
      }
      .page-size-continer .page-size-content li:hover {
        background-color: rgba(158, 158, 158, 0.2);
      }
      .page-size-continer .page-size-content .page-size-column-active {
        color: #409eff;
      }
      input[type='number']::-webkit-inner-spin-button,
      input[type='number']::-webkit-outer-spin-button {
        -webkit-appearance: none;
      }
      .lz-jump-page {
        display: inline-block;
        width: 50px;
        border-radius: 2px;
        margin-right: 6px;
        padding-left: 4px;
        border: solid 1px #ebedf2;
      }
      input[type='number'] {
        -moz-appearance: textfield;
      }
    `]
            }]
    }], function () { return []; }, { linage: [{
            type: Input
        }], displayBothEnds: [{
            type: Input
        }], pageNumber: [{
            type: Input
        }], change: [{
            type: Output
        }], pageChange: [{
            type: Output
        }], size: [{
            type: Input
        }], count: [{
            type: Input
        }], page: [{
            type: Input
        }], pagerLeftArrowIcon: [{
            type: Input
        }], pagerRightArrowIcon: [{
            type: Input
        }], pagerPreviousIcon: [{
            type: Input
        }], pagerNextIcon: [{
            type: Input
        }], pageSizes: [{
            type: Input
        }], datatable: [{
            type: Input
        }], customerInput: [{
            type: ViewChild,
            args: ['customerInput']
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DatatableFooterComponent {
    constructor() {
        this.pagerLeftArrowIcon = 'fa fa-angle-left';
        this.pagerRightArrowIcon = 'fa fa-angle-right';
        this.pagerPreviousIcon = 'fa fa-step-backward';
        this.pagerNextIcon = 'fa fa-step-forward';
        this.pageSizes = [10, 20, 30, 40, 50];
        this.totalNumber = true;
        this.linage = true;
        this.displayBothEnds = true;
        this.pageNumber = true;
        this.pageChange = new EventEmitter();
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set template(val) {
        this._template = val;
        this.update();
    }
    /**
     * @return {?}
     */
    get template() {
        return this._template;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set datatable(val) {
        this._datatable = val;
        this.update();
    }
    /**
     * @return {?}
     */
    get datatable() {
        return this._datatable;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    update() {
        if (this._datatable &&
            this._template &&
            (!this._datatable.footer || !this._datatable.footer.template)) {
            if (this._datatable.footer) {
                this._datatable.footer.template = this._template;
            }
            else {
                this._datatable.footer = {
                    footerHeight: this._datatable.footerHeight,
                    totalMessage: this._datatable.messages.totalMessage,
                    selectedMessage: this._datatable.messages.selectedMessage,
                    pagerLeftArrowIcon: '',
                    pagerRightArrowIcon: '',
                    pagerPreviousIcon: '',
                    pagerNextIcon: '',
                    template: this._template
                };
            }
        }
    }
    /**
     * @param {?} page
     * @return {?}
     */
    emitPage(page) {
        this.pageChange.emit(page);
    }
}
DatatableFooterComponent.ɵfac = function DatatableFooterComponent_Factory(t) { return new (t || DatatableFooterComponent)(); };
DatatableFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableFooterComponent, selectors: [["ngx-datatable-footer"]], viewQuery: function DatatableFooterComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(TemplateRef, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { pagerLeftArrowIcon: "pagerLeftArrowIcon", pagerRightArrowIcon: "pagerRightArrowIcon", pagerPreviousIcon: "pagerPreviousIcon", pagerNextIcon: "pagerNextIcon", pageSizes: "pageSizes", totalNumber: "totalNumber", linage: "linage", displayBothEnds: "displayBothEnds", pageNumber: "pageNumber", datatable: "datatable", page: "page" }, outputs: { pageChange: "pageChange" }, decls: 1, vars: 0, consts: [["ngx-datatable-footer-template", ""], ["class", "page-count", 3, "innerHTML", 4, "ngIf"], ["class", "datatable-pager", 3, "linage", "displayBothEnds", "pageNumber", "pageSizes", "pagerPreviousIcon", "pagerNextIcon", "pagerLeftArrowIcon", "pagerRightArrowIcon", "page", "size", "datatable", "count", "change", "pageChange", 4, "ngIf"], [1, "page-count", 3, "innerHTML"], [1, "datatable-pager", 3, "linage", "displayBothEnds", "pageNumber", "pageSizes", "pagerPreviousIcon", "pagerNextIcon", "pagerLeftArrowIcon", "pagerRightArrowIcon", "page", "size", "datatable", "count", "change", "pageChange"]], template: function DatatableFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DatatableFooterComponent_ng_template_0_Template, 2, 2, "ng-template", 0);
    } }, directives: [ɵngcc1.NgIf, DatatablePagerComponent], encapsulation: 2 });
/** @nocollapse */
DatatableFooterComponent.ctorParameters = () => [];
DatatableFooterComponent.propDecorators = {
    template: [{ type: ViewChild, args: [TemplateRef,] }],
    datatable: [{ type: Input }],
    pagerLeftArrowIcon: [{ type: Input }],
    pagerRightArrowIcon: [{ type: Input }],
    pagerPreviousIcon: [{ type: Input }],
    pagerNextIcon: [{ type: Input }],
    pageSizes: [{ type: Input }],
    totalNumber: [{ type: Input }],
    linage: [{ type: Input }],
    displayBothEnds: [{ type: Input }],
    pageNumber: [{ type: Input }],
    page: [{ type: Input }],
    pageChange: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableFooterComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-datatable-footer',
                template: `
  <ng-template ngx-datatable-footer-template let-rowCount="rowCount" let-pageSize="pageSize" let-selectedCount="selectedCount"
    let-curPage="curPage" let-offset="offset">
    <div class="page-count" *ngIf="rowCount>0&&totalNumber" [innerHTML]="'当前 '+((offset||0) * pageSize + 1)+' - '+((offset+1) * pageSize > rowCount?rowCount : ((offset+1)||1) * pageSize)+' / '+rowCount+' 行'">
    </div>
    <app-datatable-pager *ngIf="rowCount>0" [linage]="linage" [displayBothEnds]="displayBothEnds" [pageNumber]="pageNumber" [pageSizes]="pageSizes" [pagerPreviousIcon]="pagerPreviousIcon" [pagerNextIcon]="pagerNextIcon"
      [pagerLeftArrowIcon]="pagerLeftArrowIcon" [pagerRightArrowIcon]="pagerRightArrowIcon" [page]="curPage" [size]="pageSize"
      [datatable]="datatable" [count]="rowCount" (change)="datatable.onFooterPage($event);emitPage($event)" (pageChange)="emitPage($event)" class="datatable-pager">
    </app-datatable-pager>
  </ng-template>`
            }]
    }], function () { return []; }, { pagerLeftArrowIcon: [{
            type: Input
        }], pagerRightArrowIcon: [{
            type: Input
        }], pagerPreviousIcon: [{
            type: Input
        }], pagerNextIcon: [{
            type: Input
        }], pageSizes: [{
            type: Input
        }], totalNumber: [{
            type: Input
        }], linage: [{
            type: Input
        }], displayBothEnds: [{
            type: Input
        }], pageNumber: [{
            type: Input
        }], pageChange: [{
            type: Output
        }], template: [{
            type: ViewChild,
            args: [TemplateRef]
        }], datatable: [{
            type: Input
        }], page: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxDatatableFooterModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: NgxDatatableFooterModule
        };
    }
}
NgxDatatableFooterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxDatatableFooterModule });
NgxDatatableFooterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxDatatableFooterModule_Factory(t) { return new (t || NgxDatatableFooterModule)(); }, imports: [[
            CommonModule,
            FormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxDatatableFooterModule, { declarations: function () { return [DatatablePagerComponent, DatatableFooterComponent]; }, imports: function () { return [CommonModule,
        FormsModule]; }, exports: function () { return [DatatablePagerComponent, DatatableFooterComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxDatatableFooterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FormsModule
                ],
                declarations: [
                    DatatablePagerComponent,
                    DatatableFooterComponent
                ],
                exports: [
                    DatatablePagerComponent,
                    DatatableFooterComponent
                ]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { DatatablePagerComponent, DatatableFooterComponent, NgxDatatableFooterModule };

//# sourceMappingURL=ngx-datatable-footer.js.map