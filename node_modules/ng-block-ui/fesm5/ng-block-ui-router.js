import { __decorate } from 'tslib';
import { Injectable, NgModule } from '@angular/core';
import { BLOCKUI_DEFAULT, BlockUIService, BlockUIModule } from 'ng-block-ui';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ng-block-ui';
var BlockUIPreventNavigation = /** @class */ (function () {
    function BlockUIPreventNavigation(blockUIService) {
        this.blockUIService = blockUIService;
    }
    BlockUIPreventNavigation.prototype.canActivate = function () {
        return !this.blockUIService.isActive(BLOCKUI_DEFAULT);
    };
    BlockUIPreventNavigation.prototype.canActivateChild = function () {
        return !this.blockUIService.isActive(BLOCKUI_DEFAULT);
    };
    BlockUIPreventNavigation.ctorParameters = function () { return [
        { type: BlockUIService }
    ]; };
BlockUIPreventNavigation.ɵfac = function BlockUIPreventNavigation_Factory(t) { return new (t || BlockUIPreventNavigation)(ɵngcc0.ɵɵinject(ɵngcc1.BlockUIService)); };
BlockUIPreventNavigation.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BlockUIPreventNavigation, factory: function (t) { return BlockUIPreventNavigation.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUIPreventNavigation, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.BlockUIService }]; }, null); })();
    return BlockUIPreventNavigation;
}());

var BlockUIRouterModule = /** @class */ (function () {
    function BlockUIRouterModule() {
    }
    BlockUIRouterModule_1 = BlockUIRouterModule;
    BlockUIRouterModule.forRoot = function () {
        return {
            ngModule: BlockUIRouterModule_1,
            providers: [
                BlockUIPreventNavigation
            ]
        };
    };
    var BlockUIRouterModule_1;
BlockUIRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BlockUIRouterModule });
BlockUIRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BlockUIRouterModule_Factory(t) { return new (t || BlockUIRouterModule)(); }, imports: [[
            BlockUIModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BlockUIRouterModule, { imports: function () { return [BlockUIModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUIRouterModule, [{
        type: NgModule,
        args: [{
                imports: [
                    BlockUIModule
                ]
            }]
    }], function () { return []; }, null); })();
    return BlockUIRouterModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { BlockUIPreventNavigation, BlockUIRouterModule };

//# sourceMappingURL=ng-block-ui-router.js.map