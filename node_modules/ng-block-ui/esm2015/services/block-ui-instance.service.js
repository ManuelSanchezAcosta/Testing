import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { BlockUIActions } from '../constants/block-ui-actions.constant';
import { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';
import * as ɵngcc0 from '@angular/core';
let BlockUIInstanceService = class BlockUIInstanceService {
    constructor() {
        this.blockUISettings = {};
        this.blockUIInstances = {};
        this.blockUISubject = new ReplaySubject(1);
        this.blockUIObservable = this.blockUISubject.asObservable();
        this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));
    }
    getSettings() {
        return this.blockUISettings;
    }
    updateSettings(settings = {}) {
        this.blockUISettings = Object.assign(Object.assign({}, this.blockUISettings), settings);
    }
    decorate(name = BlockUIDefaultName) {
        const blockUI = {
            name,
            isActive: false,
            blockCount: 0,
            start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),
            update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),
            stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),
            reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),
            resetGlobal: this.dispatch(this.blockUISubject, BlockUIActions.RESET_GLOBAL, name),
            unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)
        };
        this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;
        return blockUI;
    }
    observe() {
        return this.blockUIObservable;
    }
    clearInstance(instanceName) {
        this.dispatch(this.blockUISubject, BlockUIActions.RESET, instanceName);
    }
    blockUIMiddleware({ action, name }) {
        let isActive = null;
        switch (action) {
            case (BlockUIActions.START):
                isActive = true;
                break;
            case (BlockUIActions.STOP):
            case (BlockUIActions.RESET):
                isActive = false;
                break;
        }
        if (isActive !== null) {
            this.blockUIInstances[name].isActive = isActive;
        }
    }
    dispatch(subject, action, name = BlockUIDefaultName) {
        return (message) => {
            subject.next({
                name,
                action,
                message
            });
        };
    }
};
BlockUIInstanceService.ɵfac = function BlockUIInstanceService_Factory(t) { return new (t || BlockUIInstanceService)(); };
BlockUIInstanceService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BlockUIInstanceService, factory: function (t) { return BlockUIInstanceService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BlockUIInstanceService, [{
        type: Injectable
    }], function () { return []; }, null); })();
export { BlockUIInstanceService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2stdWktaW5zdGFuY2Uuc2VydmljZS5qcyIsInNvdXJjZXMiOlsibmctYmxvY2stdWkvc2VydmljZXMvYmxvY2stdWktaW5zdGFuY2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWMsYUFBYSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQzs7QUFPakYsSUFBYSxzQkFBc0IsR0FBbkMsTUFBYSxzQkFBc0I7QUFDbkMsSUFLRTtBQUNGLFFBTkUsb0JBQWUsR0FBMEIsRUFBRSxDQUFDO0FBQzlDLFFBQUUscUJBQWdCLEdBQVEsRUFBRSxDQUFDO0FBQzdCLFFBQVUsbUJBQWMsR0FBdUIsSUFBSSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEUsUUFBVSxzQkFBaUIsR0FBb0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUNsRixRQUVJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3hFLElBQUUsQ0FBQztBQUNILElBQ0UsV0FBVztBQUFLLFFBQ2QsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0FBQ2hDLElBQUUsQ0FBQztBQUNILElBQ0UsY0FBYyxDQUFDLFdBQWtDLEVBQUU7QUFBSSxRQUNyRCxJQUFJLENBQUMsZUFBZSxtQ0FBUSxJQUFJLENBQUMsZUFBZSxHQUFLLFFBQVEsQ0FBRSxDQUFDO0FBQ3BFLElBQUUsQ0FBQztBQUNILElBQ0UsUUFBUSxDQUFDLE9BQWUsa0JBQWtCO0FBQUksUUFDNUMsTUFBTSxPQUFPLEdBQUc7QUFDcEIsWUFBTSxJQUFJO0FBQ1YsWUFBTSxRQUFRLEVBQUUsS0FBSztBQUNyQixZQUFNLFVBQVUsRUFBRSxDQUFDO0FBQ25CLFlBQU0sS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxjQUFjLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQztBQUMzRSxZQUFNLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsY0FBYyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7QUFDN0UsWUFBTSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDO0FBQ3pFLFlBQU0sS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxjQUFjLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQztBQUMzRSxZQUFNLFdBQVcsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsY0FBYyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUM7QUFDeEYsWUFBTSxXQUFXLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLGNBQWMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDO0FBQ3ZGLFNBQWtCLENBQUM7QUFDbkIsUUFDSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQztBQUN6RSxRQUNJLE9BQU8sT0FBTyxDQUFDO0FBQ25CLElBQUUsQ0FBQztBQUNILElBQ0UsT0FBTztBQUFLLFFBQ1YsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUM7QUFDbEMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxhQUFhLENBQUMsWUFBb0I7QUFDcEMsUUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsY0FBYyxDQUFDLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQztBQUMzRSxJQUFFLENBQUM7QUFDSCxJQUNVLGlCQUFpQixDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBZ0I7QUFBSSxRQUMxRCxJQUFJLFFBQVEsR0FBWSxJQUFJLENBQUM7QUFDakMsUUFDSSxRQUFRLE1BQU0sRUFBRTtBQUNwQixZQUFNLEtBQUssQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDO0FBQ2pDLGdCQUFRLFFBQVEsR0FBRyxJQUFJLENBQUM7QUFDeEIsZ0JBQVEsTUFBTTtBQUNkLFlBQ00sS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqQyxZQUFNLEtBQUssQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDO0FBQ2pDLGdCQUFRLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFDekIsZ0JBQVEsTUFBTTtBQUNkLFNBQUs7QUFDTCxRQUNJLElBQUksUUFBUSxLQUFLLElBQUksRUFBRTtBQUMzQixZQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBQ3RELFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSCxJQUNVLFFBQVEsQ0FBQyxPQUEyQixFQUFFLE1BQXNCLEVBQUUsT0FBZSxrQkFBa0I7QUFBSSxRQUN6RyxPQUFPLENBQUMsT0FBYSxFQUFRLEVBQUU7QUFDbkMsWUFBTSxPQUFPLENBQUMsSUFBSSxDQUFDO0FBQ25CLGdCQUFRLElBQUk7QUFDWixnQkFBUSxNQUFNO0FBQ2QsZ0JBQVEsT0FBTztBQUNmLGFBQU8sQ0FBQyxDQUFDO0FBQ1QsUUFBSSxDQUFDLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUF4RVksc0JBQXNCLG9CQURsQyxVQUFVLEVBQUUsSUFDQSxzQkFBc0IsQ0F3RWxDOzs7O2dEQUNEO0FBQUMsU0F6RVksc0JBQXNCO0FBQ2xDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQmxvY2tVSUFjdGlvbnMgfSBmcm9tICcuLi9jb25zdGFudHMvYmxvY2stdWktYWN0aW9ucy5jb25zdGFudCc7XG5pbXBvcnQgeyBCbG9ja1VJRGVmYXVsdE5hbWUgfSBmcm9tICcuLi9jb25zdGFudHMvYmxvY2stdWktZGVmYXVsdC1uYW1lLmNvbnN0YW50JztcbmltcG9ydCB7IE5nQmxvY2tVSSB9IGZyb20gJy4uL21vZGVscy9ibG9jay11aS5tb2RlbCc7XG5pbXBvcnQgeyBCbG9ja1VJU2V0dGluZ3MgfSBmcm9tICcuLi9tb2RlbHMvYmxvY2stdWktc2V0dGluZ3MubW9kZWwnO1xuaW1wb3J0IHsgQmxvY2tVSUV2ZW50IH0gZnJvbSAnLi4vbW9kZWxzL2Jsb2NrLXVpLWV2ZW50Lm1vZGVsJztcblxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQmxvY2tVSUluc3RhbmNlU2VydmljZSB7XG4gIGJsb2NrVUlTZXR0aW5nczogQmxvY2tVSVNldHRpbmdzIHwgYW55ID0ge307XG4gIGJsb2NrVUlJbnN0YW5jZXM6IGFueSA9IHt9O1xuICBwcml2YXRlIGJsb2NrVUlTdWJqZWN0OiBSZXBsYXlTdWJqZWN0PGFueT4gPSBuZXcgUmVwbGF5U3ViamVjdCgxKTtcbiAgcHJpdmF0ZSBibG9ja1VJT2JzZXJ2YWJsZTogT2JzZXJ2YWJsZTxhbnk+ID0gdGhpcy5ibG9ja1VJU3ViamVjdC5hc09ic2VydmFibGUoKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmJsb2NrVUlPYnNlcnZhYmxlLnN1YnNjcmliZSh0aGlzLmJsb2NrVUlNaWRkbGV3YXJlLmJpbmQodGhpcykpO1xuICB9XG5cbiAgZ2V0U2V0dGluZ3MoKTogQmxvY2tVSVNldHRpbmdzIHwgYW55IHtcbiAgICByZXR1cm4gdGhpcy5ibG9ja1VJU2V0dGluZ3M7XG4gIH1cblxuICB1cGRhdGVTZXR0aW5ncyhzZXR0aW5nczogQmxvY2tVSVNldHRpbmdzIHwgYW55ID0ge30pOiB2b2lkIHtcbiAgICB0aGlzLmJsb2NrVUlTZXR0aW5ncyA9IHsgLi4udGhpcy5ibG9ja1VJU2V0dGluZ3MsIC4uLnNldHRpbmdzIH07XG4gIH1cblxuICBkZWNvcmF0ZShuYW1lOiBzdHJpbmcgPSBCbG9ja1VJRGVmYXVsdE5hbWUpOiBOZ0Jsb2NrVUkge1xuICAgIGNvbnN0IGJsb2NrVUkgPSB7XG4gICAgICBuYW1lLFxuICAgICAgaXNBY3RpdmU6IGZhbHNlLFxuICAgICAgYmxvY2tDb3VudDogMCxcbiAgICAgIHN0YXJ0OiB0aGlzLmRpc3BhdGNoKHRoaXMuYmxvY2tVSVN1YmplY3QsIEJsb2NrVUlBY3Rpb25zLlNUQVJULCBuYW1lKSxcbiAgICAgIHVwZGF0ZTogdGhpcy5kaXNwYXRjaCh0aGlzLmJsb2NrVUlTdWJqZWN0LCBCbG9ja1VJQWN0aW9ucy5VUERBVEUsIG5hbWUpLFxuICAgICAgc3RvcDogdGhpcy5kaXNwYXRjaCh0aGlzLmJsb2NrVUlTdWJqZWN0LCBCbG9ja1VJQWN0aW9ucy5TVE9QLCBuYW1lKSxcbiAgICAgIHJlc2V0OiB0aGlzLmRpc3BhdGNoKHRoaXMuYmxvY2tVSVN1YmplY3QsIEJsb2NrVUlBY3Rpb25zLlJFU0VULCBuYW1lKSxcbiAgICAgIHJlc2V0R2xvYmFsOiB0aGlzLmRpc3BhdGNoKHRoaXMuYmxvY2tVSVN1YmplY3QsIEJsb2NrVUlBY3Rpb25zLlJFU0VUX0dMT0JBTCwgbmFtZSksXG4gICAgICB1bnN1YnNjcmliZTogdGhpcy5kaXNwYXRjaCh0aGlzLmJsb2NrVUlTdWJqZWN0LCBCbG9ja1VJQWN0aW9ucy5VTlNVQlNDUklCRSwgbmFtZSlcbiAgICB9IGFzIE5nQmxvY2tVSTtcblxuICAgIHRoaXMuYmxvY2tVSUluc3RhbmNlc1tuYW1lXSA9IHRoaXMuYmxvY2tVSUluc3RhbmNlc1tuYW1lXSB8fCBibG9ja1VJO1xuXG4gICAgcmV0dXJuIGJsb2NrVUk7XG4gIH1cblxuICBvYnNlcnZlKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuYmxvY2tVSU9ic2VydmFibGU7XG4gIH1cblxuICBjbGVhckluc3RhbmNlKGluc3RhbmNlTmFtZTogc3RyaW5nKSB7XG4gICAgdGhpcy5kaXNwYXRjaCh0aGlzLmJsb2NrVUlTdWJqZWN0LCBCbG9ja1VJQWN0aW9ucy5SRVNFVCwgaW5zdGFuY2VOYW1lKTtcbiAgfVxuXG4gIHByaXZhdGUgYmxvY2tVSU1pZGRsZXdhcmUoeyBhY3Rpb24sIG5hbWUgfTogQmxvY2tVSUV2ZW50KTogdm9pZCB7XG4gICAgbGV0IGlzQWN0aXZlOiBib29sZWFuID0gbnVsbDtcblxuICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICBjYXNlIChCbG9ja1VJQWN0aW9ucy5TVEFSVCk6XG4gICAgICAgIGlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgKEJsb2NrVUlBY3Rpb25zLlNUT1ApOlxuICAgICAgY2FzZSAoQmxvY2tVSUFjdGlvbnMuUkVTRVQpOlxuICAgICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAoaXNBY3RpdmUgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuYmxvY2tVSUluc3RhbmNlc1tuYW1lXS5pc0FjdGl2ZSA9IGlzQWN0aXZlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZGlzcGF0Y2goc3ViamVjdDogUmVwbGF5U3ViamVjdDxhbnk+LCBhY3Rpb246IEJsb2NrVUlBY3Rpb25zLCBuYW1lOiBzdHJpbmcgPSBCbG9ja1VJRGVmYXVsdE5hbWUpOiBGdW5jdGlvbiB7XG4gICAgcmV0dXJuIChtZXNzYWdlPzogYW55KTogdm9pZCA9PiB7XG4gICAgICBzdWJqZWN0Lm5leHQoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhY3Rpb24sXG4gICAgICAgIG1lc3NhZ2VcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cbn1cbiJdfQ==