{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { Match } from \"./match\";\n/**\r\n * @class Autolinker.match.Phone\r\n * @extends Autolinker.match.Match\r\n *\r\n * Represents a Phone number match found in an input string which should be\r\n * Autolinked.\r\n *\r\n * See this class's superclass ({@link Autolinker.match.Match}) for more\r\n * details.\r\n */\n\nvar PhoneMatch =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PhoneMatch, _super);\n  /**\r\n   * @method constructor\r\n   * @param {Object} cfg The configuration properties for the Match\r\n   *   instance, specified in an Object (map).\r\n   */\n\n\n  function PhoneMatch(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    /**\r\n     * @protected\r\n     * @property {String} number (required)\r\n     *\r\n     * The phone number that was matched, without any delimiter characters.\r\n     *\r\n     * Note: This is a string to allow for prefixed 0's.\r\n     */\n\n\n    _this.number = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n\n    /**\r\n     * @protected\r\n     * @property  {Boolean} plusSign (required)\r\n     *\r\n     * `true` if the matched phone number started with a '+' sign. We'll include\r\n     * it in the `tel:` URL if so, as this is needed for international numbers.\r\n     *\r\n     * Ex: '+1 (123) 456 7879'\r\n     */\n\n    _this.plusSign = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n\n    _this.number = cfg.number;\n    _this.plusSign = cfg.plusSign;\n    return _this;\n  }\n  /**\r\n   * Returns a string name for the type of match that this class represents.\r\n   * For the case of PhoneMatch, returns 'phone'.\r\n   *\r\n   * @return {String}\r\n   */\n\n\n  PhoneMatch.prototype.getType = function () {\n    return 'phone';\n  };\n  /**\r\n   * Returns the phone number that was matched as a string, without any\r\n   * delimiter characters.\r\n   *\r\n   * Note: This is a string to allow for prefixed 0's.\r\n   *\r\n   * @return {String}\r\n   */\n\n\n  PhoneMatch.prototype.getPhoneNumber = function () {\n    return this.number;\n  };\n  /**\r\n   * Alias of {@link #getPhoneNumber}, returns the phone number that was\r\n   * matched as a string, without any delimiter characters.\r\n   *\r\n   * Note: This is a string to allow for prefixed 0's.\r\n   *\r\n   * @return {String}\r\n   */\n\n\n  PhoneMatch.prototype.getNumber = function () {\n    return this.getPhoneNumber();\n  };\n  /**\r\n   * Returns the anchor href that should be generated for the match.\r\n   *\r\n   * @return {String}\r\n   */\n\n\n  PhoneMatch.prototype.getAnchorHref = function () {\n    return 'tel:' + (this.plusSign ? '+' : '') + this.number;\n  };\n  /**\r\n   * Returns the anchor text that should be generated for the match.\r\n   *\r\n   * @return {String}\r\n   */\n\n\n  PhoneMatch.prototype.getAnchorText = function () {\n    return this.matchedText;\n  };\n\n  return PhoneMatch;\n}(Match);\n\nexport { PhoneMatch };","map":null,"metadata":{},"sourceType":"module"}