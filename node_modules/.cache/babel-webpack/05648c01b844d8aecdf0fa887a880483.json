{"ast":null,"code":"import _createClass from \"E:/Manuel/Sistenet/Testing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"E:/Manuel/Sistenet/Testing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar AngularFireModule_1;\nimport { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, Inject, PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\nexport var FirebaseOptionsToken = new InjectionToken('angularfire2.app.options');\nexport var FirebaseNameOrConfigToken = new InjectionToken('angularfire2.app.nameOrConfig');\nexport var FIREBASE_OPTIONS = FirebaseOptionsToken;\nexport var FIREBASE_APP_NAME = FirebaseNameOrConfigToken;\nexport var FirebaseApp = function FirebaseApp() {\n  _classCallCheck(this, FirebaseApp);\n};\nexport var VERSION = new Version('5.4.2');\nexport function _firebaseAppFactory(options, zone, nameOrConfig) {\n  var name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n  var config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n  config.name = config.name || name;\n  var existingApp = firebase.apps.filter(function (app) {\n    return app && app.name === config.name;\n  })[0];\n  return existingApp || zone.runOutsideAngular(function () {\n    return firebase.initializeApp(options, config);\n  });\n}\nvar FirebaseAppProvider = {\n  provide: FirebaseApp,\n  useFactory: _firebaseAppFactory,\n  deps: [FIREBASE_OPTIONS, NgZone, [new Optional(), FIREBASE_APP_NAME]]\n};\n\nvar AngularFireModule = AngularFireModule_1 = /*#__PURE__*/function () {\n  function AngularFireModule(platformId) {\n    _classCallCheck(this, AngularFireModule);\n\n    if (firebase.registerVersion) {\n      firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n      firebase.registerVersion('angular', NG_VERSION.full);\n    }\n  }\n\n  _createClass(AngularFireModule, null, [{\n    key: \"initializeApp\",\n    value: function initializeApp(options, nameOrConfig) {\n      return {\n        ngModule: AngularFireModule_1,\n        providers: [{\n          provide: FIREBASE_OPTIONS,\n          useValue: options\n        }, {\n          provide: FIREBASE_APP_NAME,\n          useValue: nameOrConfig\n        }]\n      };\n    }\n  }]);\n\n  return AngularFireModule;\n}();\n\nAngularFireModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AngularFireModule\n});\nAngularFireModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AngularFireModule_Factory(t) {\n    return new (t || AngularFireModule)(ɵngcc0.ɵɵinject(PLATFORM_ID));\n  },\n  providers: [FirebaseAppProvider]\n});\nAngularFireModule = AngularFireModule_1 = __decorate([__param(0, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [Object])], AngularFireModule);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireModule, [{\n    type: NgModule,\n    args: [{\n      providers: [FirebaseAppProvider]\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nexport { AngularFireModule };","map":{"version":3,"sources":["../../../src/core/firebase.app.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,cAAT,EAAyB,QAAzB,EAAmC,QAAnC,EAA6C,MAA7C,EAAqD,OAAO,IAAI,UAAhE,EAA4E,OAA5E,EAAqF,MAArF,EAA6F,WAA7F,QAAgH,eAAhH;AAGA,OAAO,QAAP,MAAqB,cAArB;AAOA,OAAO,IAAM,oBAAoB,GAAG,IAAI,cAAJ,CAAoC,0BAApC,CAA7B;AACP,OAAO,IAAM,yBAAyB,GAAG,IAAI,cAAJ,CAAuD,+BAAvD,CAAlC;AAEP,OAAO,IAAM,gBAAgB,GAAG,oBAAzB;AACP,OAAO,IAAM,iBAAiB,GAAG,yBAA1B;AAiBP,WAAa,WAAb;AAAA;AAAA;AAeA,OAAO,IAAM,OAAO,GAAG,IAAI,OAAJ,CAAY,OAAZ,CAAhB;AAEP,OAFyD,SAEzC,mBAFyC,CAErB,OAFqB,EAEK,IAFL,EAEmB,YAFnB,EAE+D;AACpH,MAAM,IAAI,GAAG,OAAO,YAAP,KAAwB,QAAxB,IAAoC,YAApC,IAAoD,WAAjE;AACA,MAAM,MAAM,GAAG,OAAO,YAAP,KAAwB,QAAxB,IAAoC,YAApC,IAAoD,EAAnE;AACA,EAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,IAAe,IAA7B;AAEA,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB,UAAA,GAAG;AAAA,WAAI,GAAG,IAAI,GAAG,CAAC,IAAJ,KAAa,MAAM,CAAC,IAA/B;AAAA,GAAxB,EAA6D,CAA7D,CAApB;AAGA,SAAQ,WAAW,IAAI,IAAI,CAAC,iBAAL,CAAuB;AAAA,WAAM,QAAQ,CAAC,aAAT,CAAuB,OAAvB,EAAgC,MAAhC,CAAN;AAAA,GAAvB,CAAvB;AACH;AAED,IAAM,mBAAmB,GAAG;AACxB,EAAA,OAAO,EAAE,WADe;AAExB,EAAA,UAAU,EAAE,mBAFY;AAGxB,EAAA,IAAI,EAAE,CACF,gBADE,EAEF,MAFE,EAGF,CAAC,IAAI,QAAJ,EAAD,EAAiB,iBAAjB,CAHE;AAHkB,CAA5B;;AAaA,IAAa,iBAAiB,GAAA,mBAA9B;AAUI,6BAAiC,UAAjC,EAAkD;AAAA;;AAC9C,QAAI,QAAQ,CAAC,eAAb,EAA8B;AAC1B,MAAA,QAAQ,CAAC,eAAT,CAAyB,aAAzB,EAAwC,OAAO,CAAC,IAAhD,EAAsD,UAAU,CAAC,QAAX,EAAtD;AACA,MAAA,QAAQ,CAAC,eAAT,CAAyB,SAAzB,EAAoC,UAAU,CAAC,IAA/C;AACH;AACJ;;AAfL;AAAA;AAAA,kCACyB,OADzB,EACmD,YADnD,EAC4F;AACpF,aAAO;AACH,QAAA,QAAQ,EAAE,mBADP;AAEH,QAAA,SAAS,EAAE,CACP;AAAE,UAAA,OAAO,EAAE,gBAAX;AAA6B,UAAA,QAAQ,EAAE;AAAvC,SADO,EAEP;AAAE,UAAA,OAAO,EAAE,iBAAX;AAA8B,UAAA,QAAQ,EAAE;AAAxC,SAFO;AAFR,OAAP;AAOH;AATL;;AAAA;AAAA,GAAA;;;;;;;;;cAgBC,mB;;AAhBY,iBAAiB,GAAA,mBAAA,GAAA,UAAA,CAA1B,CAHH,OAAA,CAAA,CAAA,EAAQ,MAac,CAZnB,WAYmB,CAbtB,CAGG,EAFa,UAAA,CAAA,mBAAA,EACf,CAW8C,MAX9C,CADe,CAEb,CAA0B,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;AAgBX,C;;AAAC,SAhBU,iBAgBV","sourcesContent":["import { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, Inject, PLATFORM_ID } from '@angular/core';\nimport { auth, database, messaging, storage, firestore, functions } from 'firebase/app';\n// @ts-ignore (https://github.com/firebase/firebase-js-sdk/pull/1206)\nimport firebase from 'firebase/app'; // once fixed can pull in as \"default as firebase\" above\n\n// Public types don't expose FirebaseOptions or FirebaseAppConfig\nexport type FirebaseOptions = {[key:string]: any};\nexport type FirebaseAppConfig = {[key:string]: any};\n\n// SEMVER drop FirebaseOptionsToken and FirebaseNameOrConfigToken in favor of FIREBASE_OPTIONS and FIREBASE_APP_NAME in next major\nexport const FirebaseOptionsToken = new InjectionToken<FirebaseOptions>('angularfire2.app.options');\nexport const FirebaseNameOrConfigToken = new InjectionToken<string|FirebaseAppConfig|undefined>('angularfire2.app.nameOrConfig');\n\nexport const FIREBASE_OPTIONS = FirebaseOptionsToken;\nexport const FIREBASE_APP_NAME = FirebaseNameOrConfigToken;\n\nexport type FirebaseDatabase = database.Database;\nexport type FirebaseAuth = auth.Auth;\n// SEMVER analytics.Analytics;\nexport type FirebaseAnalytics = any;\nexport type FirebaseMessaging = messaging.Messaging;\n// SEMVER performance.Performance\nexport type FirebasePerformance = any;\nexport type FirebaseStorage = storage.Storage;\nexport type FirebaseFirestore = firestore.Firestore;\nexport type FirebaseFunctions = functions.Functions;\n// SEMVER remoteConfig.RemoteConfig;\nexport type FirebaseRemoteConfig = any;\n\n// Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\nexport class FirebaseApp {\n    name: string;\n    options: {};\n    analytics: () => FirebaseAnalytics;\n    auth: () => FirebaseAuth;\n    database: (databaseURL?: string) => FirebaseDatabase;\n    messaging: () => FirebaseMessaging;\n    performance: () => FirebasePerformance;\n    storage: (storageBucket?: string) => FirebaseStorage;\n    delete: () => Promise<void>;\n    firestore: () => FirebaseFirestore;\n    functions: (region?: string) => FirebaseFunctions;\n    remoteConfig: () => FirebaseRemoteConfig;\n}\n\nexport const VERSION = new Version('ANGULARFIRE2_VERSION');\n\nexport function _firebaseAppFactory(options: FirebaseOptions, zone: NgZone, nameOrConfig?: string|FirebaseAppConfig|null) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    // Added any due to some inconsistency between @firebase/app and firebase types\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0] as any;\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n    return (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config as any))) as FirebaseApp;\n}\n\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: _firebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\n \n@NgModule({\n    providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n    static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        }\n    }\n    constructor(@Inject(PLATFORM_ID) platformId:Object ) {\n        if (firebase.registerVersion) {\n            firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n            firebase.registerVersion('angular', NG_VERSION.full);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}