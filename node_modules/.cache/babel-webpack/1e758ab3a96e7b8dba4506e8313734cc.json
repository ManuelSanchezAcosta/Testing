{"ast":null,"code":"import _classCallCheck from \"E:/Source/Sistenet/Testing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/Source/Sistenet/Testing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEvent } from 'rxjs';\nimport { Component, Input, Output, EventEmitter, ViewChild, TemplateRef, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nvar _c0 = [\"customerInput\"];\n\nvar _c1 = function _c1(a0) {\n  return {\n    \"page-size-column-active\": a0\n  };\n};\n\nfunction DatatablePagerComponent_li_1_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_li_1_li_5_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ps_r6 = ctx.$implicit;\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.changePageSize(ps_r6);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ps_r6 = ctx.$implicit;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r5.size === ps_r6));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ps_r6, \" \\u884C/\\u9875\");\n  }\n}\n\nvar _c2 = function _c2(a0, a1) {\n  return {\n    \"fa-angle-up\": a0,\n    \"fa-angle-down\": a1\n  };\n};\n\nfunction DatatablePagerComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.pageSizeColumn = !ctx_r9.pageSizeColumn;\n    })(\"mouseleave\", function DatatablePagerComponent_li_1_Template_li_mouseleave_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.pageSizeColumn = true;\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 9);\n    ɵngcc0.ɵɵelementStart(4, \"ul\", 10);\n    ɵngcc0.ɵɵtemplate(5, DatatablePagerComponent_li_1_li_5_Template, 2, 4, \"li\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r0.size, \" \\u884C/\\u9875\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r0.pageSizeColumn, !ctx_r0.pageSizeColumn));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r0.pageSizeColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.pageSizes);\n  }\n}\n\nfunction DatatablePagerComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_li_2_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.selectPage(1);\n    });\n    ɵngcc0.ɵɵelement(2, \"i\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r1.canPrevious());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r1.pagerPreviousIcon);\n  }\n}\n\nfunction DatatablePagerComponent_li_6_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_li_6_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var pg_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.selectPage(pg_r14.number);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pg_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pg_r14.text, \" \");\n  }\n}\n\nfunction DatatablePagerComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 13);\n    ɵngcc0.ɵɵtemplate(1, DatatablePagerComponent_li_6_a_1_Template, 2, 1, \"a\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pg_r14 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pg_r14.number === ctx_r2.page);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.pageNumber);\n  }\n}\n\nfunction DatatablePagerComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_li_10_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.selectPage(ctx_r20.totalPages);\n    });\n    ɵngcc0.ɵɵelement(2, \"i\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", !ctx_r3.canNext());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r3.pagerNextIcon);\n  }\n}\n\nvar _c3 = function _c3() {\n  return {\n    \"position\": \"relative\"\n  };\n};\n\nfunction DatatableFooterComponent_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    var offset_r5 = ctx_r8.offset;\n    var pageSize_r2 = ctx_r8.pageSize;\n    var rowCount_r1 = ctx_r8.rowCount;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", \"\\u5F53\\u524D \" + ((offset_r5 || 0) * pageSize_r2 + 1) + \" - \" + ((offset_r5 + 1) * pageSize_r2 > rowCount_r1 ? rowCount_r1 : (offset_r5 + 1 || 1) * pageSize_r2) + \" / \" + rowCount_r1 + \" \\u884C\", ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"app-datatable-pager\", 4);\n    ɵngcc0.ɵɵlistener(\"change\", function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template_app_datatable_pager_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      ctx_r9.datatable.onFooterPage($event);\n      return ctx_r9.emitPage($event);\n    })(\"pageChange\", function DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template_app_datatable_pager_pageChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.emitPage($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext();\n    var curPage_r4 = ctx_r12.curPage;\n    var pageSize_r2 = ctx_r12.pageSize;\n    var rowCount_r1 = ctx_r12.rowCount;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"linage\", ctx_r7.linage)(\"displayBothEnds\", ctx_r7.displayBothEnds)(\"pageNumber\", ctx_r7.pageNumber)(\"pageSizes\", ctx_r7.pageSizes)(\"pagerPreviousIcon\", ctx_r7.pagerPreviousIcon)(\"pagerNextIcon\", ctx_r7.pagerNextIcon)(\"pagerLeftArrowIcon\", ctx_r7.pagerLeftArrowIcon)(\"pagerRightArrowIcon\", ctx_r7.pagerRightArrowIcon)(\"page\", curPage_r4)(\"size\", pageSize_r2)(\"datatable\", ctx_r7.datatable)(\"count\", rowCount_r1);\n  }\n}\n\nfunction DatatableFooterComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DatatableFooterComponent_ng_template_0_div_0_Template, 1, 1, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, DatatableFooterComponent_ng_template_0_app_datatable_pager_1_Template, 1, 12, \"app-datatable-pager\", 2);\n  }\n\n  if (rf & 2) {\n    var rowCount_r1 = ctx.rowCount;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowCount_r1 > 0 && ctx_r0.totalNumber);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowCount_r1 > 0);\n  }\n}\n\nvar DatatablePagerComponent = /*#__PURE__*/function () {\n  function DatatablePagerComponent() {\n    _classCallCheck(this, DatatablePagerComponent);\n\n    this.linage = true;\n    this.displayBothEnds = true;\n    this.pageNumber = true;\n    this.change = new EventEmitter();\n    this.pageChange = new EventEmitter(); // tslint:disable-next-line:member-ordering\n\n    this._page = 1; // tslint:disable-next-line:member-ordering\n\n    this._count = 0; // tslint:disable-next-line:member-ordering\n\n    this._size = 0; // tslint:disable-next-line:member-ordering\n\n    this.pageSizeColumn = true;\n  }\n  /**\r\n   * @param {?} val\r\n   * @return {?}\r\n   */\n\n\n  _createClass(DatatablePagerComponent, [{\n    key: \"ngOnInit\",\n\n    /**\r\n     * @return {?}\r\n     */\n    value: function ngOnInit() {}\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      this.inputEvent = fromEvent(this.customerInput.nativeElement, 'input').pipe(debounceTime(500)).subscribe(function (event) {\n        /** @type {?} */\n        var value;\n\n        if (event.target.value) {\n          value = Number(event.target.value);\n\n          if (value < 1) {\n            value = 1;\n            _this.customerInput.nativeElement.value = 1;\n          }\n\n          _this.selectPage(Math.round(value));\n        }\n      });\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"canPrevious\",\n    value: function canPrevious() {\n      return this.page > 1;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"canNext\",\n    value: function canNext() {\n      return this.page < this.totalPages;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"prevPage\",\n    value: function prevPage() {\n      this.selectPage(this.page - 1);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      this.selectPage(this.page + 1);\n    }\n    /**\r\n     * @param {?} page\r\n     * @param {?=} changePageSize\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(page, changePageSize) {\n      if (changePageSize) {\n        if (page > 0 && page <= this.totalPages) {\n          this.page = page;\n          this.change.emit({\n            page: page\n          });\n        }\n      } else {\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\n          this.page = page;\n          this.change.emit({\n            page: page\n          });\n        }\n      }\n    }\n    /**\r\n     * @param {?=} page\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"calcPages\",\n    value: function calcPages(page) {\n      /** @type {?} */\n      var pages = [];\n      /** @type {?} */\n\n      var startPage = 1;\n      /** @type {?} */\n\n      var endPage = this.totalPages;\n      /** @type {?} */\n\n      var maxSize = 5;\n      /** @type {?} */\n\n      var isMaxSized = maxSize < this.totalPages;\n      page = page || this.page;\n\n      if (isMaxSized) {\n        startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      }\n\n      for (var num = startPage; num <= endPage; num++) {\n        pages.push({\n          number: num,\n          text: num\n        });\n      }\n\n      return pages;\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"valChange\",\n    value: function valChange(event) {\n      if (event === null) {\n        this.customerInput.nativeElement.value = '';\n      }\n\n      if (event || event === 0) {\n        this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);\n        this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"blurHandel\",\n    value: function blurHandel() {\n      if (this.currentOffset === 0 || this.customerInput.nativeElement.value === '') {\n        this.customerInput.nativeElement.value = 1;\n      } else if (this.currentOffset !== undefined) {\n        this.customerInput.nativeElement.value = this.currentOffset;\n      } else if (this.currentOffset === undefined) {\n        if (this.prveOffset !== undefined) {\n          this.customerInput.nativeElement.value = this.prveOffset;\n        }\n      }\n\n      this.page = Number(this.customerInput.nativeElement.value);\n      this.datatable.offset = this.page - 1;\n    }\n    /**\r\n     * @param {?} pageSize\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"changePageSize\",\n    value: function changePageSize(pageSize) {\n      this.datatable.limit = pageSize;\n      this.selectPage(1, 'changePageSize');\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"keyDownHandel\",\n    value: function keyDownHandel(event) {\n      if (this.customerInput.nativeElement.value) {\n        this.prveOffset = Number(this.customerInput.nativeElement.value);\n      }\n\n      if (event.keyCode < 48 && event.keyCode !== 8 || event.keyCode > 57 && event.keyCode < 96 || event.keyCode > 105) {\n        return false;\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.inputEvent.unsubscribe();\n    }\n  }, {\n    key: \"size\",\n    set: function set(val) {\n      this._size = val;\n      this.pages = this.calcPages();\n    }\n    /**\r\n     * @return {?}\r\n     */\n    ,\n    get: function get() {\n      return this._size;\n    }\n    /**\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"count\",\n    set: function set(val) {\n      this._count = val;\n      this.pages = this.calcPages();\n    }\n    /**\r\n     * @return {?}\r\n     */\n    ,\n    get: function get() {\n      return this._count;\n    }\n    /**\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"page\",\n    set: function set(val) {\n      this._page = val;\n      this.pages = this.calcPages();\n    }\n    /**\r\n     * @return {?}\r\n     */\n    ,\n    get: function get() {\n      return this._page || 1;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"totalPages\",\n    get: function get() {\n      /** @type {?} */\n      var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n      return Math.max(count || 0, 1);\n    }\n  }]);\n\n  return DatatablePagerComponent;\n}();\n\nDatatablePagerComponent.ɵfac = function DatatablePagerComponent_Factory(t) {\n  return new (t || DatatablePagerComponent)();\n};\n\nDatatablePagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DatatablePagerComponent,\n  selectors: [[\"app-datatable-pager\"]],\n  viewQuery: function DatatablePagerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customerInput = _t.first);\n    }\n  },\n  inputs: {\n    linage: \"linage\",\n    displayBothEnds: \"displayBothEnds\",\n    pageNumber: \"pageNumber\",\n    size: \"size\",\n    count: \"count\",\n    page: \"page\",\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    pageSizes: \"pageSizes\",\n    datatable: \"datatable\"\n  },\n  outputs: {\n    change: \"change\",\n    pageChange: \"pageChange\"\n  },\n  decls: 17,\n  vars: 18,\n  consts: [[1, \"pager\"], [\"class\", \"page-size-continer\", 3, \"click\", \"mouseleave\", 4, \"ngIf\"], [3, \"disabled\", 4, \"ngIf\"], [3, \"click\"], [\"class\", \"pages\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"], [\"type\", \"number\", \"title\", \" \", \"rows\", \"2\", 1, \"lz-jump-page\", 3, \"min\", \"ngModel\", \"keydown\", \"blur\", \"ngModelChange\"], [\"customerInput\", \"\"], [1, \"page-size-continer\", 3, \"click\", \"mouseleave\"], [1, \"fa\", 3, \"ngClass\"], [1, \"page-size-content\", 3, \"hidden\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"], [1, \"pages\"], [3, \"click\", 4, \"ngIf\"]],\n  template: function DatatablePagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, DatatablePagerComponent_li_1_Template, 6, 7, \"li\", 1);\n      ɵngcc0.ɵɵtemplate(2, DatatablePagerComponent_li_2_Template, 3, 5, \"li\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"li\");\n      ɵngcc0.ɵɵelementStart(4, \"a\", 3);\n      ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_Template_a_click_4_listener() {\n        return ctx.prevPage();\n      });\n      ɵngcc0.ɵɵelement(5, \"i\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, DatatablePagerComponent_li_6_Template, 2, 3, \"li\", 4);\n      ɵngcc0.ɵɵelementStart(7, \"li\");\n      ɵngcc0.ɵɵelementStart(8, \"a\", 3);\n      ɵngcc0.ɵɵlistener(\"click\", function DatatablePagerComponent_Template_a_click_8_listener() {\n        return ctx.nextPage();\n      });\n      ɵngcc0.ɵɵelement(9, \"i\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(10, DatatablePagerComponent_li_10_Template, 3, 5, \"li\", 2);\n      ɵngcc0.ɵɵelementStart(11, \"li\", 5);\n      ɵngcc0.ɵɵelementStart(12, \"span\");\n      ɵngcc0.ɵɵtext(13, \"\\u8DF3\\u8F6C\\u5230\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(14, \"input\", 6, 7);\n      ɵngcc0.ɵɵlistener(\"keydown\", function DatatablePagerComponent_Template_input_keydown_14_listener($event) {\n        return ctx.keyDownHandel($event);\n      })(\"blur\", function DatatablePagerComponent_Template_input_blur_14_listener() {\n        return ctx.blurHandel();\n      })(\"ngModelChange\", function DatatablePagerComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.valChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(16, \"\\u9875 \");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.linage);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayBothEnds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(ctx.pagerLeftArrowIcon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassMap(ctx.pagerRightArrowIcon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayBothEnds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"min\", 1)(\"ngModel\", ctx.page);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc2.NumberValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgClass],\n  styles: [\".page-size-continer[_ngcontent-%COMP%] {\\n        position: relative;\\n        width: 80px;\\n        height: 26px;\\n        line-height: 26px;\\n        text-align: center;\\n        border-radius: 2px;\\n        cursor: pointer;\\n      }\\n      .page-size-continer[_ngcontent-%COMP%]:hover {\\n        background-color: rgba(158, 158, 158, 0.2);\\n      }\\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%] {\\n        position: absolute;\\n        bottom: 24px;\\n        left: 0;\\n        padding: 0;\\n        background: #fff;\\n        border-radius: 4px;\\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\\n        z-index: 11;\\n      }\\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n        width: 100%;\\n        padding: 4px 0;\\n      }\\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\\n        background-color: rgba(158, 158, 158, 0.2);\\n      }\\n      .page-size-continer[_ngcontent-%COMP%]   .page-size-content[_ngcontent-%COMP%]   .page-size-column-active[_ngcontent-%COMP%] {\\n        color: #409eff;\\n      }\\n      input[type='number'][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type='number'][_ngcontent-%COMP%]::-webkit-outer-spin-button {\\n        -webkit-appearance: none;\\n      }\\n      .lz-jump-page[_ngcontent-%COMP%] {\\n        display: inline-block;\\n        width: 50px;\\n        border-radius: 2px;\\n        margin-right: 6px;\\n        padding-left: 4px;\\n        border: solid 1px #ebedf2;\\n      }\\n      input[type='number'][_ngcontent-%COMP%] {\\n        -moz-appearance: textfield;\\n      }\"]\n});\nDatatablePagerComponent.propDecorators = {\n  pagerLeftArrowIcon: [{\n    type: Input\n  }],\n  pagerRightArrowIcon: [{\n    type: Input\n  }],\n  pagerPreviousIcon: [{\n    type: Input\n  }],\n  pagerNextIcon: [{\n    type: Input\n  }],\n  pageSizes: [{\n    type: Input\n  }],\n  datatable: [{\n    type: Input\n  }],\n  linage: [{\n    type: Input\n  }],\n  displayBothEnds: [{\n    type: Input\n  }],\n  pageNumber: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  count: [{\n    type: Input\n  }],\n  page: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  customerInput: [{\n    type: ViewChild,\n    args: ['customerInput']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatablePagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'app-datatable-pager',\n      template: \"\\n    <ul class=\\\"pager\\\">\\n      <li class=\\\"page-size-continer\\\" *ngIf=\\\"linage\\\" (click)=\\\"pageSizeColumn=!pageSizeColumn\\\" (mouseleave)=\\\"pageSizeColumn=true\\\">\\n        <span>{{size}} \\u884C/\\u9875</span>\\n        <span class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}\\\"></span>\\n        <ul [hidden]=\\\"pageSizeColumn\\\" class=\\\"page-size-content\\\">\\n          <li *ngFor=\\\"let ps of pageSizes\\\" (click)=\\\"changePageSize(ps)\\\" [ngClass]=\\\"{'page-size-column-active':size===ps}\\\">{{ps}} \\u884C/\\u9875</li>\\n        </ul>\\n      </li>\\n      <li *ngIf=\\\"displayBothEnds\\\" [class.disabled]=\\\"!canPrevious()\\\">\\n        <a (click)=\\\"selectPage(1)\\\">\\n          <i class=\\\"{{pagerPreviousIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a (click)=\\\"prevPage()\\\">\\n          <i class=\\\"{{pagerLeftArrowIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li class=\\\"pages\\\" *ngFor=\\\"let pg of pages\\\" [class.active]=\\\"pg.number === page\\\">\\n        <a *ngIf=\\\"pageNumber\\\" (click)=\\\"selectPage(pg.number)\\\">\\n          {{pg.text}}\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a (click)=\\\"nextPage()\\\">\\n          <i class=\\\"{{pagerRightArrowIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"displayBothEnds\\\" [class.disabled]=\\\"!canNext()\\\">\\n        <a (click)=\\\"selectPage(totalPages)\\\">\\n          <i class=\\\"{{pagerNextIcon}}\\\"></i>\\n        </a>\\n      </li>\\n      <li [ngStyle]=\\\"{'position':'relative'}\\\">\\n        <span>\\u8DF3\\u8F6C\\u5230</span>\\n        <input #customerInput class=\\\"lz-jump-page\\\" type=\\\"number\\\" title=\\\" \\\" rows=\\\"2\\\" [min]=\\\"1\\\" [ngModel]=\\\"page\\\" (keydown)='keyDownHandel($event)'\\n          (blur)=\\\"blurHandel()\\\" (ngModelChange)=\\\"valChange($event)\\\" />\\u9875\\n      </li>\\n    </ul>\",\n      styles: [\"\\n      .page-size-continer {\\n        position: relative;\\n        width: 80px;\\n        height: 26px;\\n        line-height: 26px;\\n        text-align: center;\\n        border-radius: 2px;\\n        cursor: pointer;\\n      }\\n      .page-size-continer:hover {\\n        background-color: rgba(158, 158, 158, 0.2);\\n      }\\n      .page-size-continer .page-size-content {\\n        position: absolute;\\n        bottom: 24px;\\n        left: 0;\\n        padding: 0;\\n        background: #fff;\\n        border-radius: 4px;\\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\\n        z-index: 11;\\n      }\\n      .page-size-continer .page-size-content li {\\n        width: 100%;\\n        padding: 4px 0;\\n      }\\n      .page-size-continer .page-size-content li:hover {\\n        background-color: rgba(158, 158, 158, 0.2);\\n      }\\n      .page-size-continer .page-size-content .page-size-column-active {\\n        color: #409eff;\\n      }\\n      input[type='number']::-webkit-inner-spin-button,\\n      input[type='number']::-webkit-outer-spin-button {\\n        -webkit-appearance: none;\\n      }\\n      .lz-jump-page {\\n        display: inline-block;\\n        width: 50px;\\n        border-radius: 2px;\\n        margin-right: 6px;\\n        padding-left: 4px;\\n        border: solid 1px #ebedf2;\\n      }\\n      input[type='number'] {\\n        -moz-appearance: textfield;\\n      }\\n    \"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    linage: [{\n      type: Input\n    }],\n    displayBothEnds: [{\n      type: Input\n    }],\n    pageNumber: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    size: [{\n      type: Input\n    }],\n    count: [{\n      type: Input\n    }],\n    page: [{\n      type: Input\n    }],\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    pageSizes: [{\n      type: Input\n    }],\n    datatable: [{\n      type: Input\n    }],\n    customerInput: [{\n      type: ViewChild,\n      args: ['customerInput']\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar DatatableFooterComponent = /*#__PURE__*/function () {\n  function DatatableFooterComponent() {\n    _classCallCheck(this, DatatableFooterComponent);\n\n    this.pagerLeftArrowIcon = 'fa fa-angle-left';\n    this.pagerRightArrowIcon = 'fa fa-angle-right';\n    this.pagerPreviousIcon = 'fa fa-step-backward';\n    this.pagerNextIcon = 'fa fa-step-forward';\n    this.pageSizes = [10, 20, 30, 40, 50];\n    this.totalNumber = true;\n    this.linage = true;\n    this.displayBothEnds = true;\n    this.pageNumber = true;\n    this.pageChange = new EventEmitter();\n  }\n  /**\r\n   * @param {?} val\r\n   * @return {?}\r\n   */\n\n\n  _createClass(DatatableFooterComponent, [{\n    key: \"ngOnInit\",\n\n    /**\r\n     * @return {?}\r\n     */\n    value: function ngOnInit() {}\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this._datatable && this._template && (!this._datatable.footer || !this._datatable.footer.template)) {\n        if (this._datatable.footer) {\n          this._datatable.footer.template = this._template;\n        } else {\n          this._datatable.footer = {\n            footerHeight: this._datatable.footerHeight,\n            totalMessage: this._datatable.messages.totalMessage,\n            selectedMessage: this._datatable.messages.selectedMessage,\n            pagerLeftArrowIcon: '',\n            pagerRightArrowIcon: '',\n            pagerPreviousIcon: '',\n            pagerNextIcon: '',\n            template: this._template\n          };\n        }\n      }\n    }\n    /**\r\n     * @param {?} page\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"emitPage\",\n    value: function emitPage(page) {\n      this.pageChange.emit(page);\n    }\n  }, {\n    key: \"template\",\n    set: function set(val) {\n      this._template = val;\n      this.update();\n    }\n    /**\r\n     * @return {?}\r\n     */\n    ,\n    get: function get() {\n      return this._template;\n    }\n    /**\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"datatable\",\n    set: function set(val) {\n      this._datatable = val;\n      this.update();\n    }\n    /**\r\n     * @return {?}\r\n     */\n    ,\n    get: function get() {\n      return this._datatable;\n    }\n  }]);\n\n  return DatatableFooterComponent;\n}();\n\nDatatableFooterComponent.ɵfac = function DatatableFooterComponent_Factory(t) {\n  return new (t || DatatableFooterComponent)();\n};\n\nDatatableFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DatatableFooterComponent,\n  selectors: [[\"ngx-datatable-footer\"]],\n  viewQuery: function DatatableFooterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    pagerLeftArrowIcon: \"pagerLeftArrowIcon\",\n    pagerRightArrowIcon: \"pagerRightArrowIcon\",\n    pagerPreviousIcon: \"pagerPreviousIcon\",\n    pagerNextIcon: \"pagerNextIcon\",\n    pageSizes: \"pageSizes\",\n    totalNumber: \"totalNumber\",\n    linage: \"linage\",\n    displayBothEnds: \"displayBothEnds\",\n    pageNumber: \"pageNumber\",\n    datatable: \"datatable\",\n    page: \"page\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  decls: 1,\n  vars: 0,\n  consts: [[\"ngx-datatable-footer-template\", \"\"], [\"class\", \"page-count\", 3, \"innerHTML\", 4, \"ngIf\"], [\"class\", \"datatable-pager\", 3, \"linage\", \"displayBothEnds\", \"pageNumber\", \"pageSizes\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"page\", \"size\", \"datatable\", \"count\", \"change\", \"pageChange\", 4, \"ngIf\"], [1, \"page-count\", 3, \"innerHTML\"], [1, \"datatable-pager\", 3, \"linage\", \"displayBothEnds\", \"pageNumber\", \"pageSizes\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"page\", \"size\", \"datatable\", \"count\", \"change\", \"pageChange\"]],\n  template: function DatatableFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, DatatableFooterComponent_ng_template_0_Template, 2, 2, \"ng-template\", 0);\n    }\n  },\n  directives: [ɵngcc1.NgIf, DatatablePagerComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDatatableFooterComponent.ctorParameters = function () {\n  return [];\n};\n\nDatatableFooterComponent.propDecorators = {\n  template: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }],\n  datatable: [{\n    type: Input\n  }],\n  pagerLeftArrowIcon: [{\n    type: Input\n  }],\n  pagerRightArrowIcon: [{\n    type: Input\n  }],\n  pagerPreviousIcon: [{\n    type: Input\n  }],\n  pagerNextIcon: [{\n    type: Input\n  }],\n  pageSizes: [{\n    type: Input\n  }],\n  totalNumber: [{\n    type: Input\n  }],\n  linage: [{\n    type: Input\n  }],\n  displayBothEnds: [{\n    type: Input\n  }],\n  pageNumber: [{\n    type: Input\n  }],\n  page: [{\n    type: Input\n  }],\n  pageChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatatableFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-datatable-footer',\n      template: \"\\n  <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\" let-selectedCount=\\\"selectedCount\\\"\\n    let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\">\\n    <div class=\\\"page-count\\\" *ngIf=\\\"rowCount>0&&totalNumber\\\" [innerHTML]=\\\"'\\u5F53\\u524D '+((offset||0) * pageSize + 1)+' - '+((offset+1) * pageSize > rowCount?rowCount : ((offset+1)||1) * pageSize)+' / '+rowCount+' \\u884C'\\\">\\n    </div>\\n    <app-datatable-pager *ngIf=\\\"rowCount>0\\\" [linage]=\\\"linage\\\" [displayBothEnds]=\\\"displayBothEnds\\\" [pageNumber]=\\\"pageNumber\\\" [pageSizes]=\\\"pageSizes\\\" [pagerPreviousIcon]=\\\"pagerPreviousIcon\\\" [pagerNextIcon]=\\\"pagerNextIcon\\\"\\n      [pagerLeftArrowIcon]=\\\"pagerLeftArrowIcon\\\" [pagerRightArrowIcon]=\\\"pagerRightArrowIcon\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n      [datatable]=\\\"datatable\\\" [count]=\\\"rowCount\\\" (change)=\\\"datatable.onFooterPage($event);emitPage($event)\\\" (pageChange)=\\\"emitPage($event)\\\" class=\\\"datatable-pager\\\">\\n    </app-datatable-pager>\\n  </ng-template>\"\n    }]\n  }], function () {\n    return [];\n  }, {\n    pagerLeftArrowIcon: [{\n      type: Input\n    }],\n    pagerRightArrowIcon: [{\n      type: Input\n    }],\n    pagerPreviousIcon: [{\n      type: Input\n    }],\n    pagerNextIcon: [{\n      type: Input\n    }],\n    pageSizes: [{\n      type: Input\n    }],\n    totalNumber: [{\n      type: Input\n    }],\n    linage: [{\n      type: Input\n    }],\n    displayBothEnds: [{\n      type: Input\n    }],\n    pageNumber: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    datatable: [{\n      type: Input\n    }],\n    page: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar NgxDatatableFooterModule = /*#__PURE__*/function () {\n  function NgxDatatableFooterModule() {\n    _classCallCheck(this, NgxDatatableFooterModule);\n  }\n\n  _createClass(NgxDatatableFooterModule, null, [{\n    key: \"forRoot\",\n\n    /**\r\n     * @return {?}\r\n     */\n    value: function forRoot() {\n      return {\n        ngModule: NgxDatatableFooterModule\n      };\n    }\n  }]);\n\n  return NgxDatatableFooterModule;\n}();\n\nNgxDatatableFooterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgxDatatableFooterModule\n});\nNgxDatatableFooterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgxDatatableFooterModule_Factory(t) {\n    return new (t || NgxDatatableFooterModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxDatatableFooterModule, {\n    declarations: function declarations() {\n      return [DatatablePagerComponent, DatatableFooterComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [DatatablePagerComponent, DatatableFooterComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxDatatableFooterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [DatatablePagerComponent, DatatableFooterComponent],\n      exports: [DatatablePagerComponent, DatatableFooterComponent]\n    }]\n  }], null, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { DatatablePagerComponent, DatatableFooterComponent, NgxDatatableFooterModule };","map":{"version":3,"sources":["ngx-datatable-footer/lib/datatable-pager/datatable-pager.component.ts","ngx-datatable-footer/lib/datatable-footer/datatable-footer.component.ts","ngx-datatable-footer/lib/ngx-datatable-footer.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, AfterViewInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\n\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li class=\"page-size-continer\" *ngIf=\"linage\" (click)=\"pageSizeColumn=!pageSizeColumn\" (mouseleave)=\"pageSizeColumn=true\">\n        <span>{{size}} è¡/é¡µ</span>\n        <span class=\"fa\" [ngClass]=\"{'fa-angle-up':pageSizeColumn,'fa-angle-down':!pageSizeColumn}\"></span>\n        <ul [hidden]=\"pageSizeColumn\" class=\"page-size-content\">\n          <li *ngFor=\"let ps of pageSizes\" (click)=\"changePageSize(ps)\" [ngClass]=\"{'page-size-column-active':size===ps}\">{{ps}} è¡/é¡µ</li>\n        </ul>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"selectPage(1)\">\n          <i class=\"{{pagerPreviousIcon}}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a (click)=\"prevPage()\">\n          <i class=\"{{pagerLeftArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li class=\"pages\" *ngFor=\"let pg of pages\" [class.active]=\"pg.number === page\">\n        <a *ngIf=\"pageNumber\" (click)=\"selectPage(pg.number)\">\n          {{pg.text}}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a (click)=\"nextPage()\">\n          <i class=\"{{pagerRightArrowIcon}}\"></i>\n        </a>\n      </li>\n      <li *ngIf=\"displayBothEnds\" [class.disabled]=\"!canNext()\">\n        <a (click)=\"selectPage(totalPages)\">\n          <i class=\"{{pagerNextIcon}}\"></i>\n        </a>\n      </li>\n      <li [ngStyle]=\"{'position':'relative'}\">\n        <span>è·³è½¬å°</span>\n        <input #customerInput class=\"lz-jump-page\" type=\"number\" title=\" \" rows=\"2\" [min]=\"1\" [ngModel]=\"page\" (keydown)='keyDownHandel($event)'\n          (blur)=\"blurHandel()\" (ngModelChange)=\"valChange($event)\" />é¡µ\n      </li>\n    </ul>`,\n  styles: [\n    `\n      .page-size-continer {\n        position: relative;\n        width: 80px;\n        height: 26px;\n        line-height: 26px;\n        text-align: center;\n        border-radius: 2px;\n        cursor: pointer;\n      }\n      .page-size-continer:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content {\n        position: absolute;\n        bottom: 24px;\n        left: 0;\n        padding: 0;\n        background: #fff;\n        border-radius: 4px;\n        box-shadow: 0 0 15px 1px rgba(113, 106, 202, 0.2);\n        z-index: 11;\n      }\n      .page-size-continer .page-size-content li {\n        width: 100%;\n        padding: 4px 0;\n      }\n      .page-size-continer .page-size-content li:hover {\n        background-color: rgba(158, 158, 158, 0.2);\n      }\n      .page-size-continer .page-size-content .page-size-column-active {\n        color: #409eff;\n      }\n      input[type='number']::-webkit-inner-spin-button,\n      input[type='number']::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n      }\n      .lz-jump-page {\n        display: inline-block;\n        width: 50px;\n        border-radius: 2px;\n        margin-right: 6px;\n        padding-left: 4px;\n        border: solid 1px #ebedf2;\n      }\n      input[type='number'] {\n        -moz-appearance: textfield;\n      }\n    `\n  ]\n})\nexport class DatatablePagerComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() pageSizes: any[];\n  @Input() datatable: any;\n  @Input() linage?: Boolean = true;\n  @Input() displayBothEnds?: Boolean = true;\n  @Input() pageNumber?: Boolean = true;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n  get page(): number {\n    return this._page || 1;\n  }\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n  @Output() pageChange: EventEmitter<any> = new EventEmitter();\n\n  currentOffset: number;\n  prveOffset: number;\n  inputEvent: Subscription;\n\n  @ViewChild('customerInput')\n  customerInput: ElementRef;\n\n  ngOnInit() { }\n\n  ngAfterViewInit() {\n    this.inputEvent = fromEvent(this.customerInput.nativeElement, 'input')\n      .pipe(debounceTime(500))\n      .subscribe((event: any) => {\n        let value: number;\n        if (event.target.value) {\n          value = Number(event.target.value);\n          if (value < 1) {\n            value = 1;\n            this.customerInput.nativeElement.value = 1;\n          }\n          this.selectPage(Math.round(value));\n        }\n      });\n  }\n\n  // tslint:disable-next-line:member-ordering\n  _page = 1;\n  // tslint:disable-next-line:member-ordering\n  _count = 0;\n  // tslint:disable-next-line:member-ordering\n  _size = 0;\n  // tslint:disable-next-line:member-ordering\n  pages: any;\n  // tslint:disable-next-line:member-ordering\n  pageSizeColumn: boolean = true;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number, changePageSize?: any): void {\n    if (changePageSize) {\n      if (page > 0 && page <= this.totalPages) {\n        this.page = page;\n        this.change.emit({ page });\n      }\n    } else {\n      if (page > 0 && page <= this.totalPages && page !== this.page) {\n        this.page = page;\n        this.change.emit({ page });\n      }\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = (Math.ceil(page / maxSize) - 1) * maxSize + 1;\n      endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({ number: num, text: num });\n    }\n\n    return pages;\n  }\n\n  valChange(event: any) {\n    if (event === null) {\n      this.customerInput.nativeElement.value = '';\n    }\n    if (event || event === 0) {\n      this.currentOffset = Number(event) > this.totalPages ? this.totalPages : Number(event);\n      this.customerInput.nativeElement.value = event === 0 ? 1 : event > this.totalPages ? this.totalPages : event;\n    }\n  }\n\n  blurHandel() {\n    if ((this.currentOffset === 0 || this.customerInput.nativeElement.value === '')) {\n      this.customerInput.nativeElement.value = 1;\n    } else if (this.currentOffset !== undefined) {\n      this.customerInput.nativeElement.value = this.currentOffset;\n    } else if (this.currentOffset === undefined) {\n      if (this.prveOffset !== undefined) {\n        this.customerInput.nativeElement.value = this.prveOffset;\n      }\n    }\n\n    this.page = Number(this.customerInput.nativeElement.value);\n    this.datatable.offset = this.page - 1;\n  }\n\n  changePageSize(pageSize: number) {\n    this.datatable.limit = pageSize;\n    this.selectPage(1, 'changePageSize');\n  }\n\n  keyDownHandel(event: any) {\n    if (this.customerInput.nativeElement.value) {\n      this.prveOffset = Number(this.customerInput.nativeElement.value);\n    }\n    if ((event.keyCode < 48 && event.keyCode !== 8) || (event.keyCode > 57 && event.keyCode < 96) || (event.keyCode > 105)) {\n      return false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.inputEvent.unsubscribe();\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'ngx-datatable-footer',\n  template: `\n  <ng-template ngx-datatable-footer-template let-rowCount=\"rowCount\" let-pageSize=\"pageSize\" let-selectedCount=\"selectedCount\"\n    let-curPage=\"curPage\" let-offset=\"offset\">\n    <div class=\"page-count\" *ngIf=\"rowCount>0&&totalNumber\" [innerHTML]=\"'å½å '+((offset||0) * pageSize + 1)+' - '+((offset+1) * pageSize > rowCount?rowCount : ((offset+1)||1) * pageSize)+' / '+rowCount+' è¡'\">\n    </div>\n    <app-datatable-pager *ngIf=\"rowCount>0\" [linage]=\"linage\" [displayBothEnds]=\"displayBothEnds\" [pageNumber]=\"pageNumber\" [pageSizes]=\"pageSizes\" [pagerPreviousIcon]=\"pagerPreviousIcon\" [pagerNextIcon]=\"pagerNextIcon\"\n      [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\" [pagerRightArrowIcon]=\"pagerRightArrowIcon\" [page]=\"curPage\" [size]=\"pageSize\"\n      [datatable]=\"datatable\" [count]=\"rowCount\" (change)=\"datatable.onFooterPage($event);emitPage($event)\" (pageChange)=\"emitPage($event)\" class=\"datatable-pager\">\n    </app-datatable-pager>\n  </ng-template>`\n})\nexport class DatatableFooterComponent implements OnInit {\n  @ViewChild(TemplateRef)\n  set template(val: TemplateRef<any>) {\n    this._template = val;\n    this.update();\n  }\n  get template(): TemplateRef<any> {\n    return this._template;\n  }\n\n  @Input()\n  set datatable(val: any) {\n    this._datatable = val;\n    this.update();\n  }\n  get datatable(): any {\n    return this._datatable;\n  }\n\n  @Input() pagerLeftArrowIcon?: String = 'fa fa-angle-left';\n  @Input() pagerRightArrowIcon?: String = 'fa fa-angle-right';\n  @Input() pagerPreviousIcon?: String = 'fa fa-step-backward';\n  @Input() pagerNextIcon?: String = 'fa fa-step-forward';\n  @Input() pageSizes?: any[] = [10, 20, 30, 40, 50];\n  @Input() totalNumber?: Boolean = true;\n  @Input() linage?: Boolean = true;\n  @Input() displayBothEnds?: Boolean = true;\n  @Input() pageNumber?: Boolean = true;\n  @Input() page?: number;\n\n  @Output() pageChange = new EventEmitter();\n\n  private _template: any;\n  private _datatable: any;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  update(): void {\n    if (\n      this._datatable &&\n      this._template &&\n      (!this._datatable.footer || !this._datatable.footer.template)\n    ) {\n      if (this._datatable.footer) {\n        this._datatable.footer.template = this._template;\n      } else {\n        this._datatable.footer = {\n          footerHeight: this._datatable.footerHeight,\n          totalMessage: this._datatable.messages.totalMessage,\n          selectedMessage: this._datatable.messages.selectedMessage,\n          pagerLeftArrowIcon: '',\n          pagerRightArrowIcon: '',\n          pagerPreviousIcon: '',\n          pagerNextIcon: '',\n          template: this._template\n        };\n      }\n    }\n  }\n\n  emitPage(page: number) {\n    this.pageChange.emit(page);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { DatatablePagerComponent } from './datatable-pager/datatable-pager.component';\nimport { DatatableFooterComponent } from './datatable-footer/datatable-footer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    DatatablePagerComponent,\n    DatatableFooterComponent\n  ],\n  exports: [\n    DatatablePagerComponent,\n    DatatableFooterComponent\n  ]\n})\nexport class NgxDatatableFooterModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxDatatableFooterModule\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}