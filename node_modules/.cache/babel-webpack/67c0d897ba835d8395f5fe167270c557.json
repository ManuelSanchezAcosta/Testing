{"ast":null,"code":"'use strict';\n\nvar typeFunc = require('type-func');\n\nfunction createPointCB(object, options) {\n  // A persistent object (as opposed to returned object) is used to save memory\n  // This is good to prevent layout thrashing, or for games, and such\n  // NOTE\n  // This uses IE fixes which should be OK to remove some day. :)\n  // Some speed will be gained by removal of these.\n  // pointCB should be saved in a variable on return\n  // This allows the usage of element.removeEventListener\n  options = options || {};\n  var allowUpdate = typeFunc.boolean(options.allowUpdate, true);\n  /*if(typeof options.allowUpdate === 'function'){\n      allowUpdate = options.allowUpdate;\n  }else{\n      allowUpdate = function(){return true;};\n  }*/\n\n  return function pointCB(event) {\n    event = event || window.event; // IE-ism\n\n    object.target = event.target || event.srcElement || event.originalTarget;\n    object.element = this;\n    object.type = event.type;\n\n    if (!allowUpdate(event)) {\n      return;\n    } // Support touch\n    // http://www.creativebloq.com/javascript/make-your-site-work-touch-devices-51411644\n\n\n    if (event.targetTouches) {\n      object.x = event.targetTouches[0].clientX;\n      object.y = event.targetTouches[0].clientY;\n      object.pageX = event.targetTouches[0].pageX;\n      object.pageY = event.targetTouches[0].pageY;\n      object.screenX = event.targetTouches[0].screenX;\n      object.screenY = event.targetTouches[0].screenY;\n    } else {\n      // If pageX/Y aren't available and clientX/Y are,\n      // calculate pageX/Y - logic taken from jQuery.\n      // (This is to support old IE)\n      // NOTE Hopefully this can be removed soon.\n      if (event.pageX === null && event.clientX !== null) {\n        var eventDoc = event.target && event.target.ownerDocument || document;\n        var doc = eventDoc.documentElement;\n        var body = eventDoc.body;\n        object.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        object.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      } else {\n        object.pageX = event.pageX;\n        object.pageY = event.pageY;\n      } // pageX, and pageY change with page scroll\n      // so we're not going to use those for x, and y.\n      // NOTE Most browsers also alias clientX/Y with x/y\n      // so that's something to consider down the road.\n\n\n      object.x = event.clientX;\n      object.y = event.clientY;\n      object.screenX = event.screenX;\n      object.screenY = event.screenY;\n    }\n\n    object.clientX = object.x;\n    object.clientY = object.y;\n  }; //NOTE Remember accessibility, Aria roles, and labels.\n}\n/*\ngit remote add origin https://github.com/hollowdoor/create_point_cb.git\ngit push -u origin master\n*/\n\n\nmodule.exports = createPointCB;","map":{"version":3,"sources":["../src/index.js"],"names":["options","allowUpdate","boolean","event","window","eventDoc","doc","body","object"],"mappings":";;;;AAEe,SAAA,aAAA,CAAA,MAAA,EAAA,OAAA,EAAuC;;;;;;;;YAYxCA,OAAAA,IAAV,E;MAEIC,WAAAA,GAAcC,QAAAA,CAAAA,OAAAA,CAAQF,OAAAA,CAARE,WAAAA,EAAlB,IAAkBA,C;;;;;;;SAQX,SAAA,OAAA,CAAA,KAAA,EAAuB;YAElBC,KAAAA,IAASC,MAAAA,CAFS,K,CAAA,CAAA;;WAG1B,M,GAAgBD,KAAAA,CAAAA,MAAAA,IAAgBA,KAAAA,CAAhBA,UAAAA,IAAoCA,KAAAA,CAApD,c;WACA,O,GAAA,I;WACA,I,GAAcA,KAAAA,CAAd,I;;QAEG,CAACF,WAAAA,CAAJ,KAAIA,C,EAAmB;;KAPG,C;;;;QAcvBE,KAAAA,CAAH,a,EAAuB;aACnB,C,GAAWA,KAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAX,O;aACA,C,GAAWA,KAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAX,O;aACA,K,GAAeA,KAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAf,K;aACA,K,GAAeA,KAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAf,K;aACA,O,GAAiBA,KAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAjB,O;aACA,O,GAAiBA,KAAAA,CAAAA,aAAAA,CAAAA,CAAAA,EAAjB,O;AANJ,K,MAOK;;;;;UAOGA,KAAAA,CAAAA,KAAAA,KAAAA,IAAAA,IAAwBA,KAAAA,CAAAA,OAAAA,KAA5B,I,EAAoD;YAC5CE,QAAAA,GAAYF,KAAAA,CAAAA,MAAAA,IAAgBA,KAAAA,CAAAA,MAAAA,CAAjB,aAACA,IAAhB,Q;YACIG,GAAAA,GAAMD,QAAAA,CAAV,e;YACIE,IAAAA,GAAOF,QAAAA,CAAX,I;eAEA,K,GAAeF,KAAAA,CAAAA,OAAAA,IACZG,GAAAA,IAAOA,GAAAA,CAAPA,UAAAA,IAAyBC,IAAAA,IAAQA,IAAAA,CAAjCD,UAAAA,IADYH,CAAAA,KAEZG,GAAAA,IAAOA,GAAAA,CAAPA,UAAAA,IAAyBC,IAAAA,IAAQA,IAAAA,CAAjCD,UAAAA,IAFH,CAAeH,C;eAGf,K,GAAeA,KAAAA,CAAAA,OAAAA,IACZG,GAAAA,IAAOA,GAAAA,CAAPA,SAAAA,IAAyBC,IAAAA,IAAQA,IAAAA,CAAjCD,SAAAA,IADYH,CAAAA,KAEZG,GAAAA,IAAOA,GAAAA,CAAPA,SAAAA,IAAyBC,IAAAA,IAAQA,IAAAA,CAAjCD,SAAAA,IAFH,CAAeH,C;AARnB,O,MAWK;eACD,K,GAAeA,KAAAA,CAAf,K;eACA,K,GAAeA,KAAAA,CAAf,K;OApBH,C;;;;;;aA4BD,C,GAAWA,KAAAA,CAAX,O;aACA,C,GAAWA,KAAAA,CAAX,O;aAEA,O,GAAiBA,KAAAA,CAAjB,O;aACA,O,GAAiBA,KAAAA,CAAjB,O;;;WAGJ,O,GAAiBK,MAAAA,CAAjB,C;WACA,O,GAAiBA,MAAAA,CAAjB,C;AAzDJ,G,CAtBkD,C","sourcesContent":["import {boolean} from 'type-func';\n\nexport default function createPointCB(object, options){\n\n    // A persistent object (as opposed to returned object) is used to save memory\n    // This is good to prevent layout thrashing, or for games, and such\n\n    // NOTE\n    // This uses IE fixes which should be OK to remove some day. :)\n    // Some speed will be gained by removal of these.\n\n    // pointCB should be saved in a variable on return\n    // This allows the usage of element.removeEventListener\n\n    options = options || {};\n\n    var allowUpdate = boolean(options.allowUpdate, true);\n\n    /*if(typeof options.allowUpdate === 'function'){\n        allowUpdate = options.allowUpdate;\n    }else{\n        allowUpdate = function(){return true;};\n    }*/\n\n    return function pointCB(event){\n\n        event = event || window.event; // IE-ism\n        object.target = event.target || event.srcElement || event.originalTarget;\n        object.element = this;\n        object.type = event.type;\n\n        if(!allowUpdate(event)){\n            return;\n        }\n\n        // Support touch\n        // http://www.creativebloq.com/javascript/make-your-site-work-touch-devices-51411644\n\n        if(event.targetTouches){\n            object.x = event.targetTouches[0].clientX;\n            object.y = event.targetTouches[0].clientY;\n            object.pageX = event.targetTouches[0].pageX;\n            object.pageY = event.targetTouches[0].pageY;\n            object.screenX = event.targetTouches[0].screenX;\n            object.screenY = event.targetTouches[0].screenY;\n        }else{\n\n            // If pageX/Y aren't available and clientX/Y are,\n            // calculate pageX/Y - logic taken from jQuery.\n            // (This is to support old IE)\n            // NOTE Hopefully this can be removed soon.\n\n            if (event.pageX === null && event.clientX !== null) {\n                var eventDoc = (event.target && event.target.ownerDocument) || document;\n                var doc = eventDoc.documentElement;\n                var body = eventDoc.body;\n\n                object.pageX = event.clientX +\n                  (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\n                  (doc && doc.clientLeft || body && body.clientLeft || 0);\n                object.pageY = event.clientY +\n                  (doc && doc.scrollTop  || body && body.scrollTop  || 0) -\n                  (doc && doc.clientTop  || body && body.clientTop  || 0 );\n            }else{\n                object.pageX = event.pageX;\n                object.pageY = event.pageY;\n            }\n\n            // pageX, and pageY change with page scroll\n            // so we're not going to use those for x, and y.\n            // NOTE Most browsers also alias clientX/Y with x/y\n            // so that's something to consider down the road.\n\n            object.x = event.clientX;\n            object.y = event.clientY;\n\n            object.screenX = event.screenX;\n            object.screenY = event.screenY;\n        }\n\n        object.clientX = object.x;\n        object.clientY = object.y;\n\n    };\n\n    //NOTE Remember accessibility, Aria roles, and labels.\n};\n\n/*\ngit remote add origin https://github.com/hollowdoor/create_point_cb.git\ngit push -u origin master\n*/\n"]},"metadata":{},"sourceType":"script"}