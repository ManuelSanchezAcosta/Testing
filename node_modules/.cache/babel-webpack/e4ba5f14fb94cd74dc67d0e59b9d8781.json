{"ast":null,"code":"import _classCallCheck from \"E:/Source/Sistenet/Testing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/Source/Sistenet/Testing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nimport * as ɵngcc2 from '@ngx-loading-bar/core';\n\nvar LoadingBarRouterModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} router\n   * @param {?} loadingBar\n   */\n  function LoadingBarRouterModule(router, loadingBar) {\n    var _this = this;\n\n    _classCallCheck(this, LoadingBarRouterModule);\n\n    router.events.subscribe(function (event) {\n      /** @type {?} */\n      var state = _this.getCurrentNavigationState(router);\n\n      if (state && state.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        loadingBar.start();\n      }\n\n      if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n        loadingBar.complete();\n      }\n    });\n  }\n  /**\n   * @private\n   * @param {?} router\n   * @return {?}\n   */\n\n\n  _createClass(LoadingBarRouterModule, [{\n    key: \"getCurrentNavigationState\",\n    value: function getCurrentNavigationState(router) {\n      // `getCurrentNavigation` only available in angular `7.2`\n\n      /** @type {?} */\n      var currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n\n      if (currentNavigation && currentNavigation.extras) {\n        return currentNavigation.extras.state;\n      }\n\n      return {};\n    }\n  }]);\n\n  return LoadingBarRouterModule;\n}();\n\nLoadingBarRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarRouterModule\n});\nLoadingBarRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function LoadingBarRouterModule_Factory(t) {\n    return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService));\n  },\n  imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule]\n});\n/** @nocollapse */\n\nLoadingBarRouterModule.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: LoadingBarService\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, {\n    imports: function imports() {\n      return [RouterModule, LoadingBarModule];\n    },\n    exports: function exports() {\n      return [RouterModule, LoadingBarModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule, LoadingBarModule],\n      exports: [RouterModule, LoadingBarModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Router\n    }, {\n      type: ɵngcc2.LoadingBarService\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { LoadingBarRouterModule };","map":{"version":3,"sources":["@ngx-loading-bar/router/router.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;IAca,sB;AACb;AAAQ;AAAyB;AAA6B;AAA5D,kCAAY,MAAZ,EAA4B,UAA5B,EAAyD;AAAA;;AAAA;;AACvD,IAAA,MAAM,CAAC,MAAP,CAAc,SAAd,CAAwB,UAAA,KAAK,EAAA;AACjC;AAA6B,UAAjB,KAAK,GAAG,KAAI,CAAC,yBAAL,CAA+B,MAA/B,CAAS;;AACvB,UAAI,KAAK,IAAI,KAAK,CAAC,gBAAnB,EAAqC;AACnC;AACD;;AAED,UAAI,KAAK,YAAY,eAArB,EAAsC;AACpC,QAAA,UAAU,CAAC,KAAX;AACD;;AAED,UAAK,KAAK,YAAY,eAAjB,IAAoC,KAAK,YAAY,aAArD,IAAsE,KAAK,YAAY,gBAA5F,EAA+G;AAC7G,QAAA,UAAU,CAAC,QAAX;AACD;AACF,KAbD;AAcD;AACH;AACO;AAAgB;AAAyB;AAChC;;;;;8CADoB,M,EAAW;AAC/C;;AACI;AAAyB,UAAnB,iBAAiB,GAAG,MAAM,CAAC,oBAAP,IAA+B,MAAM,CAAC,oBAAP,EAAhC;;AACzB,UAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAA3C,EAAmD;AACjD,eAAO,iBAAiB,CAAC,MAAlB,CAAyB,KAAhC;AACD;;AAED,aAAO,EAAP;AACD;;;;;;qCApCF,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACQ,sBAAE,CAAA,IAAF,GACL,MAAA,CAAA,gBAAA,CAAY;AAAA,EAAA,OACZ,EAAA,SAAA,8BAAA,CACD,CADC,EACD;AAAA,WACD,KAAO,CAAE,IAAA,sBAAT,EACE,MAAY,CAAA,QAAZ,CAAY,MAAA,CAAA,MAAZ,CADF,EAEE,MAAA,CAAA,QAAA,CAAgB,MAAA,CAAA,iBAAhB,CAFF,CADC;AAIA,GANa;AAOf,EAAA,OAAA,EAAA,CAAA,C,YAAA,E,gBAAA,CAAA,E,YAAA,EACI,gBADJ;AAPe,CAAZ,CADK;AASH;;AAAmB,sBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACU;AAAA,IAAA,IAAA,EAdZ;AAcY,GADV,EAbQ;AAAA,IAAA,IAAA,EACN;AADM,GAaR,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAZwB,C;AAAE;AAAI;AAE5C;AAOA;;AAAK;AAAI;AAGI;AAEA;;;AAAK,SAAA,sBAAA","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n  exports: [\n    RouterModule,\n    LoadingBarModule,\n  ],\n})\nexport class LoadingBarRouterModule {\n  constructor(router: Router, loadingBar: LoadingBarService) {\n    router.events.subscribe(event => {\n      const state = this.getCurrentNavigationState(router);\n      if (state && state.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        loadingBar.start();\n      }\n\n      if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {\n        loadingBar.complete();\n      }\n    });\n  }\n\n  private getCurrentNavigationState(router: any) {\n    // `getCurrentNavigation` only available in angular `7.2`\n    const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n    if (currentNavigation && currentNavigation.extras) {\n      return currentNavigation.extras.state;\n    }\n\n    return {};\n  }\n}\n"]},"metadata":{},"sourceType":"module"}