{"ast":null,"code":"'use strict';\n\nvar objectCreate = void 0;\n\nif (typeof Object.create != 'function') {\n  objectCreate = function (undefined) {\n    var Temp = function Temp() {};\n\n    return function (prototype, propertiesObject) {\n      if (prototype !== Object(prototype) && prototype !== null) {\n        throw TypeError('Argument must be an object, or null');\n      }\n\n      Temp.prototype = prototype || {};\n      var result = new Temp();\n      Temp.prototype = null;\n\n      if (propertiesObject !== undefined) {\n        Object.defineProperties(result, propertiesObject);\n      } // to imitate the case of Object.create(null)\n\n\n      if (prototype === null) {\n        result.__proto__ = null;\n      }\n\n      return result;\n    };\n  }();\n} else {\n  objectCreate = Object.create;\n}\n\nvar objectCreate$1 = objectCreate;\nvar mouseEventProps = ['altKey', 'button', 'buttons', 'clientX', 'clientY', 'ctrlKey', 'metaKey', 'movementX', 'movementY', 'offsetX', 'offsetY', 'pageX', 'pageY', 'region', 'relatedTarget', 'screenX', 'screenY', 'shiftKey', 'which', 'x', 'y'];\n\nfunction createDispatcher(element) {\n  var defaultSettings = {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    ctrlKey: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    button: 0,\n    buttons: 1,\n    relatedTarget: null,\n    region: null\n  };\n\n  if (element !== undefined) {\n    element.addEventListener('mousemove', onMove);\n  }\n\n  function onMove(e) {\n    for (var i = 0; i < mouseEventProps.length; i++) {\n      defaultSettings[mouseEventProps[i]] = e[mouseEventProps[i]];\n    }\n  }\n\n  var dispatch = function () {\n    if (MouseEvent) {\n      return function m1(element, initMove, data) {\n        var evt = new MouseEvent('mousemove', createMoveInit(defaultSettings, initMove)); //evt.dispatched = 'mousemove';\n\n        setSpecial(evt, data);\n        return element.dispatchEvent(evt);\n      };\n    } else if (typeof document.createEvent === 'function') {\n      return function m2(element, initMove, data) {\n        var settings = createMoveInit(defaultSettings, initMove);\n        var evt = document.createEvent('MouseEvents');\n        evt.initMouseEvent(\"mousemove\", true, //can bubble\n        true, //cancelable\n        window, //view\n        0, //detail\n        settings.screenX, //0, //screenX\n        settings.screenY, //0, //screenY\n        settings.clientX, //80, //clientX\n        settings.clientY, //20, //clientY\n        settings.ctrlKey, //false, //ctrlKey\n        settings.altKey, //false, //altKey\n        settings.shiftKey, //false, //shiftKey\n        settings.metaKey, //false, //metaKey\n        settings.button, //0, //button\n        settings.relatedTarget //null //relatedTarget\n        ); //evt.dispatched = 'mousemove';\n\n        setSpecial(evt, data);\n        return element.dispatchEvent(evt);\n      };\n    } else if (typeof document.createEventObject === 'function') {\n      return function m3(element, initMove, data) {\n        var evt = document.createEventObject();\n        var settings = createMoveInit(defaultSettings, initMove);\n\n        for (var name in settings) {\n          evt[name] = settings[name];\n        } //evt.dispatched = 'mousemove';\n\n\n        setSpecial(evt, data);\n        return element.dispatchEvent(evt);\n      };\n    }\n  }();\n\n  function destroy() {\n    if (element) element.removeEventListener('mousemove', onMove, false);\n    defaultSettings = null;\n  }\n\n  return {\n    destroy: destroy,\n    dispatch: dispatch\n  };\n}\n\nfunction createMoveInit(defaultSettings, initMove) {\n  initMove = initMove || {};\n  var settings = objectCreate$1(defaultSettings);\n\n  for (var i = 0; i < mouseEventProps.length; i++) {\n    if (initMove[mouseEventProps[i]] !== undefined) settings[mouseEventProps[i]] = initMove[mouseEventProps[i]];\n  }\n\n  return settings;\n}\n\nfunction setSpecial(e, data) {\n  console.log('data ', data);\n  e.data = data || {};\n  e.dispatched = 'mousemove';\n}\n/*\nhttp://marcgrabanski.com/simulating-mouse-click-events-in-javascript/\n*/\n\n\nmodule.exports = createDispatcher;","map":null,"metadata":{},"sourceType":"script"}