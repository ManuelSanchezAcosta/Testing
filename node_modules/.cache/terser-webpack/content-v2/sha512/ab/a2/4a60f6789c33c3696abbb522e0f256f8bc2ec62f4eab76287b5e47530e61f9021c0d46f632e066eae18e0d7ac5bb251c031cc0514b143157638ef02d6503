{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{OwLc:function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return o});var i=n(\"8Y7J\"),o=function(){function t(t){this.el=t}return t.prototype.ngAfterViewInit=function(){var t=this;setTimeout(function(){t.matchHeights(t.el.nativeElement,t.matchHeight)},700)},t.prototype.matchHeights=function(t,e){if(t){var n=t.getElementsByClassName(e);if(n){Array.from(n).forEach(function(t){t.style.height=\"initial\"});var i=Array.from(n).map(function(t){return t.getBoundingClientRect().height}).reduce(function(t,e){return e>t?e:t},0);window.innerWidth>1200?Array.from(n).forEach(function(t){return t.style.height=i+\"px\"}):window.innerWidth<1199&&Array.from(n).forEach(function(t){return t.style.height=\"initial\"})}}},t.prototype.onResize=function(){this.matchHeights(this.el.nativeElement,this.matchHeight)},t.\\u0275fac=function(e){return new(e||t)(i.Sb(i.m))},t.\\u0275dir=i.Nb({type:t,selectors:[[\"\",\"matchHeight\",\"\"]],hostBindings:function(t,e){1&t&&i.ic(\"resize\",function(){return e.onResize()},!1,i.Ic)},inputs:{matchHeight:\"matchHeight\"}}),t}()},sJBm:function(t,e,n){var i,o,a;a=this,i=[n(\"uki+\")],void 0===(o=(function(t){return a.returnExportsGlobal=function(t){return function(t,e,n){\"use strict\";var i={currency:void 0,currencyFormatCallback:void 0,tooltipOffset:{x:0,y:-20},anchorToPoint:!1,appendToBody:!1,class:void 0,pointClass:\"ct-point\"};function o(t){var e=new RegExp(\"tooltip-show\\\\s*\",\"gi\");t.className=t.className.replace(e,\"\").trim()}function a(t,e){return(\" \"+t.getAttribute(\"class\")+\" \").indexOf(\" \"+e+\" \")>-1}n.plugins=n.plugins||{},n.plugins.tooltip=function(r){return r=n.extend({},i,r),function(i){var c=r.pointClass;i instanceof n.Bar?c=\"ct-bar\":i instanceof n.Pie&&(c=i.options.donut?\"ct-slice-donut\":\"ct-slice-pie\");var s=i.container,l=s.querySelector(\".chartist-tooltip\");l||((l=e.createElement(\"div\")).className=r.class?\"chartist-tooltip \"+r.class:\"chartist-tooltip\",r.appendToBody?e.body.appendChild(l):s.appendChild(l));var u=l.offsetHeight,f=l.offsetWidth;function p(t,e,n){s.addEventListener(t,function(t){e&&!a(t.target,e)||n(t)})}function h(e){var n,i,o=-(f=f||l.offsetWidth)/2+r.tooltipOffset.x,a=-(u=u||l.offsetHeight)+r.tooltipOffset.y;if(r.appendToBody)l.style.top=e.pageY+a+\"px\",l.style.left=e.pageX+o+\"px\";else{var c=s.getBoundingClientRect(),p=e.pageX-c.left-t.pageXOffset,h=e.pageY-c.top-t.pageYOffset;!0===r.anchorToPoint&&e.target.x2&&e.target.y2&&(n=parseInt(e.target.x2.baseVal.value),i=parseInt(e.target.y2.baseVal.value)),l.style.top=(i||h)+a+\"px\",l.style.left=(n||p)+o+\"px\"}}o(l),p(\"mouseover\",c,function(t){var o,c=t.target,s=\"\",p=(i instanceof n.Pie?c:c.parentNode)?c.parentNode.getAttribute(\"ct:meta\")||c.parentNode.getAttribute(\"ct:series-name\"):\"\",g=c.getAttribute(\"ct:meta\")||p||\"\",d=!!g,m=c.getAttribute(\"ct:value\");if(r.transformTooltipTextFnc&&\"function\"==typeof r.transformTooltipTextFnc&&(m=r.transformTooltipTextFnc(m)),r.tooltipFnc&&\"function\"==typeof r.tooltipFnc)s=r.tooltipFnc(g,m);else{if(r.metaIsHTML){var y=e.createElement(\"textarea\");y.innerHTML=g,g=y.value}if(g='<span class=\"chartist-tooltip-meta\">'+g+\"</span>\",d)s+=g+\"<br>\";else if(i instanceof n.Pie){var v=function(t,e){do{t=t.nextSibling}while(t&&!a(t,\"ct-label\"));return t}(c);v&&(s+=((o=v).innerText||o.textContent)+\"<br>\")}m&&(r.currency&&(m=null!=r.currencyFormatCallback?r.currencyFormatCallback(m,r):r.currency+m.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g,\"$1,\")),s+=m='<span class=\"chartist-tooltip-value\">'+m+\"</span>\")}s&&(l.innerHTML=s,h(t),function(t){a(t,\"tooltip-show\")||(t.className=t.className+\" tooltip-show\")}(l),u=l.offsetHeight,f=l.offsetWidth)}),p(\"mouseout\",c,function(){o(l)}),p(\"mousemove\",null,function(t){!1===r.anchorToPoint&&h(t)})}}}(window,document,t),t.plugins.tooltips}(t)}).apply(e,i))||(t.exports=o)}}]);","name":"common.603a35e0db8f25dc5b91.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[0],{\n\n/***/ \"OwLc\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MatchHeightDirective; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"8Y7J\");\n\r\n\r\nvar MatchHeightDirective = /** @class */ /*@__PURE__*/ (function () {\r\n    function MatchHeightDirective(el) {\r\n        this.el = el;\r\n    }\r\n    MatchHeightDirective.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        // call our matchHeight function here\r\n        setTimeout(function () {\r\n            _this.matchHeights(_this.el.nativeElement, _this.matchHeight);\r\n        }, 700);\r\n    };\r\n    MatchHeightDirective.prototype.matchHeights = function (parent, className) {\r\n        if (!parent) {\r\n            return;\r\n        }\r\n        // step 1: find all the child elements with the selected class name\r\n        var children = parent.getElementsByClassName(className);\r\n        if (!children) {\r\n            return;\r\n        }\r\n        // Match hight - fix --- comment below code\r\n        Array.from(children).forEach(function (x) {\r\n            x.style.height = 'initial';\r\n        });\r\n        // step 2a: get all the child elements heights\r\n        var itemHeights = Array.from(children).map(function (x) { return x.getBoundingClientRect().height; });\r\n        // step 2b: find out the tallest\r\n        var maxHeight = itemHeights.reduce(function (prev, curr) {\r\n            return curr > prev ? curr : prev;\r\n        }, 0);\r\n        // step 3: update all the child elements to the tallest height\r\n        if (window.innerWidth > 1200) {\r\n            Array.from(children).forEach(function (x) { return (x.style.height = maxHeight + \"px\"); });\r\n        }\r\n        else if (window.innerWidth < 1199) {\r\n            Array.from(children).forEach(function (x) { return (x.style.height = \"initial\"); });\r\n        }\r\n    };\r\n    MatchHeightDirective.prototype.onResize = function () {\r\n        // call our matchHeight function here\r\n        this.matchHeights(this.el.nativeElement, this.matchHeight);\r\n    };\r\n    MatchHeightDirective.ɵfac = function MatchHeightDirective_Factory(t) { return new (t || MatchHeightDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Sb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"])); };\r\n    MatchHeightDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Nb\"]({ type: MatchHeightDirective, selectors: [[\"\", \"matchHeight\", \"\"]], hostBindings: function MatchHeightDirective_HostBindings(rf, ctx) {\r\n            if (rf & 1) {\r\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"ic\"](\"resize\", function MatchHeightDirective_resize_HostBindingHandler() { return ctx.onResize(); }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵresolveWindow */ \"Ic\"]);\r\n            }\r\n        }, inputs: { matchHeight: \"matchHeight\" } });\r\n    return MatchHeightDirective;\r\n}());\r\n\r\n\n\n/***/ }),\n\n/***/ \"sJBm\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(\"uki+\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Chartist) {\n      return root.returnExportsGlobal = factory(Chartist);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function (Chartist) {\n  /**\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\n   *\n   */\n\n  /* global Chartist */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: undefined,\n      currencyFormatCallback: undefined,\n      tooltipOffset: {\n        x: 0,\n        y: -20\n      },\n      anchorToPoint: false,\n      appendToBody: false,\n      class: undefined,\n      pointClass: 'ct-point'\n    };\n    Chartist.plugins = Chartist.plugins || {};\n\n    Chartist.plugins.tooltip = function (options) {\n      options = Chartist.extend({}, defaultOptions, options);\n      return function tooltip(chart) {\n        var tooltipSelector = options.pointClass;\n\n        if (chart instanceof Chartist.Bar) {\n          tooltipSelector = 'ct-bar';\n        } else if (chart instanceof Chartist.Pie) {\n          // Added support for donut graph\n          if (chart.options.donut) {\n            tooltipSelector = 'ct-slice-donut';\n          } else {\n            tooltipSelector = 'ct-slice-pie';\n          }\n        }\n\n        var $chart = chart.container;\n        var $toolTip = $chart.querySelector('.chartist-tooltip');\n\n        if (!$toolTip) {\n          $toolTip = document.createElement('div');\n          $toolTip.className = !options.class ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n\n          if (!options.appendToBody) {\n            $chart.appendChild($toolTip);\n          } else {\n            document.body.appendChild($toolTip);\n          }\n        }\n\n        var height = $toolTip.offsetHeight;\n        var width = $toolTip.offsetWidth;\n        hide($toolTip);\n\n        function on(event, selector, callback) {\n          $chart.addEventListener(event, function (e) {\n            if (!selector || hasClass(e.target, selector)) callback(e);\n          });\n        }\n\n        on('mouseover', tooltipSelector, function (event) {\n          var $point = event.target;\n          var tooltipText = '';\n          var isPieChart = chart instanceof Chartist.Pie ? $point : $point.parentNode;\n          var seriesName = isPieChart ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n          var meta = $point.getAttribute('ct:meta') || seriesName || '';\n          var hasMeta = !!meta;\n          var value = $point.getAttribute('ct:value');\n\n          if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n            value = options.transformTooltipTextFnc(value);\n          }\n\n          if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n            tooltipText = options.tooltipFnc(meta, value);\n          } else {\n            if (options.metaIsHTML) {\n              var txt = document.createElement('textarea');\n              txt.innerHTML = meta;\n              meta = txt.value;\n            }\n\n            meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n            if (hasMeta) {\n              tooltipText += meta + '<br>';\n            } else {\n              // For Pie Charts also take the labels into account\n              // Could add support for more charts here as well!\n              if (chart instanceof Chartist.Pie) {\n                var label = next($point, 'ct-label');\n\n                if (label) {\n                  tooltipText += text(label) + '<br>';\n                }\n              }\n            }\n\n            if (value) {\n              if (options.currency) {\n                if (options.currencyFormatCallback != undefined) {\n                  value = options.currencyFormatCallback(value, options);\n                } else {\n                  value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n                }\n              }\n\n              value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n              tooltipText += value;\n            }\n          }\n\n          if (tooltipText) {\n            $toolTip.innerHTML = tooltipText;\n            setPosition(event);\n            show($toolTip); // Remember height and width to avoid wrong position in IE\n\n            height = $toolTip.offsetHeight;\n            width = $toolTip.offsetWidth;\n          }\n        });\n        on('mouseout', tooltipSelector, function () {\n          hide($toolTip);\n        });\n        on('mousemove', null, function (event) {\n          if (false === options.anchorToPoint) setPosition(event);\n        });\n\n        function setPosition(event) {\n          height = height || $toolTip.offsetHeight;\n          width = width || $toolTip.offsetWidth;\n          var offsetX = -width / 2 + options.tooltipOffset.x;\n          var offsetY = -height + options.tooltipOffset.y;\n          var anchorX, anchorY;\n\n          if (!options.appendToBody) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.pageX - box.left - window.pageXOffset;\n            var top = event.pageY - box.top - window.pageYOffset;\n\n            if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n              anchorX = parseInt(event.target.x2.baseVal.value);\n              anchorY = parseInt(event.target.y2.baseVal.value);\n            }\n\n            $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n            $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n          } else {\n            $toolTip.style.top = event.pageY + offsetY + 'px';\n            $toolTip.style.left = event.pageX + offsetX + 'px';\n          }\n        }\n      };\n    };\n\n    function show(element) {\n      if (!hasClass(element, 'tooltip-show')) {\n        element.className = element.className + ' tooltip-show';\n      }\n    }\n\n    function hide(element) {\n      var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n      element.className = element.className.replace(regex, '').trim();\n    }\n\n    function hasClass(element, className) {\n      return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n    }\n\n    function next(element, className) {\n      do {\n        element = element.nextSibling;\n      } while (element && !hasClass(element, className));\n\n      return element;\n    }\n\n    function text(element) {\n      return element.innerText || element.textContent;\n    }\n  })(window, document, Chartist);\n\n  return Chartist.plugins.tooltips;\n});\n\n/***/ })\n\n}]);","inputSourceMap":null}